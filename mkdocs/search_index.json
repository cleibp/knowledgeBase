{
    "docs": [
        {
            "location": "/",
            "text": "KnowledgeBase \n\n\n P\u00e1gina criada com a finalidade de oferecer uma base de conhecimentos com base em meu ponto de vista.\n\n\n\n\nVSCODE\n\n\nEXTENS\u00d5ES E PLUGINS\n\n\n1. Auto Close Tag - Serve para fechar tags automaticamente\n2. Auto Rename Tag - Se voc\u00ea altera o nome na abertura da tag, altera automaticamente no final.\n3. Bracket Pair Colorizer - Colore as chaves de forma que n\u00e3o confunda quando aninhadas\n4. Color Highlight - Ao digitar uma cor, Seja em HEX, RGB ou nome, automaticamente a cor \u00e9 mostrada, como background da palavra\n5. HTML Snippets - Atalhos para gerar html\n6. Intellisense for CSS class names in HTML - autocompleta os nomes das classes do css\n7. TODO Highlight - Tu pode configurar pra mais, mas ao comentar TODO: , FIXIT: fica destacado para uma anota\u00e7\u00e3o importante\n8. GraphQL for VScode - \u00c9 um syntax highlight pra codar em grapql\n9. Import Cost - Bem importante pra ver o tamanho dos imports das libs que voc\u00ea faz no seu projeto, mostrando ela normal e gizipada\n10. Indenticator - Mostra o bloco de codigo que voc\u00ea est\u00e1, meio inutil nas novas vers\u00f5es do Vscode, pois h\u00e1 nativamente j\u00e1.\n11. Es7 react/redux/graphql/react-native -Extens\u00f5es do react e snippets do ES7\n12. ESLint - MUITO IMPORTANTE Ajuda a padronizar seu codigo e ter boas condutas ao codar ( te faz um programador melhor, ao longo do tempo)\n13. Quokka.js - Da pra codar Js e ver os resultados em tempo real direto no editor, bom pra testar umas logicas r\u00e1pidas\n14. REST Client - tu faz requisi\u00e7\u00f5es no pr\u00f3prio editor e obt\u00e9m as respostas para ver se ta tudo certo..etc\n15. JSON Tools - Formatar, minificar e manipular JSON, uma maravilha para quem trabalha com bastante jsons..\n16. Vetur - IMPORTANTE* Pra quem trabalha com Vue \u00e9 indispens\u00e1vel, H\u00e1 snippets, syntax-highlihting, Emmet, Linting / Error Checking, formatting, auto Completion, e debug.\n17. Version Lens - Mostra vers\u00f5es de suas libs e diz se h\u00e1 uma nova vers\u00e3o ou se a sua est\u00e1 depreciada.\n18. Configura pra formatar e deixar o codigo bonitinho\n19. VS Live Share - Permite voc\u00ea mais outras pessoas codarem o mesmo codigo em tempo real :) (muito cuidado kkkkkk)\n20. JavaScript (ES6) code snippets - Snippets pra features do ES6\n21. Babel es6/es7 - colore e ajuda na visualiza\u00e7\u00e3o das features do es6 e es7\n22. Path Intellisense - Te mostra e completa caminhos pra importar algo\n23. Dracula official - Apenas um tema que adoro muito :)\n24. Material Icon theme - apenas pack de icons para ajudar na visualiza\u00e7\u00e3o dos arquivos\n25. todotree\n26. azure cosmodb conectar no mongo\n27. image preview preview da imagem\n28. preview markdown preview de markdown\n\n\n\n\n\nCOMANDOS CURTOS\n\n\n* CTRL + shift + p (configura\u00e7\u00f5es)\n* CTRL + p (listar arquivos)\n* alt + seta cima/ seta baixo (mover linha(s))\n* alt + seta esquerda/ seta direita (mover entre palavras)\n* shift CTRL K (apagar linha)\n* CTRL f (localizar dentro do arquivo)\n* alt  CTRL f (localizar e substituir dentro do arquivo)\n* CTRL d/b alterar mesmas vari\u00e1veis\n* emmet html>body>div.conteudo\n\n\n\n\n\nLINUX\n\n\nTELA\n\n\nTela GRUB do boot\n\n\n\n\n\nDIRET\u00d3RIOS\n\n\n* raiz (/)\n* Bin\u00e1rios execut\u00e1veis: /bin (cp, mv, ping e grep)\n* Bin\u00e1rios do sistema: /sbin (ifconfig, fdisk)\n* Programas diversos: /usr\n* Configura\u00e7\u00f5es do sistema: /etc\n* Bibliotecas: /lib\n* Opcionais: /opt\n* Aquivos pessoais: /home\n* Inicializa\u00e7\u00e3o: /boot\n* Volumes e m\u00eddias: /mnt e /media\n* Servi\u00e7os: /srv\n* Arquivos de dispositivos: /dev (usb)\n* Arquivos vari\u00e1veis: /var\n* Processos do sistema: /proc\n* Arquivos tempor\u00e1rios: /tmp\n\n\n\n\n\nCOMANDOS\n\n\nCancela comando\n\n\nCTRL + C \n\n\n\n\n\nAutocompletar\n\n\ntab\n\n\n\n\n\nRetorna comandos anterior\n\n\nSeta para cima e seta para baixo\n\n\n\n\n\nSistema\n\n\nuname\n\n\n\n\n\nData\n\n\ndate\n\n\n\n\n\nCalendario\n\n\ncal\n\n\n\n\n\nHora\n\n\ntime\n\n\n\n\n\nRetorna os \u00faltimos 1000 comando no console\n\n\nhistory\n\n\n\n\n\nV\u00e1rios comandos juntos\n\n\ndate; cal\n\n\n\n\n\nCalculadora\n\n\nbc\n2+2\nsqrt(81)\n\n\n\n\n\nCaminho atual\n\n\npwd\n\n\n\n\n\nEntrar ou sair de um diret\u00f3rio\n\n\ncd\ncd ..\ncd / (raiz)\ncd enter (diret\u00f3rio padr\u00e3o)\n\n\n\n\n\nListar o conte\u00fado de um diret\u00f3rio\n\n\nls\nls -l (lista mostrando os tipos)\nls -la (lista mostrando os tipos e quem esta oculto\ncome\u00e7a com d = diret\u00f3rio\ncome\u00e7a com l = link\ncome\u00e7a com - = arquivo\n\n\n\n\n\nLimpar a tela do console\n\n\nclear\n\n\n\n\n\nCriar arquivo com texto\n\n\ntouch arquivo.txt\n> teste01\n\n\n\n\n\nCriar pasta\n\n\nmkdir pasta\n\n\n\n\n\nRenomear ou Mover\n\n\nmv message.txt message2.txt\n\n\n\n\n\nRemover pasta\n\n\nrm -rf pasta\n\n\n\n\n\nCopiar de caminho para outro\n\n\ncp minhapasta1/message.txt minhapasta2\n\n\n\n\n\nMostra o conteudo de um arquivo\n\n\ncat arquivo\necho conteudo > arquivo\n\n\n\n\n\nMostrar manual de um comando\n\n\nman echo\n\n\n\n\n\nExibir os dados de IP\n\n\nifconfig\n\n\n\n\n\nCriar usu\u00e1rio\n\n\nadduser teste\n\n\n\n\n\nCriar senha\n\n\npasswd teste\n\n\n\n\n\nAcessar o usu\u00e1rio\n\n\nsu teste\n\n\n\n\n\nRemover o usu\u00e1rio\n\n\ndeluser teste\n\n\n\n\n\nExibir o conteudo desse arquivo\n\n\ncat /etc/passwd\ntac arquivo (mostra o conte\u00fado com as linhas invertidas)\n\n\n\n\n\nMostrar o conteudo desse arquivo no editor NANO\n\n\nnano /etc/network/interfaces\n\n\n\n\n\nRede\n\n\nnetstat -nlpt\n\n\n\n\n\nAtualizar reposit\u00f3rio\n\n\napt-get update\n\n\n\n\n\nAtualizar reposit\u00f3rio\n\n\napt-get upgrade\n\n\n\n\n\nMostra qual \u00e9 meu usuario\n\n\nwhoami\n\n\n\n\n\nInforma\u00e7\u00f5es do linux\n\n\nuname -s -r\n\n\n\n\n\nPermiss\u00e3o\n\n\nchmod 777 arquivo.txt\n\n\n\n\n\nChow cleiton: cleiton arquivo.txt\n\n\nDono\n \n\n\nchow -R 777 * .\n\n\n\n\n\nAbrir com terminal e em background\n\n\nfirefox &\n\n\n\n\n\nListar processo\n\n\ntop\n\n\n\n\n\nMatar processo\n\n\nkill -9 98989\n\n\n\n\n\nReiniciar\n\n\nsudo shutdown -r now\nreboot\n\n\n\n\n\nDesligar\n\n\nsudo shutdown -h now\nshutdown -h 1 (vai desligar em 1 minuto)\nhalt\nSair do terminal\nexit\n\n\n\n\n\nSHELL SCRIPT\n\n\nvariavel= \u201cola\u201d\necho \"$variavel\"\n\n\n\n\n\nread teste\necho \"foi $teste\"\n\n\n\n\n\n$USER\n$SHELL\n$PATH\n\n\n\n\n\n-lt <\n-gt >\n-le <=\n-ge >=\n-eq ==\n-ne !=\n\n\n\n\n\nread nota\nif (\"$nota\" -ge \"6\")\nthen\necho \"passou\"\nelse\necho \"rodou\"\nfi\n\n\n\n\n\nfor i in ${seq 1 10}\ndo\necho \"$1\"\ndone\n\n\n\n\n\nVIM/VI\n\n\nCOMANDOS\n\n\nAbrir o arquivo\n\n\nvim arquivo.txt\n\n\n\n\n\nAbrir o arquivo e colocar o cursor no fim\n\n\nvim arquivo.txt + \n\n\n\n\n\nAbrir o arquivo e colocar o cursor na linha 8\n\n\nvim arquivo.txt +8\n\n\n\n\n\nAbre na linha que tiver bsd\n\n\nvim arquivo.txt +/bsd\n\n\n\n\n\nAbre v\u00e1rios arquivos\n\n\nvim -o arquivo.txt arquivo2.txt\n\n\n\n\n\nSalvar arquivo\n\n\nesc : w \n\n\n\n\n\nSair\n\n\nesc : q\n\n\n\n\n\nSalvar e sair\n\n\nesc : w q\n:x\nzz\n\n\n\n\n\nSair sem salvar\n\n\nesc : q!\n\n\n\n\n\nSalvar\n\n\nesc : set autowrite\n:set aw\n\n\n\n\n\nDesfaz\n\n\nesc v\n\n\n\n\n\nSalva tudo aberto\n\n\nesc : w a \n\n\n\n\n\nSalva e sai de todos\n\n\nesc : wqa\n\n\n\n\n\nFim da linha\n\n\nesc $ \n\n\n\n\n\nInicio da linha\n\n\nesc ^\n\n\n\n\n\nFim do arquivo\n\n\nesc :$ (dois pontos cifrao)\nesc G\n\n\n\n\n\nInicio do arquivo\n\n\nesc gg\n\n\n\n\n\nLinha 8\n\n\nesc :8\nesc 8G\n\n\n\n\n\nPula para pr\u00f3xima palavra\n\n\nesc w\n\n\n\n\n\nPula para palavra anterior\n\n\nesc b\n\n\n\n\n\nPula para frase anterior\n\n\nesc [\n\n\n\n\n\nPula para frase posterior\n\nesc ]\n\n\nPula para paragrafo anterior\n\n\nesc {\n\n\n\n\n\nPula para paragrafo posterior\n\n\nesc }\n\n\n\n\n\nPesquisar palavra linux\n\n\nesc /linux\n\n\n\n\n\nInsere na onde est\u00e1\n\n\nesc i\n\n\n\n\n\nInsere ap\u00f3s a posi\u00e7\u00e3o\n\n\nesc a\n\n\n\n\n\nInsere nova linha ap\u00f3s\n\n\nesc o\n\n\n\n\n\nInsere reescrevendo\n\n\nesc r\n\n\n\n\n\nPara cima\n\n\nesc K\n\n\n\n\n\nPara direita\n\n\nesc l\n\n\n\n\n\nPara esquerda\n\n\nesc h\n\n\n\n\n\nPara baixo\n\n\nesc j\n\n\n\n\n\nSeleciona o paragrafo\n\n\nesc shift v\n\n\n\n\n\nREDES\n\n\ncd /etc/network/interfaces\nvi interfaces\n12 #\n13 auto enp0s3\n14 iface enp0s3 inet static\n15 address 192.168.25.242\n16 netmask 255.255.255.0\n17 network 192.168.25.0\n18 broadcast 192.168.25.255\n19 gateway 192.168.25.1\n\nvi /etc/resolv.conf\nnameserver 192.168.25.1\n\n\n\n\n\nCalcular IP\n\n\napt-get install ipcalc\nipcalc 192.168.0.10\n\n\n\n\n\nRestartar o Apache\n\n\nsystemctl restart apache2\n\n\n\n\n\nVPN\n\n\nVIRTUAL PRIVATE NETWORK\n\n\n\n\n\nSEGURAN\u00c7A\n\n\nPilares: Confidencialidade; Integridade; Disponibilidade\n\n\n\n\n\nBACKUP\n\n\nTipos\nfull, incremental\n\n\n\n\n\nGerenciadores de Backup\n\n\nBackupPC, Amanda, Bacula\n\n\n\n\n\nAtaques\n\n\n* SPOOFING\n* SMURF ATTACK\n* SNIFFING\n* CAVALO DE TR\u00d3IA\n* FOR\u00c7A BRUTA\n* DESFIGURA\u00c7\u00c3O DE SITE\n* DOS\n* DDOS\n\n\n\n\n\nEMULA REDE\n\n\nGNS3 \nPACKETTRACE\n\n\n\n\n\n\nMODELO OSI\n\nOpen System Interconnection \n\n\n7 Camadas\n \n\n\n* Aplica\u00e7\u00e3o\n* Apresenta\u00e7\u00e3o\n* Ses\u00e3o\n* Transporte\n* Rede\n* Enlace\n* F\u00edsica\n\n\n\n\n\nAn\u00e1lise Top Down do Modelo OSI\n\n\n* Aplica\u00e7\u00e3o\n* Apresenta\u00e7\u00e3o\n* Ses\u00e3o\n* Transporte\n* Rede\n* Enlace\n* F\u00edsica\n\n\n\n\n\nExemplos\n\n\n* FISICA = REPETIDOR/HUB\n* ENLACE = PONTE/BRIDGE\n* ENLACE = SWITCH\n\n\n\n\n\nTipos de Redes\n\n\n* PAN = Rede pessoal\n* LAN = Rede Local\n* MAN = Rede Metropolitanea\n* WAN = Rede de Longa Dist\u00e2ncia\n* DAN = Rede Departamental\n* GAN = Rede Global\n\n\n\n\n\nWIRELESS WIFI\n \n\n\nWIRE CABO\nLESS SEM\n\n\n\n\n\nINTERFERIR NA REDE SEM FIO\n\n\nMICROONDA / TELEFONE SEM FIO PODEM \n\n\n\n\n\nSoftware para rede\n\n\nWIFI DEADSPOT\nWIFI ANALYZE\n\n\n\n\n\nPENTEST\n\n\nTeste de penetracao = teste de intrusao\n\n\n\n\n\nFerramentas\n\n\n* ferramentas de engenharia social\n* ferramentas de trojan\n* ferramentas de for\u00e7a bruta\n* The Harveste\n* Net craft ferramenta para analisar um dom\u00ednio\n* fierce ferramenta de for\u00e7a bruta\n* fierce -dns site\n\n\n\n\n\nComando site\n\n\nsite: acunetix login\nsite: acutenix filetype:txt\nlink: acutenix login\nsite: acunetix intitle: password\nsite: XXX intitle: \u201cindex.of\u201d \u201cattachments\u201d\n\n\n\n\nNikito\n\n\nnikto -H\nnikto -h site -Tuning 9\nnikto -h site\n\n\n\n\nANDROID\n\n\nDEFINI\u00c7\u00c3O\n\n\nSO baseado em linux usado em smartphone, tv, rel\u00f3gios.\n\n\n\n\n\nApps do SO\n\n\nApps do Usu\u00e1rio\n\n\n\n\n\nVERS\u00d5ES\n\n\n* Honeycomb\n* Ice Cream Sandwich\n* Jelly Bean\n* KitKat\n* Lolipop\n* Marshmallow\n* Nougat\n* Oreo\n* Pig\n\n\n\n\n\nGIT\n\n\nInstala\u00e7\u00e3o Linux\n\n\nsudo apt-get update\nsudo apt-get install git\n\n\n\n\n\nVers\u00e3o\n\n\ngit --version\n\n\n\n\n\nConfigura\u00e7\u00e3o\n\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"youremail@domain.com\"\n\ngit config --list\n\n\n\n\n\nClonando/Copiando\n\n\ngit clone https://github.com/cleibp/baseLinks.git\n\n\n\n\n\nVerificando os status\n\n\ngit status\n\n\n\n\n\nAdicionando os arquivos\n\n\ngit add .\n\n\n\n\n\nCommit\n\n\ngit commit -m \"aasa\"\n\n\n\n\n\nEnviando/Empurrando\n\n\ngit push\n\n\n\n\nJAVASCRIPT\n\n\nDEFINI\u00c7\u00c3O\n\n\nJavascript !== Java\nLivescript Javascript Ecmascript\nEcma = comite\nPOO baseada em prototipos\nsincrono = if, while, for\nassincrono = setTimout\nNavegadores (MOSAIC, Netscape, IE, Opera, Safari, Firefox, Chrome, Edge)\nVari\u00e1vel \u00e9 espa\u00e7o de mem\u00f3ria para armazenar um valor e identificador \u00e9 nome da vari\u00e1vel;\nCase sensitive;\nPalavras reservadas;\nComent\u00e1rio de uma linha //\nComent\u00e1rio para v\u00e1rias linhas /* */\nfracamente tipado\nTipos de dados primitivos (String, number, boolean, undefined, null)\nTipos de dados refer\u00eancia (object, array, function, date, RegExp, Error)\nobjeto window escopo global\nOperadores(aritm\u00e9ticos, atribui\u00e7\u00e3o, compara\u00e7\u00e3o, l\u00f3gicos, tern\u00e1rio, un\u00e1rio)\nHoisting = eleva\u00e7ao ( move a declaracao para o topo do m\u00e9todo)\nnotacao literal de objetos != javascript object anotation\nEstrutura de Controle  (If else; switch)\nEstrutura de Repeti\u00e7\u00e3o (for while do while)\n\n\n\n\n\nVari\u00e1vies e tipos\n\n\nvar nome;\nnome = \u201cCleiton\u201d\nvar idade = 34;\nvar salario = 3277.22;\nvar vr = true;\n\n\n\n\n\nConcantenado\n\n\nvar dado1 = \u201cBom\u201d\nvar dado2 = \u201cDia\u201d\nvar dado3 = \u201cBrasil \\\n. \\\nAcorda\u201d\nvar dados = dado1 + \u201c\u201d + dado2  + dado3\n\n\n\n\n\nVerificando o tipo\n\n\nvar whoAmI = \u201cteste\u201d\ntypeof whoAmI\n\n\n\n\n\nValores Falso\n\n\n!! \u201c\u201d\n!!0\n!!-0\n!!null\n!! undefined\n!!NaN\n\n\n\n\n\nValores True\n\n\n!!Array\n!!Object\n!!Function\n\n\n\n\n\nUndefined != Null\n\n\ntpeof undefined\ntypeof null\n\n\n\n\n\nOPERADORES\n\n\nARITM\u00c9TICOS (+ - * / % ++ \u2013 **)\nvar soma = 20 + 20\n\nUN\u00c1RIO\ntypeof soma\n\n\nATRIBUI\u00c7\u00c3O ( =  += -= *= /= %= **= )\nvar  numero   = 10\nnumero += 2\n\nCOMP\u00c1RA\u00c7\u00c3O ( > < <= >= != )\nvar n1 = 10\nvar n2 = 10\nvar r =  n1 == n2\n\nL\u00d3GICOS (&& || ! )\nvar res = (n1 > n2) && (n1> n3)\nvar res = (n1 > n2) || (n2 > n3)\n var res = n1 != n2\n\nTERN\u00c1RIO\nvar idade = 18\nidade >= 18 ? \u201cmaior\u201d : \u201cmenor\u201d \n\nOUTROS TIPOS DE OPERADORES\n( typeof  instanceof  in . [] new)\n\nvariavel instanceof String\n\nvar objeto = {nome: \u201cCleiton\u201d}\nnome in objeto\n\nvar array = new Array(\u201ca\u201d, \u201cb\u201d, \u201cc\u201d)\n0 in array\n\nvar objeto = {nome: \u201cCleiton\u201d, teste: true}\ndelete  objeto.teste\n\nvar array = [\u201ca\u201d, \u201cb\u201d, \u201cc\u201d]\ndelete array[0]\n\n\n\n\n\nARRAY\n\n\nvar array = []\narray[0] = \u2018teste\u2019\narray.push(\u201cteste 2\u201d)\nconsole.log(array)\n\nvar nomes = [\u2018Paulo\u2019, \u2018Joao\u2019, \u2018Maria\u2019]\nconsole.log(nomes)\nconsole.log(nomes[0])\nconsole.log(nomes.length)\n\nvar numeros = new Array();\nvar numbers = new Array(25, 30, 50);\n\nvar tipagem = [\n\u201cstring\u201d,\n25.88,\ntrue,\n{livro: \u2018JS\u2019, autor: \u2018Cleiton\u2019},\n[0, 1, 2, 3],\nfunction(a,b){\n    return a + b\n}\n]\n\nvar a = [5, 7, 9, 11]\nvar teste = 5 in a\nconsole.log(teste)\n\nvar espaco = [\u2018teste\u2019, \u2018c\u2019, ,,, true]\nespaco[20] = 20\n\nvar ultimo = [13, 14, 18, 22]\nultimo.push(24) // insere no final\nconsole.log(array)\n\nvar primeiro = [4, 5, 6, 7]\nprimeiro.unshift(1) // insere no comeco\nconsole.log(primeiro)\n\nvar excluir = [44, 55, 66, 77]\ndelete excluir[3]\nconsole.log(excluir)\n\nexcluir.pop() // deleta a ultima posicao\nconsole.log(excluir)\n\nexcluir.shift() // deleta a primeira posicao\nconsole.log(excluir)\n\nexcluir.splice(2,1) // indice e quantidade\nconsole.log(excluir)\n\nvar x = [1, 2, 3, 4, 5]\nx.length = 15\n\nObject.defineProperty(x, \u2018length\u2019, {writable: false})\nObject.getOwnPropertyDescriptores(x)\n\nvar numeros = [0, 1, 2, 3, 5]\nnumeros.join(\u201c.\u201d)\nconsole.log(numeros)\n\nvar arrayAll = [\u2018a\u2019, true, new Date()]\narrayAll.toString()\nconsole.log(arrayAll)\n\narrayAll.toLocaleString()\nconsole.log(arrayAll)\n\nvar arrayReverse = [1, 2, 3, 4, 5]\narrayReverse.reverse()\nconsole.log(arrayReverse)\n\nvar arraySort = [90, 20, 55, 95, 102]\narraySort.sort(function(x,y){\n    return x - y\n})\nconsole.log(arraySort)\n\nvar arrayConcat = [1, 2, 3, 4, 5]\narrayConcat.concat(6, 7, 8, 9, 10)\nconsole.log(arrayConcat)\n\nvar arraySice = [\u2018arroz\u2019, \u2018feijao\u2019, \u2018a\u00e7ucar\u2019, \u2018sal\u2019, \u2018oleo\u2019]\narraySice.slice(0, 3)\nconsole.log(arraySice)\n\nvar arraySplice = [1, 2, 3, 4, 5]\narraySplice.splice()\nconsole.log(arraySplice)\n\nvar arrayMap = [2, 6, 8, 10, 12]\nvar dobro = arrayMap.map(function(valorElementoArray, indiceDoArray, array) {\n    return  valorElementoArray * 2;\n})\nconsole.log(dobro)\n\nvar arrayFilter =  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\nvar menoresQueCinco =  arrayFilter.filter(function(valor, indice, array){\n    return valor < 5\n})\nconsole.log(menoresQueCinco)\n\nvar arrayEvery = [2, 9, 5, 6, 7, 15]\nvar menoresQueVinte =  arrayEvery.every(function(item, indice, array){\n    return < 20\n})\nconsole.log(menoresQueVinte)\n\nvar arraySome = [2, 9 , 5, 6, 7, 15]\nvar  menoresQueDez =  arraySome.some(function(item, indice, arrayAll){\n    return item > 10\n})\nconsole.log(menoresQueDez)\nvar arrayReduce = [1, 2, 3, 4, 5]\nvar soma = arrayReduce.reduce(function(acumulador, valorEleArray, indice, array){\n    return   acumulador + valorEleArray\n}, 0)\nconsole.log(soma)\n\nvar arrayIndexOf = [\u2018maria\u2019,  \u2018jose\u2019, \u2018paulo\u2019]\nvar resposta =  arrayIndexOf.indexOf(\u2018paulo\u2019)\nconsole.log(resposta)\n\nvar arrayLastIndexOf = [\u2018maria\u2019,  \u2018jose\u2019, \u2018paulo\u2019]\nvar resposta =  arrayLastIndexOf.lastIndiceOf(\u2018paulo\u2019)\nconsole.log(resposta)\n\n\n\n\n\nOBJETO\n\n\nvar obj =\n{\n    nome: \"Cleiton\",\n    idade: 50\n}\nvar json = JSON.stringify(obj)\n\n\n\n\n\nJSON\n\n\njson (nao aceita funcao no valor)\n{\n    \"nome\": \"Cleiton\",\n    \"idade\": 20,\n    \"filiacao\": {\n        \"pai\": \"nome do pai\",\n        \"mae\": \"nome da mae\"\n    },\n    \"cursos\": ['tecnico', 'pos'] \n}\nvar obj = JSON.parse(json)\n\nvar objPessoa = Object.create(Object.prototype)\nobjPessoa.nome = \u2018Joao\u2019\n\nvar meuObjeto = {\n    nome: \u2018Cleiton\u2019,\n    saudacao: function() {\n        return \u201cOl\u00e1\u201d + this.nome\n    }\n}\n\n\nvar pedido = new Object()\npedido.total = 400.00\nconsole.log(\u201ccliente\u201d in pedido) // verifica  se  existte\npedido.hasOwnProperty(\u201ctotal\u201d)\ndelete pedido.total\n\nvar folhaPagamento = {\n    _total: 0,\n    set total(valor) {\n        this._total = valor\n    },\n    get total() {\n        return this._total\n    }\n}\n\nfolhaPagamento.total = 77.000\nconsole.log(folhaPagamento.total)\nconsole.log(Object.getOwnPropertyDescription(folhaPagamento))\n\nvar objeto = {a:2, b: 3, c: 5}\nObject.defineProperty(objeto, \u201ca\u201d, {\n    enumerable: false,\n    configurable: false,\n})\n\nObject.seal(variavel)\nObject.isSealed(variavel)\nObject.isExtensible(variavel)\nObject.freeze(variavel)\nObject.isFrozen(variavel)\n\n\n\n\n\nObjeto window\ntypeof window\ntypeof Window\nwindow.console.log(\u201cteste\u201d)\n\n\n\n\n\nWRAPPER\n\n\nvar vstring = \u201cCurso JS\u201d\nvstring.substr(0,5)\n\nString(variavel)\nNumber(variavel)\nBoolean(variavel)\nObject(variavel)\n\n\n\n\n\n\nFUNC\u00d5ES\n\n\nfunction mensagem() {\n    console.log(\u201cOl\u00e1\u201d)\n}\nmensagem()\n\n\nfunction boasVinda(nome){\n    console.log(\u201cOl\u00e1\u201d, nome)\n}\nboasVindas(\u201cPaulo\u201d)\n\nfunction soma(valor1, valor2){\n    return valor1 + valor2\n}\nconsole.log(soma(10, 20))\n\nvar elevarQuadrado = function(numero){ return numero * numero }\nconsole.log(elevarQuadrado(8))\nvar mult = function() {return 2 * 2}()\nconsole.log(mult)\n\nvar objeto = { \n    qtde: 8, \n    valor: 10,\n    somar: function(){\n        return this.qtde * this.valor\n    }\n}\n\nconsole.log(objeto.somar())\n\n\n\n\n\nIIFE\n\n\n(function () {\n\n})()\n\n\n\n\n\nCLOSURE\n\n\nfunction makeFunc() {\n  var name = \"Mozilla\";\n  function displayName() {\n    alert(name);\n  }\n  return displayName;\n}\n\nvar myFunc = makeFunc();\nmyFunc();\n\n\n\n\n\nAN\u00d4NIMA\n\n\nvar minhaFuncao = function() {\n    console.log(\u201cfuncao\u201d)\n}\nminhaFuncao()\n\n\n\n\n\nCALLBACK\n\n\nfunction mostrarCliente(nome){\n    console.log(nome)\n}\n\nfunction realizarVenda(calback){\n    callback(\u2018Pedro\u2019)\n}\nrealizarVenda(mostrarCliente)\n\n\n\n\n\nSETTIMOUT E SETINTERVAL\n\n\nsetTimout(function(){\n\n}, 1000)\n\n\nsetInterval(function(){\n\n}, 2000)\n\n\n\n\n\n\nLiteral\n\n\nvar nome = \u201cCleiton\u201d\n\nvar numero = 30\n\nvar bool = true\n\nvar item = {}\n\nvar item = {nome: \u201crefrigerante\u201d, preco: 5.1, descricao: \u201cpet 2L\u201d}\n\nvar produtos = []\n\nvar produtos = [\u2018sorvete\u2019, \u2018biscoito\u2019, \u2018banana\u2019 ]\n\nvar regexpLiteral = /js/\nvar string = \u201cMinha expressao com js\u201d\nregexpLiteral.test(string)\nregexpLiteral.exec(string)\n\nfunction soma(v1, v2) {\n    return v1 + v2\n}\nconsole.log(soma(5,3))\n\ntry {\n\n}\ncatch () {\n\n} finally () {\n\n}\nfunction soma (a, b) {\n    return a + b\n}\n\n\n\n\n\nConstrutor\n\n\nvar nome = new String(\u2018Cleiton Bezerra\u2019)\nnome.length\nnome.charAt(2)\nnome.charCodeAt(2)\nnome.indexOf(\u201cC\u201d)\nnome.lastOf(\u201co\u201d)\nnome.concat(\u201cPaiva\u201d)\nnome.substr(\u201cCleiton\u201d)\nnome.replace(\u201ci\u201d,\u201dy\u201d)\nnome.split(\u201c/\u201d, -)\nnome.toLowerCase()\nnome.toUpperCase()\nnome.match(/d/g)\nnome.trim(()\nnome.repeat(3)\n\nvar numero = new Number(30)\nnumero.toString()\nnumero.toFixed(2)\nNumber.parseInt()\nNumber.isInteger\nNumber.isNaN\nnumero.toPrecision(6)\nnumero.isFinite(2/2)\nNumber.MAX_VALUE\nNumber.MIN_VALUE\n\nvar bool = new Boolean(true)\n\n\nvar item = new Object()\nitem.nome = \u201crefrigerante\u201d\nitem.preco = 5.1\ndescricao = \u201cpet 2L\u201d\n\nvar produtos = new Array(\u2018sorvete\u2019, \u2018biscoito\u2019,  \u2018banana\u2019)\nprodutos[0]\nprodutos[2] = \u201cmaca\u201d\n\nvar data = new Date()\nvar data = new Date(\u201c2020-10-23\u201d)\ndata.getFullYear()\ndata.getMonth()\ndata.getDay()\ndata.getDate()\ndata.getHours()\ndata.getMinutes()\n\nvar regex = new RegExp(\u2018js\u2019)\n\nthrow new Error(\u201cocorreu erro\u201d)\n\n\n\n\n\nESCOPO GLOBAL\n\n\nfora de metodo e objeto \u00e9 global\nvar a = 2 ou a = 2\n\n\n\n\n\nESCOPO LOCAL\n\n\nvariaveis dentro de objeto ou funcao\n\n\n\n\n\nconst = constante;\nvar = escopo global;\nlet = escopo local;\n\nlet nao sofre hosting\n\nvar pessoa = {nome: 'Ana', idade: 20};\nvar {nome, idade} = pessoa;\nconsole.log(nome, idade);\n\nvar {nome: n, idade: i} = pessoa;\nconsole.log(n, i);\n\nvar genero, situacao = 'Ativa'} = pessoa;\nconsole.log(genero, situacao);\n\nvar pessoa = {\n    nome: 'Ana',\n    endereco: { rua: 'A', numero: 100 }\n}\n\nvar { endereco: { rua, numero, cep } } = pessoa;\nconsole.log( rua, numero, cep);\n\nvar [a] = [10];\nconsole.log(a);\n\nvar [n1, ,n3, ,n5, n6 = 0] = [10, 7, 9, 8];\nconsole.log(n1,n3,n5,n6);\n\nvar [,[,nota]] = [[7,8,8],[9,6,8]];\nconsole.log(nota)\n\n\n\n\n\nMAP\n\n\nlet nomeString = {nome: \"Cleiton\", idade: 34}\nconst map = new Map()\nmap.set(nomeString, sexo)\nmap.get(nomeString)\nmap.delete(nomeString)\nmap.has('cleiton')\n\n\n\n\n\nWEAKMAP\n\n\nWeakMap.prototype.set()\nWeakMap.prototype.get()\nWeakMap.prototype.has()\nWeakMap.prototype.delete()\n\nconst weakMap = new WeakMap()\nweakMap.set(objeto, objeto)\nweakMap.get(objeto)\nweakMap.has(objeto)\nweakMap.delete(objeto)\n\n\n\n\n\nSET\n\n\nconst set = new Set([1, 2, 3])\nset.add(23)\nset.add({teste: 'teste'})\nset.size\nset.delete(1)\n\n\n\n\n\nWEAKSET\n\n\nconst weakSet = new weakSet()\nweakSet.add(objeto)\nweakSet.has(objeto)\nweakSet.add(objeto)\nweakSet.delete(objeto)\n\n\n\n\n\nSPREAD\n\n\nfunction mostrarNumeros(a, b, c, d){\n    console.log(a, b, c, d)\n}\nconst arrayNumeros = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nmostrarNumeros(...arrayNumeros)\n\nlet arrayLetras = [a, b, c, d]\nlet arrayNumeros = [1, 2, 3]\nlet arrayNumeros2 = [6, 8, 9]\n\nlet arraySpreed = [...arrayLetras, ...arrayNumeros, ...arrayNumeros2]\n\n\nexemplo = spread + reduce\n\n\n\n\n\nTEMPLATE STRING\n\n\nlet nome = \"Cleiton\"\nlet texto = `Template string ${5 + 5} ${nome}`\n\n\n\n\n\nARROW\n\n\nconst somar = (a, b) => {\n    return a + b;\n}\nsomar(10, 20)\n\n\n\n\n\nMELHORIAS LET\n\n\nlet nome = \"Maria\", idade = 27, sexo = \"F\"\nlet objES5 = {nome: nome, idade: idade, sexo: sexo}\nlet objES6 = {nome, idade, sexo}\n\n\n\n\n\nMELHORIAS OBJETO\n\n\nobjCalcES5 = {\n    msg: function msg() {\n        console.log('Ol\u00e1')  \n    },\n    somar: function somar(a, b) {\n        console.log(a + b)\n    }\n}\nobjCalcES5.msg()\nobjCalcES5.somar(10, 20)\n\n\nobjCalcES6 = {\n    msg() {\n        console.log('Ol\u00e1')  \n    },\n    soma(a, b) {\n        console.log(a + b)\n    }\n}\nobjCalcES6.msg()\nobjCalcES6.somar(10, 20)\n\n\nobjPropES5 = {\n    nome: \"Cleiton\"\n}\nobjPropES5[\"seq + 23\"] = 23\n\n\nobjPropES6 = {\n    nome: \"Cleiton\",\n    [\"seq + 23\"]: 23\n}\n\n\n\n\n\nMELHORIAS DESTRUTURAC\u00c2O\n\n\nlet objDest = {\n    nome: \"Cleiton\",\n    sexo: \"M\"\n    idade: 34\n} \nlet es5 = objDest.nome\nlet {nome, idade} = objDest\n\n\nlet array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet [um, dois, tres,,,,,nove, dez] = array;\n\n\nlet pessoas = [\n    {nome: 'Cleiton', telefone: '988378457'},\n    {nome: 'Lilian', telefone: '993837481'}\n]\nlet [, {nome, telefone}] = pessoas\n\n\n\n\n\nMELHORIAS CLASSE\n\n\nfunction PessoaES5(nome, cpf){\n    this.nome = nome;\n    this.cpf = cpf;\n}\nPessoaES5.prototype.nomeUpper = function() {\n    return this.nome.toUpperCase();\n}\n\nfunction FuncionarioES5(nome, cpf, matricula){\n    PessoaES5.call(this, nome, cpf);\n    this.matricula = matricula\n}\n\nvar objPessoaES5 = new PessoaES5('Cleiton', '33744628809')\nobjPessoaES5.nomeUpper()\n\nFuncionarioES5.prototype = Object.create(PessoaES5.prototype)\nFuncionarioES5.prototype.constructor = FuncionarioES5;\n\nvar objFuncionario = new FuncionarioES5(\"Cleiton\", \"3374460\",\"12346\")\n\n\n\nclass PessoaES6{\n    constructor(nome, cpf){\n        this.nome = nome;\n        this.cpf = cpf;\n    }\n    nomeUpper(){\n        return this.nome.toUpperCase(); \n    }\n}\n\nclass FuncionarioES6 extends PessoaES6{\n    constructor(nome, cpf, matricula){\n        super(nome, cpf);\n        this.matricula = matricula\n    }\n}\n\n\nvar objPessoaES6 = new PessoaES6('Cleiton', '33744628809')\nobjPessoaES6.nomeUpper()\nvar objFuncES6 = new FuncionarioES6('Antonio', '122.444.566-89', '555')\n\n\n\n\n\nDOM \u2013 MODELO DE OBJETO DIN\u00c2MICO\n\n\nAPI de acesso a elementos da p\u00e1gina\n\ngetElementById\ngetElementByTagName\ngetElementByName\ngetElementByClassName\nquerySelector\nquerySelectorAll  input[type=text]\n\ncreateElement creatTextNode\nappendChild insertBefore innerHTML\nremoveChild replaceChild\n\n\n\n\n\nIF\n\n\nvar numero = 1\nif (numero == 1) {\n    console.log(\u201c1\u201d)\n} else if (numero == 2) {\n    console.log(\u201c2\u201d)\n} else{\n    console.log(\u201coutro\u201d)\n}\n\n\n\n\n\nSWITCH\n\n\nvar numero = 1\nswitch (numero) {\n    case 1:\n        console.log(\u201c1\u201d)\n        break\n    case 2:\n        console.log(\u201c2\u201d)\n        break\n    default:\n        console.log(\u201coutro\u201d)\n        break\n}\n\n\n\n\n\nFOR\n\n\nfor (var i=0; i < 10; i++) {\n\n}\n\nFOR IN\nvar obj = {nome: \u201cCleiton\u201d, idade: 34}\nfor (var chave in obj)  {\n    console.log(chave)\n}\n\nFOR OF\nvar array = [\u201ca\u201d, \u201cb\u201d, \u201cc\u201d]\nfor (var valor of array) {\n    console.log(valor)\n}\n\n\n\n\n\nWHILE\n\n\nvar i = 0\nwhile (i < 10) {\n    console.log(\u201ci\u201d)\n    i++\n}\n\n\n\n\n\nDO WHILE\n\n\nvar i = 0\ndo {\n    console.log(\u201ci\u201d)\n} while (i < 10)\n\n\n\n\n\nHORA PARA HOSTS\n\n\nntp.br\n\n\n\n\n\nSESSIONSTORAGE\n\n\nlet key = \"Key1\";\nsessionStorage.getItem(key);\nsessionStorage.setItem(key, data: \"Cleiton\");\nsessionStorage.removeItem(key)\nsessionStorage.clear();\n\n\n\n\n\nLOCALSTORAGE\n\n\nlet key2 = \"localStorage\";\nlocalStorage.getItem(key);\nlocalStorage.setItem(key, data: \"Cleiton\");\nlocalStorage.removeItem(key)\nlocalStorage.clear();\n\n\n\n\nFERRAMENTAS NODE\n\n\nWEBPACK\n\n\nDEFINI\u00c7\u00c3O\n\n\nempacotador de modulos\nnpm install -y\nnpm install --save-dev webpack webpack-cli\nwebpack.config.js\nconst path = require('path');\n\n\n\n\n\nM\u00d3DULOS\n\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'bundle.js'\n  }\n};\n\npackage.json\ndev: \"webpack --node development --watch\",\nbuild: \"webpack --node production\",\n\nCrio as classes em seus arquivos\nCrio as instancias das classes\nimport no index.js as instancias\n\nbabel-polyfill\nlet p = new Promise(function(resolve, reject){\n    let teste = true;\n    if (teste){\n        resolve(\"ok\")\n    }else{\n        reject(\"erro\")\n    }\n})\np.then(retorno => {\n    console.log(retorno)\n}).catch(retorno => {\n    console.log(retorno)\n})\n\nnpm install --save-dev webpack-dev-server\n\n\n\n\n\npackage.json\n\n\nstart: \"webpack-dev-server --node development --open\"\n\nnpm install --save-dev style-loader\nnpm install --save-dev css-loader\n\n\n\n\nBABEL\n\n\nDEFINI\u00c7\u00c3O\n\n\nBabel \u00e9 um compilador javascript\ntransformar seu codigo moderno em uma vers\u00e3o antiga mais estavel.\n\n\n\n\n\nCOMANDOS\n\n\nnpm init -y\nnpm install --save-dev babel-cli babel-preset-env\n.babel.rc\n{\n    \"presets\": [\n        [\n          \"@babel/env\"\n        ]\n    ]\n}\n\n\n\n\n\npackage.json\n\n\nbuild: \"babel src -d dist\"\n\n\n\n\nGRUNT\n\n\nDEFINI\u00c7\u00c3O\n\n\nAutomatizador de tarefas\n\n\n\n\n\nINSTALA\u00c7\u00c3O\n\n\nnpm install load-grunt-task  grunt-contrib-connect grunt-newer grunt-contrib-copy  grunt-contrib-compress  grunt-contrib-simlink grunt-contrib-concat --save-dev\n\n\n\n\n\nARQUIVO\n\n\nGruntfile.js\nmodule.export = function(grunt) {\n    require('load-grunt-task')(grunt)\n    grunt.initConfig({\n        jshint: {\n            sample: {\n                files: 'src/*.js'           \n            }       \n        },\n        watch: {\n            sample: {\n                files: 'src/*.js',\n                tasks: 'jshint'         \n            }\n        },\n        connect: {\n            server: {\n                options: {\n                    base:'www',\n                    keepalive: true,\n                    open: {\n                        target: 'http://localhost:8000/index.html',\n                        appName: 'fff',\n                        callback: function() {\n                            console.log(\"OK\")                       \n                        }\n                    }               \n                }           \n            }       \n        }\n    })\n    grunt.loadNpmTask('grunt-contrib-jshint');\n    grunt.registerTask('default', []);\n};\n\n\n\n\n\nCOMANDO\n\n\ngrunt\ngrunt connect watch\ngrunt copy\ngrunt compress\ngrunt simlink\ngrunt concat\n\n\n\n\n\nGULP\n\n\nDEFINI\u00c7\u00c3O\n\n\nPlataforma de automatiza\u00e7\u00e3o de tarefas\n\n\n\n\n\nINSTALA\u00c7\u00c3O\n\n\nnpm install gulp gulp-sass gulp-htmlmin gulp-notify del --save-dev \nnpm install browser-sync --save-dev\n\n\n\n\n\nTAREFAS\n\n\ntask, src, dest, watch, pipe\n\n\n\n\n\nDIRET\u00d3RIOS\n\n\nsrc\ndist\n\n\n\n\n\nARQUIVO\n\n\ngulpfile.js\nvar gulp = require('gulp');\nvar html = require('gulp-htmlmin');\nvar sass = require('gulp-sass');\nvar notify = require('gulp-notify');\nvar browserSync = require('browser-sync').create();\n\ngulp.task('sass', function(){\n    return gulp.src('./src/scss/style.scss')\n        .pipe(sass({outputStyle:\"compressed\"}))\n        .on(\"error\", notify.onError(\"Error: <%= error.message %>\"));\n        .pipe(gulp.dest('./dist/'));\n        .pipe(browserSync.stream());\n});\n\ngulp.task('html', function(){\n    return gulp.src('./src/index.html')\n        .pipe(html({collapseWhitespace:true}))\n        .on(\"error\", notify.onError(\"Error: <%= error.message %>\"))\n        .pipe(gulp.dest('./dist/'));\n});\n\ngulp.task('BS', ['html', 'sass'], function(){\n    browserSync.init({\n        server: {\n            baseDir: './dist/css'       \n        }   \n    })\n    gulp.watch('./src/index.html', ['html']);\n    gulp.watch('./src/scss/style.scss', ['sass']);\n});\n\ngulp.task('default', ['BS']);\n\n\n\n\n\nCOMANDO\n\n\ngulp\n\n\n\n\nPREPROCESSADORES\n\n\nTYPESCRIPT\n\n\nDEFINI\u00c7\u00c3O\n\n\nSuper set do javascript criado pela Microsoft.\n\n\n\n\n\nINSTALA\u00c7\u00c3O\n\n\nnpm install -g typescript\n\n\n\n\n\nARQUIVO\n\n\narquivo.ts\n\nclass Pessoa {\n    nome: string\n    constructor(pessoa: string){\n        this.nome = pessoa;\n    }\n    exibirNome(){\n        return `Ola ${this.nome}`\n    }\n}\nlet pessoa = new Pessoa(\"Cleiton\");\nconsole.log(pessoa.exibirNome())\n\n\n\n\n\nVARIAVEIS\n\n\nvar p1: string = \"Ola\";\nlet p2: string = 'Bom Dia';\nconst pi: number = 3.14;\nreadonly bonus: number;\n\n\n\n\n\nTIPO DE DADOS\n\n\nlet nome: string = \"Cleiton\";\nlet numero1: number = 45;\nlet numero2: number = 12.5;\nlet ativo: boolean = true;\nlet teste: any \nlet array1: number[1, 2, 3];\nlet array2: Array<string> = ['a', 'b', 'c'];\nlet array3: any[] = ['a', 2, true]\nlet tuple: [string, number] = [\"cleiton\", 22]\nlet exemplo1: undefined;\nlet exemplo2; null;\n\n(<string> var1)\n(va1 as string)\n\n\nenum Day{SEGUNDA, Ter\u00e7a}\nlet day: Day = Day.SEGUNDA\n\n\n\n\n\nFUNCOES\n\n\nfunction func(): void {\n    console.log(\"Teste\")\n}\n\nfunction add(v1:number, v2:number, v3?:number): number{\n    if (v3 !== undefined)\n        return v1 + v2 + v3\n\n    return v1 + v2\n}\n\n\nlet sum = (n1: number, n2: number) => n1 + n2\nlet sum = (n1: number, n2: number) => { return n1 + n2 }\n\n\n\n\n\nOPERADORES\n\n\n===, !==\n\n\n\n\n\nFOR\n\n\nlet array = [\"Cleiton\", \"LLLL\"];\nfor(let i = 0; i < array.length; i++){\n}\n\nfor(let prop in array){\n}\n\nfor(let prop of array){\n}\n\n\n\n\n\nMAP\n\n\nlet nam = new Map<string, number>();\nnam.set(\"Adao\", 14);\n\n\n\n\n\nSET\n\n\nlet nameset = new Set<string>();\nnameset.add(\"Cleiton\");\nnameset.has(value: \"Cleiton\");\nnameset.delete(value: \"Cleiton\");\n\n\n\n\n\nPROMISE\n\n\nlet promise = new Promise((resolve, reject)=> {\n    let isOpen: boolean = true;\n    if (isOpen) {\n        resolve(\"open\");\n    }else {\n        reject(\"erro\");\n    }\n})\npromise.then(onfull: (res) => {\n    console.log(res);\n}).catch(onreject: (rej) => {\n    console.log(rej);\n})\n\n\n\n\n\nDECORATOR\n\n\n@course\nclass Person{\n    name: string;\n}\n\nfunction course(target: any){\n    Object.defineProperty(target.prototype, propertyKey: \"course\", attribute: {value: () => \"Typescript\"})\n}\nlet p24 = new Person();\np24.course()\n@course({\n    course: \"Dev\"\n})\n\n\n\n\n\nINTERFACES\n\n\ninterface Person {\n    name: string;\n}\n\ninterface Employee extends Person {\n    salary: number;\n}\n\nlet pe: Person = {name: \"Cleiton\"};\nlet emp: Employee = {name: \"Cleiton\", salary: 2000};\n\n\n\n\n\nCLASSES\n\n\nclass Person{\n    private _name: string;\n    constructor(name: string){\n        this._name = name;\n    }\n    print(): void{\n        console.log(`${this._name}`)\n    }\n\n    get name() {\n        return this._name\n    }\n\n    set name(value: string){\n        this._name = value;\n    }\n\n}\n\nclass Employee extends Person{\n    private _salary: number;\n    constructor(name: string, salary: number){\n        super(name);\n        this._salary = salary;\n    }\n    print(): void{\n        super.print();\n        console.log(`${this._salary}`)\n    }\n\n    get salary(): number{\n        return this._salary;\n    }\n\n    set salary(value: number){\n        this._salary = value;\n    }\n}\nlet p1 = new Person(\"Cleiton\");\nlet emp = new Employee(\"Cleiton\", 5000)\n\n\n\n\n\nNAMESPACE\n\n\nnamespace validacao {\n    let emailRegex:RegExp = ;\n    export class EmailValidacao{\n        return(): boolean{\n            return emailRegex.test(str);        \n        }\n    }\n}\n\nimport EmailValidacao = Validation.EmailValidacao\nlet emailExample = [\"lll@bol.com.br\"]\nemailExample.forEach((email) => {\n    console.log(`${new EmailValidacao().isValid(email)}`)\n})\n\n\narquivo.ts\nexport class EmailValidacao{\n    return(): boolean{\n        return emailRegex.test(str);        \n    }\n}\n\narquivo2.ts\nimport {EmailValidacao} from \"./arquivo.ts\"\n\n\n\n\n\nERRO\n\n\ntry{\n\n} catch (err) {\n    throw err;\n    console.log(\"Erro\");\n} finally {\n    console.log(\"sempre\");\n}\n\n\n\n\n\nCOMANDO\n\n\ntsc helloword.ts\n\n\n\n\n\nFRAMEWORKS JS\n\n\nANGULARJS\n\n\nBIND\n\n\n<div ng-app=\"\">\n  <p>Name: <input type=\"text\" ng-model=\"name\"></p>\n  <p ng-bind=\"name\"></p>\n</div>\n\n\n\n\n\nEXPRESS\u00d5ES\n\n\n<div ng-app=\"\">\n  <p>My first expression: {{ 5 + 5 }}</p>\n</div>\n\n\n\n\n\nM\u00d3DULOS\n\n\n<div ng-app=\"myApp\">...</div>\n\n<script>\n\nvar app = angular.module(\"myApp\", []);\n\n</script>\n\n\n\n\n\nDIRETIVAS\n\nNG-APP NG-MODEL NG-INIT NG-SHOW NG-DISABLE NG-HIDE NG-REPEAT\n\n\n<div ng-app=\"\" ng-init=\"firstName='John'\">\n\n<p>Name: <input type=\"text\" ng-model=\"firstName\"></p>\n<p>You wrote: {{ firstName }}</p>\n\n</div> \n\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n  Name: <input ng-model=\"name\">\n</div>\n\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n  Name: <input ng-model=\"name\">\n  <h1>You entered: {{name}}</h1>\n</div>\n\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n  $scope.name = \"John Doe\";\n});\n</script> \n\n<form ng-app=\"\" name=\"myForm\">\n  Email:\n  <input type=\"email\" name=\"myAddress\" ng-model=\"text\">\n  <span ng-show=\"myForm.myAddress.$error.email\">Not a valid e-mail address</span>\n</form>\n\n<form ng-app=\"\" name=\"myForm\" ng-init=\"myText = 'post@myweb.com'\">\n  Email:\n  <input type=\"email\" name=\"myAddress\" ng-model=\"myText\" required>\n  <h1>Status</h1>\n  {{myForm.myAddress.$valid}}\n  {{myForm.myAddress.$dirty}}\n  {{myForm.myAddress.$touched}}\n</form>\n\n\n<div ng-app=\"\" ng-init=\"mySwitch=true\">\n\n    <p>\n        <button ng-disabled=\"mySwitch\">Click Me!</button>\n    </p>\n\n    <p>\n        <input type=\"checkbox\" ng-model=\"mySwitch\">Button\n    </p>\n\n    <p>\n        {{ mySwitch }}\n    </p>\n\n</div>\n\n\n<div ng-app=\"\">\n\n    <p ng-hide=\"true\">I am not visible.</p>\n\n    <p ng-hide=\"false\">I am visible.</p>\n\n</div> \n\n<div ng-app=\"\" ng-init=\"names=['Jani','Hege','Kai']\">\n  <ul>\n    <li ng-repeat=\"x in names\">\n      {{ x }}\n    </li>\n  </ul>\n</div>\n\n\n\n\n\nCOMPLETO\n\n\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n  <h1 ng-click=\"changeName()\">{{firstname}}</h1>\n</div>\n\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n  $scope.firstname = \"John\";\n  $scope.changeName = function() {\n    $scope.firstname = \"Nelly\";\n  }\n});\n</script>\n\n\n\n\n\nESCOPO\n\n\n$scope.minhaVariavelTexto = \"texto\"\n\n$scope.minhaVariavelNumerica = 2\n\n$scope.ativo = true\n\n\n\n\n\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n\n<h1>{{carname}}</h1>\n\n</div>\n\n\n\n\n\n<script>\nvar app = angular.module('myApp', []);\n\napp.controller('myCtrl', function($scope) {\n  $scope.carname = \"Volvo\";\n});\n</script> \n\n\n\n\n\nFILTRO\n\n\n{ firstName | uppercase }\n{ firstName | lowercase }\n\n\n\n\n\n<div ng-app=\"myApp\" ng-controller=\"namesCtrl\">\n\n<ul>\n  <li ng-repeat=\"x in names | orderBy:'country'\">\n    {{ x.name + ', ' + x.country }}\n  </li>\n</ul>\n\n</div>\n\n\n\n\n\n<div ng-app=\"myApp\" ng-controller=\"costCtrl\">\n    <h1>Price: {{ price | currency }}</h1>\n</div> \n\n\n\n\n\n<div ng-app=\"myApp\" ng-controller=\"namesCtrl\">\n\n<table border=\"1\" width=\"100%\">\n  <tr>\n    <th ng-click=\"orderByMe('name')\">Name</th>\n    <th ng-click=\"orderByMe('country')\">Country</th>\n  </tr>\n  <tr ng-repeat=\"x in names | orderBy:myOrderBy\">\n    <td>{{x.name}}</td>\n    <td>{{x.country}}</td>\n  </tr>\n</table>\n\n</div>\n\n\n\n\n\n<script>\nangular.module('myApp', []).controller('namesCtrl', function($scope) {\n  $scope.names = [\n    {name:'Jani',country:'Norway'},\n    {name:'Carl',country:'Sweden'},\n    {name:'Margareth',country:'England'},\n    {name:'Hege',country:'Norway'},\n    {name:'Joe',country:'Denmark'},\n    {name:'Gustav',country:'Sweden'},\n    {name:'Birgit',country:'Denmark'},\n    {name:'Mary',country:'England'},\n    {name:'Kai',country:'Norway'}\n  ];\n  $scope.orderByMe = function(x) {\n    $scope.myOrderBy = x;\n  }\n});\n</script> \n\n\n\n\n\nSERVI\u00c7OS\n\n\nvar app = angular.module('myApp', []);\napp.controller('customersCtrl', function($scope, $location) {\n    $scope.myUrl = $location.absUrl();\n}); \n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $http) {\n  $http.get(\"welcome.htm\").then(function (response) {\n    $scope.myWelcome = response.data;\n  });\n});\n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $timeout) {\n  $scope.myHeader = \"Hello World!\";\n  $timeout(function () {\n    $scope.myHeader = \"How are you today?\";\n  }, 2000);\n});\n\n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $interval) {\n  $scope.theTime = new Date().toLocaleTimeString();\n  $interval(function () {\n    $scope.theTime = new Date().toLocaleTimeString();\n  }, 1000);\n});\n\n\n\n\n\nHTTP\n\n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $http) {\n  $http.get(\"welcome.htm\")\n  .then(function(response) {\n    $scope.content = response.data;\n    $scope.statuscode = response.status;\n    $scope.statustext = response.statusText;\n  });\n});\n\n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $http) {\n  $http.get(\"wrongfilename.htm\")\n  .then(function(response) {\n    // First function handles success\n    $scope.content = response.data;\n  }, function(response) {\n    // Second function handles error\n    $scope.content = \"Something went wrong\";\n  });\n}); \n\n\n\n\n\nSELECT\n\n\n<select ng-model=\"selectedCar\" ng-options=\"y.brand for (x, y) in cars\">\n</select>\n\n\n\n\n\nEVENTOS\n\n\n    ng-blur\n    ng-change\n    ng-click\n    ng-copy\n    ng-cut\n    ng-dblclick\n    ng-focus\n    ng-keydown\n    ng-keypress\n    ng-keyup\n    ng-mousedown\n    ng-mouseenter\n    ng-mouseleave\n    ng-mousemove\n    ng-mouseover\n    ng-mouseup\n    ng-paste\n\n\n\n\n\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n\n<button ng-click=\"count = count + 1\">Click me!</button>\n\n<p>{{ count }}</p>\n\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n  $scope.count = 0;\n});\n</script> \n\n\n\n\n\nINCLUDE\n\n\n<body ng-app=\"\">\n\n    <div ng-include=\"'myFile.htm'\"></div>\n\n</body> \n\n\n\n\n\nROTAS\n\n\n<body ng-app=\"myApp\">\n\n<p><a href=\"#/!\">Main</a></p>\n\n<a href=\"#!red\">Red</a>\n<a href=\"#!green\">Green</a>\n<a href=\"#!blue\">Blue</a>\n\n<div ng-view></div>\n\n<script>\nvar app = angular.module(\"myApp\", [\"ngRoute\"]);\napp.config(function($routeProvider) {\n  $routeProvider\n  .when(\"/\", {\n    templateUrl : \"main.htm\"\n  })\n  .when(\"/red\", {\n    templateUrl : \"red.htm\"\n  })\n  .when(\"/green\", {\n    templateUrl : \"green.htm\"\n  })\n  .when(\"/blue\", {\n    templateUrl : \"blue.htm\"\n  });\n});\n</script>\n</body>\n\n\n\n\n\n\nANGULAR\n\n\nDEFINI\u00c7\u00c3O\n\n\n> 2 rescrito com typescript, spa, web, mobile, desktop\n\n\n\n\n\nINSTALA\u00c7\u00c3O\n\n\nnpm install -g @angular/cli\n\nnpm install bootstrap jquery popper\nangular.json adicionar os styles e scripts\n\n\n\n\n\nCOMANDO\n\n\nng new myapp\ncd myapp\nng serve ou ng serve --open \nporta 4200\nng build\nng build --prod\n\nng --version\n\n\n\n\n\nCOMPONENTES\n\n\nng g c /componentes/home/home-carousel\n\nimport {HomeComponente} from 'componentes/home/home-carousel.component'\n\n\n<a [router-link]=['home/home-carousel'] routerLinkActive=\"router-link-active\"> Home </a>\n\n<router-outlet><router-outlet>\n\n\n\n\n\nDECORATORS\n\n\n@NgModule, @Component\n\n\n\n\n\nCLASSES\n\n\nng generate class classes/ConfigClass\n\n\n\n\n\nSERVI\u00c7OS\n\n\nng generate service servicos/galeria/galeria\n\n\n\n\n\nBIBLIOTECAS\n\n\nngBootstrap\n\n\n\n\n\nEVENTOS\n\n\nngOnInit()\n(change) = \"\"\n(click) = \"\"\n\n\n\n\n\nDIRETIVAS\n\n\n*ngIf, \n*ngSwitch \n*ngFor = \"\"\n[hidden] = \"\"\n[formGroup] = \"\"\nformControlName = \"\"\n(ngSubmit) = \"onSubmit()\"\n[(ngModel)] = \"pessoa.id\"\n\n\n\n\n\nFILTROS\n\n\n{{ filtro.nome |uppercase }}\n{{ filtro.nome |lowercase }}\n{{ filtro.salario |currency }}\n\n\n\n\n\nPACKAGE.JSON\n\n\n\"scripts\": {\n    \"ng\": \"ng\"\n    \"start\": \"ng serve\"\n    \"build\": \"ng build\"\n    \"test\": \"ng test\"\n    \"lint\": \"ng lint\"\n    \"e2e\": \"ng e2e\"\n}\n\n\n\n\n\nCOMANDOS IMPORTANTES\n\n\nnpm install -g @angular/cli\n\nng --version\n\nng new myapp\n\ncd myapp\n\nng serve ou ng serve --open  \n(porta 4200)\n\nng build\n\nng build --prod\n\n\n\n\n\nVUEJS\n\n\nnew Vue({\n    el: '#app'.\n    data: {\n        msg: 'Teste',\n        idade: 34,\n        frutas: ['ma\u00e7\u00e3', 'banana', 'uva'],\n        aluno: {nome: 'Cleiton', ra: '23232'},\n        url: 'http://vuejs.org',\n        texto: '<b> teste </b>',\n        input: '',\n        show: true\n    },\n    methods: {\n        minhaFuncao(){\n            return this.frutas\n        },\n        alert(event){\n            event.target.style = \"background: red\";\n        }\n    }\n})\n\n\n\n\n\nBIND\n\n\n<img v-bind:src=\"img\" v-bind:title></img>\n\n\n<a v-bind:href=\"url\"> Vue</a>\n\nv-bind:src = :src \nv-bind:title = :title\nv-bind:href = :href\n\nv-bind:class=\"{red: colors.vermelho}\"\n\n\n\n\nTEXTO\n\n\n<p v-text=\"texto\"> Paragrafo</p>\n\n\n\n\n\nHTML\n\n\n<div v-html=\"texto\"> Div </div>\n\n\n\n\n\nMODEL\n\n\n<input type=\"text\" v-model=\"input\">\n\n\n\n\n\nIF/ELSE\n\n\n<p v-if=\"show == true\"> 1</p>\n<p v-else=\"show == false\"> 2</p>\n\n\n\n\n\nFOR\n\n\n<ul>\n    <li v-for=\"(fruta, index) in frutas\"> {{fruta}}</li>\n</ul>\n\n\n\n\n\nCLICK\n\n\n<button v-on:click=\"minhaFuncao()\"> \n    Bot\u00e3o \n</button>\n\nv-on:click = @click\n:click = nao pode pq come\u00e7a a chamar direto\n\n<form v-on:submit.prevent=\"minhaFuncao\">\n</form>\n\nv-on:keyup.enter=\"minhaFuncao()\"\nv-on:keyup.space=\"minhaFuncao()\"\n\n\n\n\n\nCOMANDOS IMPORTANTES\n\n\nnpm install -g @vue/cli\n\nvue --version\n\nvue create myapp\n\ncd myapp\n\nnpm run serve\nporta 8080\n\n\n\n\n\nREACT\n\n\nusa jsx que \u00e9 dom virtual\n\n\nCLI\n\n\nnpm install -g create-react-app\n\ncreate-react-app --version\n\nnpx create-react-app myapp\n\ncd myapp\n\nnpm start (rodando na porta 3000)\n\n\n\n\n\nExemplos\n\n\nExemplo 1\n\n\nsrc/app.js\n\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\n\nReactDom.render(\n    <h1>Ol\u00e1 mundo</h1>,\n    document.getElementById(\"app\")\n);\n\n\n\n\n\nindex.html\n\n\n<html>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"/js/app.min.js\"></script>\n</body>\n<html>\n\n\n\n\n\nExemplo 2\n\n\nsrc/components/App.js\n\n\nimport React from 'react';\n\nexport default class App extends React.Component {\n    render() {\n        return <h1> Ol\u00e1 Mundo </h1>\n    }\n}\n\n\n\n\n\nsrc/app.js\n\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/App';\n\nReactDom.render(\n    <App />,\n    document.getElementById(\"app\")\n);\n\n\n\n\n\nindex.html\n\n\n<html>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"/js/app.min.js\"></script>\n</body>\n<html>\n\n\n\n\n\nCOMANDOS IMPORTANTES\n\n\nnpm install -g create-react-app\n\ncreate-react-app --version\n\nnpx create-react-app myapp\n\ncd myapp\n\nnpm start\nporta 3000\n\n\n\n\n\nFRAMEWORKS MOBILE\n\n\nIONIC\n\n\nDEFINI\u00c7\u00c3O\n\n\nplataforma mobile\n\n\n\n\n\nINSTALA\u00c7\u00c3O\n\n\nnpm install ionic cordova -g\nionic start exemplo blank\ncd exemplo\n\nionic cordova platform add ios\nionic cordova run ios\n\nSubstitute ios for android if not on a Mac.\n\n\nnpm install -g ionic@latest\n\n\n\n\n\nCOMANDOS\n\n\nionic -v\nionic start myapp tabs\nionic start exemplo sideMenu --type=angular\nionic serve\n\n\nionic g page sobre\n\n\nAplicativo do celular para rodar\nionic dev\n\n\n\n\n\nESTRUTURA\n\n\nconfig.xml (configura\u00e7\u00f5es para ios e android)\nresources (para android e ios)\nsrc (codifica\u00e7\u00e3o)\n\n\n\n\n\nDIRETIVAS\n\n\nBaseado no angular\n\n\n\n\n\nBIBLIOTECAS\n\n\nnpm i firebase angularfire2\n\n\n\n\n\nNATIVESCRIPT\n\n\nCOMANDOS\n\n\ntns create exemplo --template angular\ncd exemplo\ntns run android\n\ntns resources generate splashes \n\n\n\n\n\nDIRETIVAS E ARQUITETURA\n\n\nBaseado no angular\n\n\n\n\n\nJAVA\n\n\nDEFINI\u00c7\u00c3O\n\n\nbaseada em C, OO\ncriada pela SUN Microsystem por meio do projeto Green chefiado por James Gosling\nmaskote duke\nmultiplataforma\n\n\n\n\n\nCOMANDOS\n\n\njava -version\njavac exemplo.java\njava exemplo\n\n\n\n\n\nCONCEITOS\n\n\nJVM -> Maquina Virtual JAVA\nJRE -> Ambinte de Execu\u00e7\u00e3o Java\nJDK -> Kit de Desenvolvimento Java\n\n\n\n\n\nEscrever na tela\n\n\nSystem.out.println(\"Teste\")\n\n\n\n\n\nCOMENT\u00c1RIOS\n\n\n// Uma linha\n\n/*\nVarias \nLinhas\n*/\n\n\n\n\n\nVARI\u00c1VEIS\n\n\nString nome = \"Cleiton\";\n\n\n\n\n\nCONSTANTES\n\n\nfinal PI = 3.14;\n\n\n\n\n\nTIPOS DE DADOS\n\n\nString nome = \"Meu Nome\";\nInteger idade = 43;\nDouble d = 10.2;\nFloat f = 100.45;\nboolean ativo = true;\n(Long Short Byte)\n\n\n\n\n\nOPERADORES\n\n\nARITM\u00c9TICOS + - * / %\nL\u00d3GICOS && || !\nCOMPARA\u00c7\u00c3O = != > < >= <=\n\n\n\n\n\nENTRADAS DE DADOS\n\n\nInteger valor;\nScanner scanner = new Scanner(System.in);\nSystem.out.println(\"Informe um numero\");\n\nvalor = scanner.nextLine();\nSystem.out.println(valor + 1);\n\nString nome = \"Cleiton\";\nString sobrenome = \"Paiva\";\nString nomeCompleto = nome + \"\" + sobrenome;\n\n\n\nint a1 = 10; // tipo primitivo\nInteger a2 = 10; // tipo oo a objeto tem m\u00e9todos\n\n\n\n\n\nFUN\u00c7\u00d5ES\n\n\nprivate helloWorld(String str) {\n    return \"Tamanho\" + str.length() + \"palavra\"\n}\n\npublic static void main(String[], args){\n    Funcoes funcoes = new Funcoes();\n    System.out.println(helloWorld(\"Ola\"));\n}\n\n\nString nome = \"Cleiton\";\nnome.charAt(0)\nnome.startsWith(\"C\");\nnome.endsWith(\"on\");\nnome.substring(0,2);\nnome.toUpperCase();\nnome.toLowerCase();\nnome.trim();\nnome.length();\n\n\n\n\n\nEXCE\u00c7\u00d5ES\n\n\ntry{\n    String str = \"Bla Bla\";\n    str.charAt(200);\n}catch(e){\n    System.out.println(e);\n}finally {\n    System.out.println(\"Exce\u00e7\u00e3o\");\n}\n\n\n\n\n\nKOTLIN\n\n\nDEFINI\u00c7\u00c3O\n\n\ncriada pela JetBrains\nbaseada JAVA, C#, Scala e Grovy\nfocada para plataforma Android\n\n\n\n\n\nCOMENTARIOS\n\n\n// uma linha\n\n/*\nDuas\nlinha\n*/\n\n\n\n\n\nESCREVER NA TELA\n\n\nprintln(\"Hello World\")\nprint(\"OI\")\n\n\n\n\n\nVARIAVEL\n\n\nvar idade = 19\n\n\n\n\n\nCONSTANTE\n\n\nval PI = 3.14\n\n\n\n\n\nINTERPOLA\u00c7\u00c3O\n\n\nprintln(\"idade $idade\")\n\n\n\n\n\nTIPO DE DADOS\n\n\nvar nome: String\nvar idade: Int\nvar salario: Double\nvar x: Float\nvar ativo: Boolean\nvar paises = arrayOf(\"Brasil, Colombia\", \"Chile\")\npaises[0] = \"Bolivia\"\npaises.count()\npaises.reverse()\npaises.sortBy()\n\nvar cores = arrayListOf<String>(\"Vermelho\", \"Branca\")\ncores.add(\"Azul\")\ncores.remove(\"Branca\")\ncores.size\ncores.last()\nvar ultimo = cores[cores.size - 1]\n\n\n\n\n\nCONVERS\u00c3O\n\n\nx.toString()\nx.toInt()\nx.toFloat()\nx.toDouble()\n\n\n\n\n\nENTRADA E SAIDA\n\n\nvar x = readLine()?toInt()!!\n\nimport javax.swing.JOptionPane\nfun main(args: Array<String>){\n    var nome = JOptionPane.showInputDialog(\"Digit o nome\")\n    var saida = String.format(\"%s %s\", \"Bem Vindo\", nome)\n    JOptionPane.showMessageDialog( parentComponent: null, saida)\n}\n\n\n\n\n\nOPERADORES\n\n\nARITMETICOS +, -, *, /, %\n\nCOMPARA\u00c7\u00c3O ==, !=, >, <, >=, <=, \nx is Int \n\nL\u00d3GICOS && || !\n\nATRIBUI\u00c7\u00c3O =, +=, -=, *=, /=\n\n\n\n\n\nIF\n\n\nif(a>b){\n    print(\"A\")\n}else if(b>a){\n    print(\"B\")\n}else{\n    print(\"A = B\")\n}\n\n\nidade in 1..17\n\n\n\n\n\nWHEN\n\n\nwhen(idade){\n    in 1..11 -> println(\"Crian\u00e7a\")\n    in 12..17 -> println(\"Adolescente\")\n    in 18..59 -> println(\"Adulto\")\n    else -> println(\"Idoso\")\n}\n\n\n\n\n\nWHILE\n\n\nvar i = 0\nwhile (i < 10) {\n    println(i)\n    i++\n}\n\n\n\n\n\nDO WHILE\n\n\nvar i = 0\ndo {\n    println(i)\n    i++\n} while(i < 10)\n\n\n\n\n\nFOR\n\n\nfor(var i = 0; i < 10; i++) {\n    println(i)\n}\n\n\n\n\n\nFOR IN\n\n\nfor(fruta in frutas){\n    println(fruta)\n}\n\n\n\n\n\nFOREACH\n\n\nfrutas.foreach({ fruta ->\n    println(fruta.toUpperCase())\n\n})\n\n\n\n\n\nFUN\u00c7\u00d5ES\n\n\nfun main(args: Array<String>){\n    var rs = somar(x: 10, y: 10)\n    print($rs)\n\n}\n\nfun somar(x: Int, y: Int){\n    var r = x + y\n    return r\n}\n\n\n\n\n\nRUBY\n\n\nDEFINI\u00c7\u00c3O\n\n\nOO, Tipagem Din\u00e2mica, Reflex\u00e3o, metaprograma\u00e7\u00e3o, interpretada\nMRI interpretador de ruby\nRVM Maquina virtual ruby\nTudo \u00e9 objeto\n\n\n\n\n\nCOMANDOS\n\n\nirb  //shell\nexit\nruby arquivo.rb\n\ngem install pry\npry\n\n\n\n\n\nSINTAXES\n\n\narquivo.rb\n\n\n\n\n\nVARIAVEIS\n\n\ntexto = \"meu texto\"\n\n\n\n\n\nCONSTANTE\n\n\nMAX_USUARIOS = 10\n\n\n\n\n\nENTRADA E SAIDA\n\n\nputs \"Digite seu nome\"\nnome = gets.chomp \nputs nome\n\nputs \"Digite a idade\"\nidade = gets.chomp.to_i\nputs idade\n\n\n\n\n\nCOMENTARIOS\n\n\n# uma linha\n\n\n\n\n\nTIPOS DE DADOS\n\n\nnome = \"Cleiton\"\ntexto = \"b o m\"\ntexto.strip // tira o espa\u00e7os\ntexto.downcase! // deixa tudo minusculo\ntexto.upcase! // deixa tudo maiusculo\nmarca = \"Volkswagem\"\nmodelo = \"Voyage\"\nfrase = \"#{marca} #{modelo}\"\ntexto2 = <<EOS\na\nlinha\nEOS\n\n\nnumero = 10\nsalario = 2000.50\n\nativo = true\n\nnome_completo = nill\n\narray = []\narray = [1, 2, 3, 4]\narray.size\narray.empty?\narray[0]\narray[1..2] // da posicao 1 ao 2\narray[0] = 44\narray.push(10)\narray.insert(0, 10) //0 => posicao\narray.last()\narray.first()\narray.join ','\narray.sort\narray.each { |i| puts i}\narray.reduce(0) { |resultado, proximo_valor| resultado + proximo_valor }\narray.map { |numero * numero }\n\n\n\n\n\nSYMBOL\n\n\n:nome_completo\n\n\n\n\n\nHASH\n\n\ncapitais = HASH.new ou capitais = {}\ncapitais = {acre: 'Rio Branco', saopaulo: 'Sao Paulo'}\ncapitais.delete(:acre)\n\nhash = {nome: 'cleiton', idade: 20}\nhash[:idade]\n\n\n\n\n\nRANGE\n\n\n1..10\n\n\n\n\n\nESCOPO DE VARIAVEIS\n\n\nDo lado de fora escopo global\nDentro de fun\u00e7\u00e3o escopo local\n$global\n\n\n\n\n\nOPERADORES\n\n\nARITM\u00c9TICOS +, -, *, /, %, **\nCOMPARA\u00c7\u00c3O >, >=, <, <=, ==, !=\nl\u00d3GICOS !, &&, ||, not, and, on\n\n\n\n\n\nIF\n\n\nif a > b then\n    puts \"a > b\"\nelseif\n    puts \"b > a\"\nelse\n    puts \"iguais\"\nend\n\nputs \"A > B\" if a > b\n\nputs \"B > A\" unless a > b\n\n\n\n\n\nCASE\n\n\nmarca = \"tesla\"\nwhen \"tesla\"\n    puts \"Tesla\"\nwhen \"ford\"\n    puts \"Ford\"\nwhen \"fiat\"\n    puts \"FIAT\"\nelse\n    puts \"SEM MARCA\"\nend\n\n\n\n\n\nWHILE\n\n\ni = 0\nwhile i <= 10\n    puts i\n    i++\nend\n\n\ni = 0\nbegin\n    puts i\n    i++\nend while i <= 10\n\n\n\n\n\nFOR\n\n\nfor i in [10, 20, 30]\n    puts i\nend\n\n\nfor i in 1..10\n    puts i\nend\n\n\n\n\n\nLOOP DO\n\n\nloop do\n    puts \"loop infinito\"\n    break\nend\n\n\n\n\n\nCOLLECTIONS\n\n\nEACH\n\n\n[\"laranja\", \"ma\u00e7a\", \"uva\"].each do |fruta|\n    puts fruta\nend\n\n[\"laranja\", \"ma\u00e7a\", \"uva\"].each { |fruta puts fruta}\n\n\n\n\n\nUPTO\n\n\n10.upto(100) { |i| puts i }\n\n\n\n\n\nMAP\n\n\narray = [1, 2, 3, 4]\nnewarray = array.map do |a|\n    a * 2\nend\n\narray.map! do |a|\n    a * 2\nend\n\n\n\n\n\nSELECT\n\n\narray = [1, 2, 3, 4, 5]\nselection = array.select do |a|\n    a >= 2\nend\nputs selection\n\n\n\n\n\nFUN\u00c7\u00d5ES\n\n\ndef talk\n    puts 'Como vc est\u00e1?'\nend\ntalk\n\n\ndef talk(firstname, lastname)\n    puts \"#{firstname} #{lastname}\"\nend\n\nfirstname = \"Cleiton\"\nlastname = \"Paiva\"\ntalk(firstname, lastname)\n\ndef sinal(color = 'vermelho')\n    puts \"#{color}\"\nend\n\nsinal\ncolor = 'verde'\nsinal(color)\n\n\n\ndef soma(a, b)\n    a+b\nend\nsoma(1, 2)\n\n\nlamb = -> () { puts \"lambda\" }\n\n\n\n\n\nGEM\n\n\nrubygens\n\n\n\n\n\ngem install os\ngem unistal os\nrequire 'net/http'\n\nrequire 'os'\ndef my_od\n    if OS.windows?\n        \"Windows\"\n    elseif OS.linux?\n        \"Linux\"\n    elseif OS.mac?\n        \"MAC\"\n    else\n        \"Nao consegui identificar\"\n    end\nend\nputs \"#{OS.cpu_count} #{OS.bits} #{OS.my_od}\"\n\n\n\n\n\nCLASSES\n\n\nclass Carro\n    def velocidade_maxima\n        250\n    end\n\n    def adiciona_marca(marca)\n        @marca  = marca\n    end\n\n    def marca\n        @marca\n    end\n\nend\n\nnovo_carro = Carro.new\nputs \"Variavel carro #{novo_carro}\"\n\ncarro.adicion_marca(\"Ford\")\nputs carro.marca\n\n\nclass Moto\n    attr_accessor :marca, :modelo\n    # attr_reader :marca, :modelo // get\n    # attr_write :marca, :modelo // set\n\n    def velocidade_maxima\n        250\n    end\n\n    def descricao\n        \"Marca #{marca} e modelo #{modelo}\"\n    end\n\nend\n\nmoto = Moto.new\nmoto.marca = \"Honda\"\nmoto.modelo = \"CB300\"\nputs \"Marca\" + moto.marca\nputs \"Modelo\" + moto.modelo\nputs \"Descricao\" + moto.descricao\n\n\nclass Caminhao\n    attr_accessor :marca, :modelo\n\n    def initialize(modelo, marca)\n        @modelo = modelo\n        @marca = marca\n    end\nend\n\ncaminhao = Caminhao.new\nputs caminho\n\n\n\n\n\nHERAN\u00c7A\n\n\nclass Automovel\n    verifica_combustivel()\n    def self.tipo_cambio\n        puts \"Manual\"\n    end\n\n    def acelera\n        puts \"Acelerando Automovel\"\n    end\n\n\n    private\n        def verifica_combustivel\n            puts \"verifica combustivel\"\n        end\nend\n\n\nclass Carro < Automovel\n    def acelera\n        puts \"Verificando equipamentos\"\n        super\n    end\n\nend\n\n\nAutomovel.acelera\nAutomovel.tipo_cambio\nCarro.tipo_cambio\n\n\n\n\n\nMODULO\n\n\nmodule Compartilhado\n    def imprime_texto\n        puts \"Texto\"\n    end\nend\n\nclass Carro\n    include Compartilhado\n    def metodo_carro\n        puts \"Carro\"\n    end\nend\nc = Carro.new\nc.imprime_texto\n\n\n\n\n\nBLOCKS\n\n\n5.times {puts \"teste}\n\n\nnumbers = [5, 10, 15]\nnumbers.each {!number| sum += number}\n\n\n\n\n\nREGEX\n\n\n/abc/.class\n\n\n\n\n\nTIME\n\n\ntime = Time.now\nputs time.year\nputs time.day\nputs time.month\n\n\n\n\nDEFINI\u00c7\u00c3O\n\n\nOO, Tipagem Din\u00e2mica, Reflex\u00e3o, metaprograma\u00e7\u00e3o, interpretada\nMRI interpretador de ruby\nRVM Maquina virtual ruby\nTudo \u00e9 objeto\n\n\n\n\n\nCOMANDOS\n\n\nirb  //shell\nexit\nruby arquivo.rb\n\ngem install pry\npry\n\n\n\n\n\nSINTAXES\n\n\narquivo.rb\n\n\n\n\n\nVARIAVEIS\n\n\ntexto = \"meu texto\"\n\n\n\n\n\nCONSTANTE\n\n\nMAX_USUARIOS = 10\n\n\n\n\n\nENTRADA E SAIDA\n\n\nputs \"Digite seu nome\"\nnome = gets.chomp \nputs nome\n\nputs \"Digite a idade\"\nidade = gets.chomp.to_i\nputs idade\n\n\n\n\n\nCOMENTARIOS\n\n\n# uma linha\n\n\n\n\n\nTIPOS DE DADOS\n\n\nnome = \"Cleiton\"\ntexto = \"b o m\"\ntexto.strip // tira o espa\u00e7os\ntexto.downcase! // deixa tudo minusculo\ntexto.upcase! // deixa tudo maiusculo\nmarca = \"Volkswagem\"\nmodelo = \"Voyage\"\nfrase = \"#{marca} #{modelo}\"\ntexto2 = <<EOS\na\nlinha\nEOS\n\n\nnumero = 10\nsalario = 2000.50\n\nativo = true\n\nnome_completo = nill\n\narray = []\narray = [1, 2, 3, 4]\narray.size\narray.empty?\narray[0]\narray[1..2] // da posicao 1 ao 2\narray[0] = 44\narray.push(10)\narray.insert(0, 10) //0 => posicao\narray.last()\narray.first()\narray.join ','\narray.sort\narray.each { |i| puts i}\narray.reduce(0) { |resultado, proximo_valor| resultado + proximo_valor }\narray.map { |numero * numero }\n\n\n\n\n\nSYMBOL\n\n\n:nome_completo\n\n\n\n\n\nHASH\n\n\ncapitais = HASH.new ou capitais = {}\ncapitais = {acre: 'Rio Branco', saopaulo: 'Sao Paulo'}\ncapitais.delete(:acre)\n\nhash = {nome: 'cleiton', idade: 20}\nhash[:idade]\n\n\n\n\n\nRANGE\n\n\n1..10\n\n\n\n\n\nESCOPO DE VARIAVEIS\n\n\nDo lado de fora escopo global\nDentro de fun\u00e7\u00e3o escopo local\n$global\n\n\n\n\n\nOPERADORES\n\n\nARITM\u00c9TICOS +, -, *, /, %, **\nCOMPARA\u00c7\u00c3O >, >=, <, <=, ==, !=\nl\u00d3GICOS !, &&, ||, not, and, on\n\n\n\n\n\nIF\n\n\nif a > b then\n    puts \"a > b\"\nelseif\n    puts \"b > a\"\nelse\n    puts \"iguais\"\nend\n\nputs \"A > B\" if a > b\n\nputs \"B > A\" unless a > b\n\n\n\n\n\nCASE\n\n\nmarca = \"tesla\"\nwhen \"tesla\"\n    puts \"Tesla\"\nwhen \"ford\"\n    puts \"Ford\"\nwhen \"fiat\"\n    puts \"FIAT\"\nelse\n    puts \"SEM MARCA\"\nend\n\n\n\n\n\nWHILE\n\n\ni = 0\nwhile i <= 10\n    puts i\n    i++\nend\n\n\ni = 0\nbegin\n    puts i\n    i++\nend while i <= 10\n\n\n\n\n\nFOR\n\n\nfor i in [10, 20, 30]\n    puts i\nend\n\n\nfor i in 1..10\n    puts i\nend\n\n\n\n\n\nLOOP DO\n\n\nloop do\n    puts \"loop infinito\"\n    break\nend\n\n\n\n\n\nCOLLECTIONS\n\n\nEACH\n\n\n[\"laranja\", \"ma\u00e7a\", \"uva\"].each do |fruta|\n    puts fruta\nend\n\n[\"laranja\", \"ma\u00e7a\", \"uva\"].each { |fruta puts fruta}\n\n\n\n\n\nUPTO\n\n\n10.upto(100) { |i| puts i }\n\n\n\n\n\nMAP\n\n\narray = [1, 2, 3, 4]\nnewarray = array.map do |a|\n    a * 2\nend\n\narray.map! do |a|\n    a * 2\nend\n\n\n\n\n\nSELECT\n\n\narray = [1, 2, 3, 4, 5]\nselection = array.select do |a|\n    a >= 2\nend\nputs selection\n\n\n\n\n\nFUN\u00c7\u00d5ES\n\n\ndef talk\n    puts 'Como vc est\u00e1?'\nend\ntalk\n\n\ndef talk(firstname, lastname)\n    puts \"#{firstname} #{lastname}\"\nend\n\nfirstname = \"Cleiton\"\nlastname = \"Paiva\"\ntalk(firstname, lastname)\n\ndef sinal(color = 'vermelho')\n    puts \"#{color}\"\nend\n\nsinal\ncolor = 'verde'\nsinal(color)\n\n\n\ndef soma(a, b)\n    a+b\nend\nsoma(1, 2)\n\n\nlamb = -> () { puts \"lambda\" }\n\n\n\n\n\nGEM\n\n\nrubygens\n\n\n\n\n\ngem install os\ngem unistal os\nrequire 'net/http'\n\nrequire 'os'\ndef my_od\n    if OS.windows?\n        \"Windows\"\n    elseif OS.linux?\n        \"Linux\"\n    elseif OS.mac?\n        \"MAC\"\n    else\n        \"Nao consegui identificar\"\n    end\nend\nputs \"#{OS.cpu_count} #{OS.bits} #{OS.my_od}\"\n\n\n\n\n\nCLASSES\n\n\nclass Carro\n    def velocidade_maxima\n        250\n    end\n\n    def adiciona_marca(marca)\n        @marca  = marca\n    end\n\n    def marca\n        @marca\n    end\n\nend\n\nnovo_carro = Carro.new\nputs \"Variavel carro #{novo_carro}\"\n\ncarro.adicion_marca(\"Ford\")\nputs carro.marca\n\n\nclass Moto\n    attr_accessor :marca, :modelo\n    # attr_reader :marca, :modelo // get\n    # attr_write :marca, :modelo // set\n\n    def velocidade_maxima\n        250\n    end\n\n    def descricao\n        \"Marca #{marca} e modelo #{modelo}\"\n    end\n\nend\n\nmoto = Moto.new\nmoto.marca = \"Honda\"\nmoto.modelo = \"CB300\"\nputs \"Marca\" + moto.marca\nputs \"Modelo\" + moto.modelo\nputs \"Descricao\" + moto.descricao\n\n\nclass Caminhao\n    attr_accessor :marca, :modelo\n\n    def initialize(modelo, marca)\n        @modelo = modelo\n        @marca = marca\n    end\nend\n\ncaminhao = Caminhao.new\nputs caminho\n\n\n\n\n\nHERAN\u00c7A\n\n\nclass Automovel\n    verifica_combustivel()\n    def self.tipo_cambio\n        puts \"Manual\"\n    end\n\n    def acelera\n        puts \"Acelerando Automovel\"\n    end\n\n\n    private\n        def verifica_combustivel\n            puts \"verifica combustivel\"\n        end\nend\n\n\nclass Carro < Automovel\n    def acelera\n        puts \"Verificando equipamentos\"\n        super\n    end\n\nend\n\n\nAutomovel.acelera\nAutomovel.tipo_cambio\nCarro.tipo_cambio\n\n\n\n\n\nMODULO\n\n\nmodule Compartilhado\n    def imprime_texto\n        puts \"Texto\"\n    end\nend\n\nclass Carro\n    include Compartilhado\n    def metodo_carro\n        puts \"Carro\"\n    end\nend\nc = Carro.new\nc.imprime_texto\n\n\n\n\n\nBLOCKS\n\n\n5.times {puts \"teste}\n\n\nnumbers = [5, 10, 15]\nnumbers.each {!number| sum += number}\n\n\n\n\n\nREGEX\n\n\n/abc/.class\n\n\n\n\n\nTIME\n\n\ntime = Time.now\nputs time.year\nputs time.day\nputs time.month\n\n\n\n\nDART\n\n\nDefini\u00e7\u00e3o\n\n\nLinguagem de Programa\u00e7\u00e3o do google. Tamb\u00e9m \u00e9 fundamental para o flutter no quesito mobile e angular para web.\n\n\n\n\n\ndart --version\n\n\n\n\n\nEscrever na tela\n\n\narquivo.dart\nvoid main () {\n    String nome = 'Cleiton';\n    print(\"Hello World\" + nome);\n}\n\n\n\n\n\nCOMENT\u00c1RIO\n\n\n// Uma Linha\n\n/* \n    Varias\n    linhas  \n*/\n\n\n\n\n\nVARI\u00c1VEIS\n\n\nvar letra = \"A\";\ndynamic idade = 34;\n\n\n\n\n\nTIPOS DE DADOS\n\n\nString nome = \"Cleiton\";\n\nint numero = 5;\ndouble number = 10.3\n\nbool ativo = true;\n\nList listaProdutos = [\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \narroz, 1.50, true\n]\nprint(listaProdutos)\nprint(listaProdutos[10])\n\nMap usuario = {\n    'nome': 'Cleiton',\n    'idade': 24,\n    'altura': 1.72,\n    'ativo': true\n}\nprint(usuario.length)\nprint(usuario['nome'])\n\n\n\n\n\nCONSTANTES\n\n\nconst name = \"Cleiton\";\nfinal String name2 = \"Cleiton\";\n\n\n\n\n\nCONVERS\u00d5ES\n\n\nvar number = int.parse('25');\nvar number2 = double.parse('5.10');\nprint(number.toString())\nprint(number.toStringAFixed())\n\n\n\n\n\nCONCATENAR\n\n\nString name = 'Bom' + 'Dia';\nvar frase = 'Muito bom $name';\nvar frase = 'Muito bom ${name.toUpperCase()}';\n\n\n\n\n\nLISTAS\n\n\nvar list = [1, 2, 3];\nlist.add(4);\nlist.removeAt(0)\n\nprint(list.length);\nprint(list.first);\nprint(list.last);\n\nvar maps = {\n    \"nome\": \"Cleiton\",\n    \"idade\": 34,\n    \"sexo\": \"m\"\n}\nprint(maps[\"nome\"]);\nmaps[\"nome\"] = \"Pedro\";\n\nMap<String, dynamic> maps = {\n    \"nome\": \"Cleiton\",\n    \"idade\": 34,\n    \"sexo\": \"m\"\n}\n\nList<Map<String, dynamic>> cadastro = [];\n\n\n\n\n\nOPERADORES\n\n\nARITIM\u00c9TICOS (+, -, *, /, %)\nCOMPARA\u00c7\u00c3O (==, !=, >, <, <=, >=)\nRELACIONAIS (&&, ||, !)\n\n\n\n\n\nIF\n\n\nimport 'dart:io';\nvoid main() {\n    print(\"Digite uma idade\");\n    var input = stdin.readLineSync();\n    var idade = int.parse(input);   \n\n    if (idade >= 18) {\n        print(\"Adulto\");\n    } else if (idade >= 12 && idade < 18) {\n        print(\"Adolescente\");\n    else {\n        print(\"Crian\u00e7a\");\n    }\n}\n\n\n\n\n\nSWITCH\n\n\nString status = 'andamento';\n\nswitch (){\n    case 'aberto':\n    print(\"Aberto\");\n    break;\n\n    case 'fechado':\n    print(\"Fechado\");\n    break;\n\n    case 'pendente':\n    print(\"Pendente\");\n    break;\n\n    case 'encerrado':\n    print(\"Encerrado\");\n    break;\n\n    default:\n    print(\"Aberto\");\n    break;\n}\n\n\n\n\n\nFOR\n\n\nfor(int i = 0; i < 10; i++) {\n    print(i);\n}\n\n\nList products = ['arroz', 'cafe', 'a\u00e7ucar']\nfor (var item in products) {\n    print(i);\n}\n\nList<String> nomes = [\"Cleiton\", \"Guilherme\", \"Ingrid\", \"Lilian\", \"Raiane\"];\n\n\n\n\n\nWHILE\n\n\nint i = 0;\nwhile (i < 10) {\n    print(i);\n    i++;\n}\n\n\n\n\n\nFUN\u00c7\u00d5ES\n\n\nvoid main(){\n    print(soma(20, 30));\n}\ndouble soma(double a, double b) {\n    double res = a + b;\n    return res;\n}\n\n\n\n\n\nARQUIVOS\n\n\ncalcular.dart\nint calculate() {\n    return 6 * 7;\n}\n\nimport 'pakage:calcular/calcular.dart' as calcular\nmain(List<String> arguments) {\n    print('Teste ${calcular.calculate()}')\n}\n\n\n\n\n\nESCOPO GLOBAL\n\n\ncriar variavel fora do main\n\n\n\n\n\nFLUTTER\n\n\nQuem usa?\n\n\nnubank, globo, \n\n\n\n\nLayout\n\n\nmaterial\ncupertino\n\n\n\n\n\nAnima\u00e7\u00e3o\n \n\n\nFlare\n\n\n\n\n\nLotties\n\n\nhttps://lottiefiles.com/\n\n\n\n\n\n\nFlutter Web\nDart na Web\nDDC Dart2Js\n\n\n\n\n\nRequisi\u00e7\u00e3o\n\n\ngrpc\ngraphql\nrest\n\n\n\n\n\nteste de widget\n\nengine c++ skia\n\n\n\n\n\nFERRAMENTA\n\n\nFlutter\nAndroid Studio\nVisual Studio Code\nextensoes dart e flutter\n\nflutter new project\n\nflutter devices\nflutter run -d emulator-5554\n\n\n\n\n\nPYTHON\n\n\nDEFINI\u00c7\u00c3O\n\n\nlinguagem alternativa ao C, dinamica\n\n\n\n\n\nCOMENTARIO\n\n\n# uma linha\n\n\"\"\" \nvarias\nlinhas\n\"\"\"\n\n\n\n\n\nENTRADA E SAIDA\n\n\nprint(\"ola bom dia\")\n\nentrada = input(\"Digite seu nome\")\n\ninteiro = int(input(\"Digite inteiro\"))\ndecimal = float(input(\"Digite decimal\"))\n\n\n\n\n\nVARIAVEIS\n\n\ntexto = \"Ol\u00e1 mundo\"\n\n\n\n\n\nTIPOS DE DADOS\n\n\ntexto = \"Ol\u00e1 mundo\"\n\n\n\n\n\ntexto1 = \"Bom\"\ntexto2 = \"Dia\"\ntexto3 = texto1 + \"\" + texto2\n\nnome = \"cleiton\"\nlen(nome)\nnome[0:2]\nnome.lower()\nnome.upper()\nnome.strip() //remove os espacos\nsaudacao = \"Bom dia\"\nsaudacao.split(\" \")\nsaudacao.replace(\"Bom\", \"Otimo\")\n\nnumero = 47\ndecimal = 24.7\n\nativo = true\n\nlista1 = [1, 2, 3]\nlista2 = [\"a\", \"b\", \"c\"]\nlista3 = [1, \"a\", 2, true]\n\nlista1[0]\n\ntamanho = len(lista1)\nprint(tamanho)\n\nlista1.append(4)\nlista1.del[:] //tudo\nlista1.del[:1, 3]\n\nlista1.sort()\nlista1.sort(reverse=True)\n\nlista.reverse()\n\nnovalista = sorted(lista1)\n\n\n\n\n\nDICIONARIO\n\n\ndic = {\"a\": \"ameixa\", \"b\": \"bola\", \"c\": \"cachorro\"}\ndic\ndic[\"c\"]\n\nfor i in dic.items():\n    print(i)\n\n\nfor i in dic.values():\n    print(i)\n\nfor i in dic.keys():\n    print(i)\n\n\n\n\n\nOPERADORES\n\n\nARITMETICOS (+, -, *, /, %, ^)\nCOMPARACAO (==, !=, >, >=, <, <=)\nLOGICOS (and, or, !)\n\n\n\n\n\nCOMANDOS\n\n\narquivo.py\n\npython\npython arquivo.py\n\n\n\n\n\nIF\n\n\nif a > b:\n    print(\"A maior\")\nelife a < b:\n    print(\"B maior\")\nelse:\n    print(\"Sao iguais\")\n\n\n\n\n\nWHILE\n\n\nx = 0\nwhile x < 10:\n    print(x)\n    x = x + 1\n\n\n\n\n\nFOR\n\n\nlista1 = [1, 2, 3]\nfor i in lista1:\n    print(i)\n\nfor i in range(0, 10, 1)\n    print(i)\n\n\n\n\n\nESCOPO GLOBAL E LOCAL\n\n\nFora \u00e9 global\nDentro da funcao \u00e9 local\n\n\n\n\n\nFUNCOES\n\n\ndef soma(a, b):\n    print(a + b)\n\nsoma(2, 3)\n\n\nimport random\nnumero random.randint(0, 10)\nprint(numero)\n\n\n\n\n\nARQUIVOS\n\n\narquivo = open(\"arquivo.txt\")\nabrindo = arquivo.readlines()\nfor linha in linhas:\n    print(linha)\n\n\narquivo = open(\"arquivo.txt\")\nabrindo = arquivo.read()\n\n\n\n\n\nTRATAMENTO DE EXCE\u00c7\u00d5ES\n\n\ntry:\n    print(a/b)\nexcept:\n    print(\"N\u00e3o divide por 0\")\nprint(a/a)\n\n\n\n\n\nLISTA COMPREHENION\n\n\nx = [1, 2, 3, 4]\ny = [i**2 for i in x]\nz = [i for i in x if i%2==1]\n\n\n\n\n\nLISTA ENUMERATE\n\n\nlista = [\"abacate\", \"bola\", \"cachorro\"]\nfor i, nome in enumerate(lista):\n    print(1,nome)\n\n\n\n\n\nLISTA FILTER\n\n\ndef pares(i):\n    if i % 2 == 0:\n        return i\n\nlista = [1, 2, 3, 4, 5, 6, 7]\n\nlista_pares = filter(pares, lista)\nprint(List(lista_pares))\n\n\n\n\n\nLISTA MAP\n\n\ndef dobro(x):\n    return x+2\n\nvalor = [1, 2, 3, 4, 5]\n\nvalor_dobrado = map(dobro, valor)\n\nvalor_dobrado = list(valor_dobrado)\nprint(valor_dobrado)\n\n\n\n\n\nLISTA ZIP\n\n\nnomes = [\"Cleiton\", \"Aparecido\", \"Guilherme\"]\nidades = [34, 59, 10]\nalturas = [1.72, 1.70, 1.10]\n\nfor nome, idade, altura in zip(nomes, idades, alturas):\n    print(nome, idade, valor)\n\n\n\n\nLUA\n\n\nINSTALA\u00c7\u00c3O\n\n\napt-get install lua\n\n\n\n\n\nENGINES\n\n\n(LOVE2D para jogos)\n\n\n\n\n\nARQUIVO E EXTENS\u00d5ES\n\n\narquivo.lua\n\n\n\n\n\nCOMENT\u00c1RIOS\n\n\nComent\u00e1rios de uma linha ou v\u00e1rias\nOperadores Aritm\u00e9ticos (+; -; *; /; %;)\nOperadores de Compara\u00e7\u00e3o (>; <; >=; <=; ~=; ==)\nOperadores L\u00f3gicos (and; or; not)\nV\u00e1riaveis (letras, numero, undescore, sem espa\u00e7o, case sensitivo, sem palavras reservados)\nTipos (String, Numero, Boolean, null ou nil)\nFun\u00e7\u00f5es\nIF\nWHILE\n\n\n\n\n\nCOMENT\u00c1RIOS\n\n\n-- Exemplo de comentario\n--[[ Exemplo\nde \nvarias\nlinhas\n]]--\n\n\n\n\n\nESCREVER NA TELA\n\n\nprint(\"Ola Mundo\")\nprint(123456)\nprint(1+1) \n\n\n\n\n\nV\u00c1RIAVEIS\n\n\nvariavel = \"ola mundo\"\n\ntexto1 = \"Bom\"\ntexto2 = \"Dia\"\nnome = \"Caixa d\\' agua\"\noutra = \"Voce \u00e9 \\\"rico\\\"\"\nprint(texto1 .. texto2 .. \"(o^o)\")\n\nvariavel2 = 45\nnovoNumero = -2\noutroNumero = 3.14\noperacao = 2 + 2\n\nativo = false\nprint(ativo == false)\n\numaVariavel = nil\n\n\n\n\n\nINTERAGINDO\n\n\nprint(\"Qual \u00e9 o seu nome\")\nnome = io.read()\nprint(\"Nome\" .. nome)\n\n\n\n\n\nCHUNKS\n\n\ndo\n\nend\n\n\n\n\n\nFUN\u00c7\u00d5ES\n\n\nfunction somar()\n    print(1+1)\nend\nsomar()\n\nfunction somarDois(n1,n2)\n    print n1 + n2\nend\nsomarDois(2,2)\n\nfunction somarDois2(n1,n2)\n    return n1 + n2\nend\nprint(somarDois2(2,2))\n\n\nfunction genSoma(parcela)\n    function s (b)\n        return parcela + b\n    end\n    return s\nend\nsoma2 = genSoma(2)\nprint(soma2(10))\n\nfunction join(sep, words)\n    return table.concat(words, sep)\nend\nprint(\"Cachorro \"..\"quente\")\n\n\n\n\n\nESCOPO GLOBAL\n\n\n-- (global)\nnome = \"Jesus\" \n\n\n\n\n\nESCOPO LOCAL\n\n\nfunction qualONOme(nome)\n    -- (local)\n    print(nome)\nend\nqualONome(\"Alfred\")\n\nlocal variavel --posso colocar dentro de um bloco\n\n\n\n\n\nWRAPPER\n\n\ntostring(string)\ntonumber(number)\nvalor\nisNaN(valor)\n\n\n\n\n\nTABELA\n\n\na = {10, 20, 30}\ntable.insert(a, 41)\n\n\n\n\n\nIF\n\n\nif (valor1 > valor2) then\n    print(\"Valor1 maior\")\nelseif(valo1 == valor2)\n    print(\"Valores iguais\")\nelse\n    print(\"Valor2 maior\")\nend\n\n\nif (n1 > n2) and (n1 > n3)\n    print(\"N1 maior\")\n\n\n\n\n\nWHILE\n\n\nindice = 0\nwhile indice <= 10 do\n    print(indice)\n    indice = indice + 1\nend\n\n\n\n\n\nFOR\n\n\nfor i = 1, 10, 1 do\n    print(i)\nend\n\n\n\n\n\nREPEAT\n\n\nindice = 0\nrepeat\n    print(indice)\n    indice = indice + 1\nuntil indice <= 10\n\n\n\n\n\nVETOR = TABELA\n\n\ninimigos = { 10, 13, 50, 80 }\nprint(#inimigos)\nprint(inimigos[3])\ninimigos[3] = 99\n\nqtde = #inimigos\ninimigos[qtde + 1] = 33\nprint(inimigos[11])\ninimigos[#inimigos + 1] = 260\n\nfor idx = 1, #inimigos, 1 do\n    print(idx)\nend\n\nitens = {\n    machado = 1000,\n    [\"espada\"] = 450,\n    escudo = 500,\n    Elmo = 150,\n    chave = 45\n}\n\nprint(itens[\"machado\"])\nprint(itens.machado)\nitens.armadura = 1000\nprint(itens.armadura)\n\ncontagem\nfor chave, valor in pairs(items) do\n    print(chave .. \":\" .. valor)\n    contagem = contagem + 1\nend\n\ncores = {\n    moeda = \"amarela\"\n    armadura = \"prateada\"\n}\nprint(cores.moeda)\nposicoes = {\n    arqueiro = {10, 20},\n    canhao = {120, 40}\n}\nposicoes.arqueiro[\"arqueiro\"][1]\n\npessoa = {}\npessoa = {\n    nome = \"Cleiton\",\n    idade = \"34\",\n    endereco = \"Av. XV de Novembro, 123\",\n}\n\n\n\n\n\nBIBLIOTECAS\n\n\nmath.floor(0.5)\nmath.max(3, 6, 2, 7)\nmath.sqrt(81)\nstring.gsub(\"LUA\", \"Lua\")\nio.lines(\"mapa.txt\")\n\nfor line in to.lines(\"mapa.txt\") do\n    print(line)\nend\n\nrequire(\"nomedopacote\")\nlocal calculadora = {\n    somar = function(x, y)\n        return x + y\n    end\n}\nreturn\n\nlocal calculadora = require(\"calculadora\")\nprint(calculadora.somar(1, 1))\n\n\npartes = split(\"abcde\", \",\")\nfor i, v in ipairs(partes) do\n    print(i, v)\nend\n\nconteudo = \"bla bla\"\nsplit(conteudo, \" \")\n\ntrim(\" agua\") => \"agua\"\n\nio.write(\"Digite algo\")\na = io.read()\nprint(\"!\" .. a .. \"!\")\n\narquivo = io.open(\"teste.txt\")\narquivo:write(\"\" .. conteudo ..)\narquivo:close()\n\n\nconteudo = io.open(\"teste.txt\")\nif conteudo == nill then\n    error(\"Erro ao abrir\")\nend\n\npcall(io.open, \"arquivoProblematico\", \"r\")\n\n\n\n\n\nMODULARIZA\u00c7\u00c3O\n\n\ndofile(\"arquivo.lua\")\n\nmeumodulo = require(\"arquivo\")\nmeumodulo = require \"arquivo\"\nreturn meumodulo\n\npackage.path\n\npackage.cpath\n\n\n\n\n\nPOO\n\n\narquivo conta.lua\nlocal conta = {}\nfunction conta.novo(deposito_inicial)\n    return {\n        saldo = deposito_inicial,\n        depositar= function(self, valor)\n            self.saldo = self.saldo + valor\n        end\n    }\nend\nreturn conta\n\narquivo banco.lua\nlocal conta = require(\"conta\")\nlocal banco_brasil = conta.novo(500)\nassert(banco_brasil.saldo == 500)\nbanco_brasil:depositar(500)\nassert(banco_brasil.saldo == 1000)\n\n\n\n\nJULIA\n\n\nDEFINI\u00c7\u00c3O\n\n\nJulia \u00e9 projetado para resolver problemas matem\u00e1ticos numericamente, que consiste na manipula\u00e7\u00e3o num\u00e9rica dos dados. A maioria dos problemas matem\u00e1ticos reais (particularmente em engenharia) n\u00e3o t\u00eam solu\u00e7\u00f5es simb\u00f3licas puras.\nAparentemente o nome surgiu a partir de uma conversa aleat\u00f3ria entre os criadores quando algu\u00e9m sugeriu arbitrariamente que \"Julia\" seria um bom nome para uma linguagem de programa\u00e7\u00e3o\n\n\n\n\n\nJULIABOX\n\n\nA maneira mais f\u00e1cil de testar a linguagem de programa\u00e7\u00e3o Julia \u00e9 atrav\u00e9s do JuliaBox. O JuliaBox \u00e9 um ambiente de programa\u00e7\u00e3o hospedado na nuvem da Microsoft Azure para codifica\u00e7\u00e3o em Julia sem a necessidade de inslar qualquer software no computador local. Al\u00e9m da interface do Jupyter para escrever c\u00f3digos, o JuliaBox permite realizar o download do c\u00f3digo em outros formatos (.pdf, .md, .rst, .html e .tex), gerar slides, editar textos cient\u00edficos em latex e markdown, importa\u00e7\u00e3o/exporta\u00e7\u00e3o de projetos para o GitHub e muitas outras funcionalidades.\n\n\n\n\n\nJUPITER\n\n\nO Jupyter \u00e9 uma aplica\u00e7\u00e3o web derivado do IPython que significa JUlia, PYthon, and R . Resumidamente, \u00e9 um ambiente computacional interativo que permite aos usu\u00e1rios criar \"notebooks\" que incluem: c\u00f3digo, widgets interativos, gr\u00e1ficos, texto, equa\u00e7\u00f5es, imagens, v\u00eddeo e outros. O Jupyter combina tr\u00eas componentes:\n\n* O Jupyter Notebook: um aplicativo web interativo para escrever e executar c\u00f3digos de v\u00e1rias linguagens de programa\u00e7\u00e3o.\n\n* Kernels: \"Os kernels s\u00e3o processos espec\u00edficos de linguagem de programa\u00e7\u00e3o que funcionam independentemente e interagem com os aplicativos Jupyter e suas interfaces de usu\u00e1rio\" (JUPYTER, 2017). Jupyter possui suporte para mais de 50 linguagens de programa\u00e7\u00e3o (github.com/jupyter/jupyter/wiki/Jupyter-kernels), incluindo as mais populares em computa\u00e7\u00e3o cient\u00edfica como Python, R, Julia e Scala. O IJulia.jl \u00e9 kernel da linguagem Julia.\n\n* Notebooks: s\u00e3o arquivos com extens\u00e3o ipynb que cont\u00eam a estrutura do c\u00f3digo no formato JSON. Cada notebook possui seu pr\u00f3prio kernel.\n\n\n\n\n\nCOMANDOS\n\n\nversioninfo()\n? versioninfo\nSys.cpu_info()\nSys.KERNEL\nSys.cpu_summary()\n\n\n\n\n\nOPERADORES ARITM\u00c9TICOS\n\n\n+x  Operador un\u00e1rio de adi\u00e7\u00e3o\n-x  Operador un\u00e1rio de subtra\u00e7\u00e3o\nx + y   Operador bin\u00e1rio de adi\u00e7\u00e3o\nx - y   Operador bin\u00e1rio de subtra\u00e7\u00e3o\nx * y   Operador bin\u00e1rio de multiplica\u00e7\u00e3o\nx / y   Operador bin\u00e1rio de divis\u00e3o\nx \u00f7 y   Operador bin\u00e1rio de divis\u00e3o inteira\nx \\ y   Operador bin\u00e1rio de divis\u00e3o esquerda\nx ^ y   Operador bin\u00e1rio de pot\u00eancia\nx % y   Operador bin\u00e1rio de resto da divis\u00e3o\n\n\n\n\n\nOPERADORES DE COMPARA\u00c7\u00c3O\n\n\n==  Igual a\n=!  Diferente\n>   maior que\n<   menor que\n>=  maior igual\n<=  menor igual\n\n    isequal(x, y) , verdadeiro se x e y s\u00e3o id\u00eantico\n    isfinite(x) , verdadeiro se x \u00e9 um n\u00famero infinito\n    isinf(x) , verdadeiro se x \u00e9 infinito (inf)\n    isnan(x) , x n\u00e3o \u00e9 um n\u00famero\n\n\n\n\nOPERADORES L\u00d3GICOS\n\n\n~x  Nega\u00e7\u00e3o\nx & y   E\n`x  y`  OU\nx \u22bb y   Ou exclusivo\nx >>> y     deslocamento para a direita\nx >> y  arithmetic shift right\nx << y  logical/arithmetic shift left\n\n\n\n\nIMPRESS\u00c3O\n\n\nprint(sind(45))\nprintln(sind(45))\ndisplay(sind(45))\n@show sind(45)\n\n\n\n\n\nFUN\u00c7\u00d5ES\n\n\nrand(0:10)\ngcd(7, 14)  //MDC\nlcm(60, 50) // MMC\nfactorial(5)\n\n\n\nfunction raizQ(x)\n    if x >= 0\n        sqrt(x)\n    else\n        throw(DomainError(x, \"A solu\u00e7\u00e3o \u00e9 de dom\u00ednio complexo\"))\n    end\nend\n\n\nfunction raizQ_Er(x)\n\n    if x >=0        \n        sqrt(x)\n    else\n        error(\"N\u00famero negativo: $x. N\u00e3o \u00e9 possivel calcular raiz Real\")\n    end\nend\n\n\nfunction raizQ_TC(x)\n    try\n         sqrt(x)\n    catch\n         sqrt(complex(x))\n    end\nend\n\n\n\n\n\nF\u00d3RMULAS\n\n\ns0 = 2\nv = 4\nt = 10\ns0, v, t\ns = s0 + v*t\nprint(\"O valor do espa\u00e7o final S \u00e9: \",s ,\"m\")\n\n\n\n\n\nTIPOS DE DADOS\n\n\n# real e imagin\u00e1rio\ncomplex(8, 4)\n\n\n\n\n\nReal e Imagin\u00e1rio\n\n\n1 + 2im\n\nconj(2 + 3im)\n\n\nd1 = Dict([(\"a\", 1), (\"b\", 2),(\"c\", 10)])\n\n\n\n\n\nIF\n\n\nif x < y\n    println(\"x \u00e9 menor que y\")\nend\n\n\n\n\nif x < y\n    println(\"x \u00e9 menor que y .\",\"Valor de x: \", x ,\" Valor de y: \",y)\nelse\n    println(\"x \u00e9 maior que y .\",\"Valor de x: \", x ,\" Valor de y: \",y)\nend\n\n\nif x < y\n    println(\"x \u00e9 menor que y . Valor de x: $x , Valor de y: $y\")\n\nelseif x > y\n    println(\"x \u00e9 maior que y . Valor de x: $x , Valor de y: $y\")\n\nelse\n    println(\"x \u00e9 igual que y . Valor de x: $x , Valor de y: $y\")\nend\n\n\n\n\n\nN\u00c3O TEM O SWITCH\n\n\nFOR\n\n\n# La\u00e7o FOR aplicado a um vetor\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2)+x: \\n\\n\")\nx = [1.0, 4.0, 6.0, 7.0, 9.0] \n\nfor i = 1:length(x)     \n    println(\"f($(x[i])) = \", sin(x[i])*cos(x[i]/2))\nend\n\n\n# La\u00e7o FOR aplicado a um vetor\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\nx = [1.0, 2.0, 3.0, 4.0, 5.0] \n\nfor i = x  # pode ser tamb\u00e9m x in     \n    println(\"f($i) = \", sin(i)*cos(i/2)) \nend\n\n\n# La\u00e7o FOR aplicado a um vetor\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\n\nfor x = [1.0, 2.0, 3.0, 4.0, 5.0] # pode ser tamb\u00e9m x in vetor    \n    println(\"f($x) = \", sin(x)*cos(x/2) )   \nend\n\n\n\n\n# La\u00e7o FOR aplicado a um vetor com controle de tempo\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\n\nfor x = [1.0 2.0 3.0 4.0 5.0] # pode ser tamb\u00e9m x in vetor    \n    println(\"f($x) = \",sin(x)*cos(x/2) )  \n    sleep(1)                  # atraso de 1s\nend\n\n\n# La\u00e7o FOR aplicado a um vetor reverso\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\n\nfor x = 5:-1:1 # pode ser tamb\u00e9m x in vetor    \n    println(\"f($x) = \",sin(x)*cos(x/2) + x)   \nend\n\n\n\n\n\n\nWHILE\n\n\n# conta enquanto \"a\" menor ou igual a 5.\na = 0\n\nwhile a <= 5    \n    println(a)\n    a += 1 \nend\n\n\n# conta enquanto \"a\" menor que o tamanho de b\na = 0\nb = 1:5\n\nwhile  a < length(b) \n    println(a)\n    a += 1   \nend\n\n\nDO\n\n\n\n# findall retorna o indice do vetor quando encontrar o valor igual a 5\nx = 1:0.1:20\n\nfindall(x) do x\n    x == 5     \nend\n\n\n\n\n\nPACOTES\n\n\nusing Pkg\nPkg.devdir()\nPkg.installed()\nPkg.status()\nPkg.test(\"Nome_pacote\")\nPkg.update()\n\n\nusing Pkg\nPkg.add(\"Nome_Pacote\")\nPkg.add(\"SymPy\")\n\nPkg.clone(\"https://github.com/usuario/pacote.jl.git\")\n\n\nPkg.rm(\"nome_pacote\")\nPkg.rm(\"SymPy\")\n\n\n\nusing SymPy\n\nx , y = Sym(\"x , y\")\n\n(x, y)\n\n\n\n\n\nESCOPO GLOBAL E LOCAL\n\n\nx = 3; # global\nfunction foo(x)\n    x = 2*x; # local 1\n    function bar()\n        println(x) # x local 1 \u00e9 vis\u00edvel dentro do escopo local 2 (dentro de bar)\n    end\n    bar()\n    println(x)\nend\nfoo(x)\nprintln(x)\n\n\n\n\n\n\nVETORIAIS\n\n\nv = [1, 2, 3]\nu = [4, 5, 6]\n\ndisplay(u + v)\ndisplay(u - v)\n\n\n\nusing Plots\ngr()\n\nplot(collect(-5:0.1:5), x -> x^2 - 3*x - 2, label = \"equa\u00e7\u00e3o\", size = (400, 300),\n    xaxis = (\"x\", -5:1:10),\n    yaxis = (\"y\", -5:5:40))\nplot!(collect(-5:0.1:5), zero, label = \"reta zero\")\n\n\n\n\n\nDados\n\n\nmatriz = rand(Float64,6,6)\nvetor = rand(5)\nnome = \"Arquivos\"\n\n\n\n\n\nSalvar arquivo em disco\n\n\nsave(\"arquivo_basico.jld\", \"matriz\", matriz, \"vetor\", vetor , \"nome\", nome)\n\n\n\n\n\nLer os dados do arquivo gravado em disco\n\n\narquivo_basico = load(\"arquivo_basico.jld\")\n\n\n\n\n\nDeletar uma key e seus valores\n\n\ndelete!(arquivo_basico, \"vetor\")\n\n\n\n\n\nVALA\n\n\nDEFINI\u00c7\u00c3O\n\n\nVala \u00e9 uma linguagem de programa\u00e7\u00e3o que habilita t\u00e9cnicas modernas \u00e0 serem usadas para escrever aplica\u00e7\u00f5es que rodam na plataforma Gnome, particulamente Glib e GObject.\n\nO c\u00f3digo ser\u00e1 em texto monoespa\u00e7ado, e os comandos ser\u00e3o todos prefaciados com o caractere $ do prompt.\n\n\n\n\nCOMENTARIOS\n\n\n// O coment\u00e1rio continua at\u00e9 o final da linha\n\n/* O coment\u00e1rio dura entre os delimitadores */\n\n/**\n * Coment\u00e1rio de documenta\u00e7\u00e3o\n */\n\n\n\n\nVARIAVEIS\n\n\nconst double MU_BOHR = 927.400915E-26;\n\n\n\n\nTIPOS DE DADOS\n\n\nstring texto = \"Um conjunto de caracteres\";\nstring s = @\"$a * $b = $(a * b)\";\n\nint a = 6, b = 7;\nbool b = bool.parse(\"false\");\nfloat percentile = 0.75f\n\n\n\n\nOPERADORES\n\n\nARITMETICOS\n+, -, /, *, %\n+=, -=, /=, *=, %=\n\nCOMPARA\u00c7\u00c3O\n<, >, >=, <=, !=\n\nRELACIONAIS\n!, &&, ||\n\n\n\n\nCASTING\n\n\nint i = 10;\nfloat j = (float) i;\n\n\n\n\nARRAY\n\n\nint[] a = new int[10];\nint[] b = { 2, 4, 6, 8 };\n\nint[] c = b[1:3];     // => { 4, 6 }\n\n\n\n\nCONDICIONAL\n\n\nIF\nif (a > 0) { stdout.printf(\"a is greater than 0\\n\"); }\nelse if (a < 0) { stdout.printf(\"a is less than 0\\n\"); }\nelse { stdout.printf(\"a is equal to 0\\n\"); }\n\n\nif (1 < a && a < 5) {}\n\nif (0 < a && a < b && b < c && c < d && d < 255) {\n    // do something\n}\n\nDe uma forma mais natural:\n\nif (1 < a < 5) {}\n\nif (0 < a < b < c < d < 255) {\n    // do something\n}\n\n\n\n\nSWITCH\nswitch (a) {\ncase 1:\n    stdout.printf(\"one\\n\");\n    break;\ncase 2:\ncase 3:\n    stdout.printf(\"two or three\\n\");\n    break;\ndefault:\n    stdout.printf(\"unknown\\n\");\n    break;\n}\n\n\n\n\nLA\u00c7O\n\n\nWHILE\nwhile (a > b) { a--; }\n\nDO WHILE\ndo { a--; } while (a > b);\n\nFOR\nfor (int a = 0; a < 10; a++) { stdout.printf(\"%d\\n\", a); }\n\nFOREACH\nforeach (int a in int_array) { stdout.printf(\"%d\\n\", a); }\n\n\n\n\nEXPRESSAO REGULAR\n\n\nstring email = \"tux@kernel.org\";\nif (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.match(email)) {\n    stdout.printf(\"Valid email address\\n\");\n}\n\nRegex regex = /foo/;\n\nvar r = /(foo|bar|cow)/;\nvar o = r.replace (\"this foo is great\", -1, 0, \"thing\");\nprint (\"%s\\n\", o);\n\n\n\n\nCLASSE\n\n\nclass ClassName : SuperClassName, InterfaceName {\n}\n\n\n\n\nclass Demo.OlaMundo : GLib.Object {\n\n    public static int main(string[] args) {\n\n        stdout.printf(\"Ol\u00e1, Mundo\\n\");\n\n        return 0;\n    }\n}\n\n\npublic class Person : Object {\n\n    /* Construction properties */\n    public string name { get; construct; }\n    public int age { get; construct set; }\n\n    public Person(string name) {\n        Object(name: name);\n    }\n\n    public Person.with_age(string name, int years) {\n        Object(name: name, age: years);\n    }\n\n    construct {\n        // do anything else\n        stdout.printf(\"Welcome %s\\n\", this.name);\n    }\n}\n\n\npublic class TestClass : GLib.Object {\n\n    /* Fields */\n    public int first_data = 0;\n    private int second_data;\n\n    /* Constructor */\n    public TestClass() {\n        this.second_data = 5;\n    }\n\n    /* Method */\n    public int method_1() {\n        stdout.printf(\"private data: %d\", this.second_data);\n        return this.second_data;\n    }\n}\n\n\n\n\nM\u00c9TODOS\n\n\nint m\u00e9todo_nome(int arg1, Object arg2) {\n    return 1;\n}\n\nstring? nome_do_metodo(string? texto, Foo? foo, Bar bar) {\n    // ...\n}\n\n\n\n\nCONSTRUTOR\n\n\npublic class Point : Object {\n    public double x;\n    public double y;\n\n    public Point(double x, double y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public Point.rectangular(double x, double y) {\n        this(x, y);\n    }\n\n    public Point.polar(double radius, double angle) {\n        this.rectangular(radius * Math.cos(angle), radius * Math.sin(angle));\n    }\n}\n\nvoid main() {\n    var p1 = new Point.rectangular(5.7, 1.2);\n    var p2 = new Point.polar(5.7, 1.2);\n}\n\n\n\n\nDESTRUTOR\n\n\nclass Demo : Object {\n    ~Demo() {\n        stdout.printf(\"no destrutor\");\n    }\n}\n\n\n\n\nPOLIMORFISMO\n\n\nclass SuperClass : GLib.Object {\n    public void method_1() {\n        stdout.printf(\"SuperClass.method_1()\\n\");\n    }\n}\n\nclass SubClass : SuperClass {\n    public void method_1() {\n        stdout.printf(\"SubClass.method_1()\\n\");\n    }\n}\n\n\n\nclass SuperClass : GLib.Object {\n    public virtual void method_1() {\n        stdout.printf(\"SuperClass.method_1()\\n\");\n    }\n}\n\nclass SubClass : SuperClass {\n    public override void method_1() {\n        stdout.printf(\"SubClass.method_1()\\n\");\n    }\n}\n\n\nclass SuperClass : GLib.Object {\n    public virtual string prop_1 {\n        get {\n            return \"SuperClass.prop_1\";\n        }\n    }\n}\n\nclass SubClass : SuperClass {\n    public override string prop_1 {\n        get {\n            return \"SubClass.prop_1\";\n        }\n    }\n\n\n\n\nCONVERS\u00c3O\n\n\n/* definindo um apelido para um tipo b\u00e1sico (equivalente ao typedef int Integer em C)*/\n[[SimpleType](/SimpleType)] public struct Integer : uint { }\n\n/* Define um novo tipo de um container como GLib.List com elementos do tipo GLib.Value */\npublic class ValueList : GLib.List<GLib.Value> {\n\n        [CCode (has_construct_function = false)]\n        protected ValueList ();\n        public static GLib.Type get_type ();\n}\n\n\nButton b = widget as Button;\nButton b = (widget is Button) ? (Button) widget : null;\n\n\n\n\nREFER\u00caNCIA\n\n\n/* definindo uma classe */\nclass Track : GLib.Object {             /* herdando de 'GLib.Object' */\n    public double mass;                 /* um campo p\u00fablico */\n    public double name { get; set; }    /* uma propriedade p\u00fablica */\n    private bool terminated = false;    /* um campo privado */\n    public void terminate() {           /* um m\u00e9todo p\u00fablico */\n        terminated = true;\n    }\n}\n\n\n\n\nDELEGA\u00c7\u00d5ES\n\n\ndelegate void DelegateType(int a);\n\ndelegate void DelegateType(int a);\n\nvoid f1(int a) {\n    stdout.printf(\"%d\\n\", a);\n}\n\nvoid f2(DelegateType d, int a) {\n    d(a);       // Chamando uma delega\u00e7ao\n}\n\nvoid main() {\n    f2(f1, 5);  // Passando um m\u00e9todo como argumento de delega\u00e7\u00e3o \u00e0 outro m\u00e9todo\n}\n\nclass Foo {\n\n    public void f1(int a) {\n        stdout.printf(\"a = %d\\n\", a);\n    }\n\n    delegate void DelegateType(int a);\n\n    public static int main(string[] args) {\n        Foo foo = new Foo();\n        DelegateType d1 = foo.f1;\n        d1(10);\n        return 0;\n    }\n}\n\n\n\n\nINTERFACE\n\n\ninterface InterfaceName : SuperInterfaceName {\n}\n\n\n\n\n\nNAMESPACE\n\n\nnamespace NameSpaceName {\n    // ...\n}\n\nusing NameSpaceName;\n\n\n\n\nSTRUCTS\n\n\nstruct NomeStruct {\n    public int a;\n}\n\n\nstruct Cor {\n    public double vermelho;\n    public double verde;\n    public double azul;\n}\n\nCor c2 = { 0.5, 0.5, 1.0 };\nCor c3 = Cor() {\n    red = 0.5,\n    green = 0.5,\n    blue = 1.0\n};\n\n// com infer\u00eancia de tipo var c4 = Cor();\nvar c5 = Color() {\n    red = 0.5,\n    green = 0.5,\n    blue = 1.0\n};\n\n\n\n\nBIBLIOTECAS\n\n\npublic class MyLib : Object {\n\n    public void hello() {\n        stdout.printf(\"Hello World, MyLib\\n\");\n    }\n\n    public int sum(int x, int y) {\n        return x + y;\n    }\n}\n\n$ valac -C -H test.h --library test test.vala --basedir ./\n\n$ gcc --shared -fPIC -o libtest.so $(pkg-config --cflags --libs gobject-2.0) test.c\n\n\nvoid main() {\n    var test = new MyLib();\n    test.hello();\n    int x = 4, y = 5;\n    stdout.printf(\"The sum of %d and %d is %d\\n\", x, y, test.sum(x, y));\n}\n\n\n\n\nCOMANDOS\n\n\n$ valac OlaMundo.vala\n$ ./OlaMundo\n\n\n\n\nFERRAMENTAS\n\n\nvalac\n\nvalac \u00e9 o compilador Vala. Sua fun\u00e7\u00e3o principal \u00e9 transformar o c\u00f3digo Vala em c\u00f3digo C compil\u00e1vel, embora tamb\u00e9m possa automatizar todo o projeto de constru\u00e7\u00e3o e link em casos simples.\n\nUm exemplo simples:\n\n$ valac -o appname --pkg gee-1.0 file_name_1.vala file_name_2.vala\n\nO par\u00e2metro -o solicita que um arquivo de objeto seja criado, em vez de apenas produzir arquivos de origem C. A op\u00e7\u00e3o --pkg diz que essa compila\u00e7\u00e3o precisa de informa\u00e7\u00f5es do pacote gee-1.0. N\u00e3o \u00e9 necess\u00e1rio especificar detalhes sobre quais bibliotecas ser\u00e1 necess\u00e1rio vincular, o pacote tem essas informa\u00e7\u00f5es internamente. Finalmente, \u00e9 fornecida uma lista de arquivos de origem. Se voc\u00ea precisar de um processo de compila\u00e7\u00e3o mais complicado, use a op\u00e7\u00e3o -C para gerar arquivos C em vez de um bin\u00e1rio e continuar o processo manualmente ou atrav\u00e9s de um script.\nvapigen\n\nvapigen \u00e9 uma ferramenta para fazer Bindings. Ele cria arquivos VAPI a partir de metadados de uma biblioteca e qualquer informa\u00e7\u00e3o extra necess\u00e1ria.",
            "title": "Home"
        },
        {
            "location": "/#knowledgebase",
            "text": "P\u00e1gina criada com a finalidade de oferecer uma base de conhecimentos com base em meu ponto de vista.",
            "title": " KnowledgeBase "
        },
        {
            "location": "/#vscode",
            "text": "EXTENS\u00d5ES E PLUGINS  1. Auto Close Tag - Serve para fechar tags automaticamente\n2. Auto Rename Tag - Se voc\u00ea altera o nome na abertura da tag, altera automaticamente no final.\n3. Bracket Pair Colorizer - Colore as chaves de forma que n\u00e3o confunda quando aninhadas\n4. Color Highlight - Ao digitar uma cor, Seja em HEX, RGB ou nome, automaticamente a cor \u00e9 mostrada, como background da palavra\n5. HTML Snippets - Atalhos para gerar html\n6. Intellisense for CSS class names in HTML - autocompleta os nomes das classes do css\n7. TODO Highlight - Tu pode configurar pra mais, mas ao comentar TODO: , FIXIT: fica destacado para uma anota\u00e7\u00e3o importante\n8. GraphQL for VScode - \u00c9 um syntax highlight pra codar em grapql\n9. Import Cost - Bem importante pra ver o tamanho dos imports das libs que voc\u00ea faz no seu projeto, mostrando ela normal e gizipada\n10. Indenticator - Mostra o bloco de codigo que voc\u00ea est\u00e1, meio inutil nas novas vers\u00f5es do Vscode, pois h\u00e1 nativamente j\u00e1.\n11. Es7 react/redux/graphql/react-native -Extens\u00f5es do react e snippets do ES7\n12. ESLint - MUITO IMPORTANTE Ajuda a padronizar seu codigo e ter boas condutas ao codar ( te faz um programador melhor, ao longo do tempo)\n13. Quokka.js - Da pra codar Js e ver os resultados em tempo real direto no editor, bom pra testar umas logicas r\u00e1pidas\n14. REST Client - tu faz requisi\u00e7\u00f5es no pr\u00f3prio editor e obt\u00e9m as respostas para ver se ta tudo certo..etc\n15. JSON Tools - Formatar, minificar e manipular JSON, uma maravilha para quem trabalha com bastante jsons..\n16. Vetur - IMPORTANTE* Pra quem trabalha com Vue \u00e9 indispens\u00e1vel, H\u00e1 snippets, syntax-highlihting, Emmet, Linting / Error Checking, formatting, auto Completion, e debug.\n17. Version Lens - Mostra vers\u00f5es de suas libs e diz se h\u00e1 uma nova vers\u00e3o ou se a sua est\u00e1 depreciada.\n18. Configura pra formatar e deixar o codigo bonitinho\n19. VS Live Share - Permite voc\u00ea mais outras pessoas codarem o mesmo codigo em tempo real :) (muito cuidado kkkkkk)\n20. JavaScript (ES6) code snippets - Snippets pra features do ES6\n21. Babel es6/es7 - colore e ajuda na visualiza\u00e7\u00e3o das features do es6 e es7\n22. Path Intellisense - Te mostra e completa caminhos pra importar algo\n23. Dracula official - Apenas um tema que adoro muito :)\n24. Material Icon theme - apenas pack de icons para ajudar na visualiza\u00e7\u00e3o dos arquivos\n25. todotree\n26. azure cosmodb conectar no mongo\n27. image preview preview da imagem\n28. preview markdown preview de markdown  COMANDOS CURTOS  * CTRL + shift + p (configura\u00e7\u00f5es)\n* CTRL + p (listar arquivos)\n* alt + seta cima/ seta baixo (mover linha(s))\n* alt + seta esquerda/ seta direita (mover entre palavras)\n* shift CTRL K (apagar linha)\n* CTRL f (localizar dentro do arquivo)\n* alt  CTRL f (localizar e substituir dentro do arquivo)\n* CTRL d/b alterar mesmas vari\u00e1veis\n* emmet html>body>div.conteudo",
            "title": "VSCODE"
        },
        {
            "location": "/#linux",
            "text": "TELA  Tela GRUB do boot  DIRET\u00d3RIOS  * raiz (/)\n* Bin\u00e1rios execut\u00e1veis: /bin (cp, mv, ping e grep)\n* Bin\u00e1rios do sistema: /sbin (ifconfig, fdisk)\n* Programas diversos: /usr\n* Configura\u00e7\u00f5es do sistema: /etc\n* Bibliotecas: /lib\n* Opcionais: /opt\n* Aquivos pessoais: /home\n* Inicializa\u00e7\u00e3o: /boot\n* Volumes e m\u00eddias: /mnt e /media\n* Servi\u00e7os: /srv\n* Arquivos de dispositivos: /dev (usb)\n* Arquivos vari\u00e1veis: /var\n* Processos do sistema: /proc\n* Arquivos tempor\u00e1rios: /tmp  COMANDOS  Cancela comando  CTRL + C   Autocompletar  tab  Retorna comandos anterior  Seta para cima e seta para baixo  Sistema  uname  Data  date  Calendario  cal  Hora  time  Retorna os \u00faltimos 1000 comando no console  history  V\u00e1rios comandos juntos  date; cal  Calculadora  bc\n2+2\nsqrt(81)  Caminho atual  pwd  Entrar ou sair de um diret\u00f3rio  cd\ncd ..\ncd / (raiz)\ncd enter (diret\u00f3rio padr\u00e3o)  Listar o conte\u00fado de um diret\u00f3rio  ls\nls -l (lista mostrando os tipos)\nls -la (lista mostrando os tipos e quem esta oculto\ncome\u00e7a com d = diret\u00f3rio\ncome\u00e7a com l = link\ncome\u00e7a com - = arquivo  Limpar a tela do console  clear  Criar arquivo com texto  touch arquivo.txt\n> teste01  Criar pasta  mkdir pasta  Renomear ou Mover  mv message.txt message2.txt  Remover pasta  rm -rf pasta  Copiar de caminho para outro  cp minhapasta1/message.txt minhapasta2  Mostra o conteudo de um arquivo  cat arquivo\necho conteudo > arquivo  Mostrar manual de um comando  man echo  Exibir os dados de IP  ifconfig  Criar usu\u00e1rio  adduser teste  Criar senha  passwd teste  Acessar o usu\u00e1rio  su teste  Remover o usu\u00e1rio  deluser teste  Exibir o conteudo desse arquivo  cat /etc/passwd\ntac arquivo (mostra o conte\u00fado com as linhas invertidas)  Mostrar o conteudo desse arquivo no editor NANO  nano /etc/network/interfaces  Rede  netstat -nlpt  Atualizar reposit\u00f3rio  apt-get update  Atualizar reposit\u00f3rio  apt-get upgrade  Mostra qual \u00e9 meu usuario  whoami  Informa\u00e7\u00f5es do linux  uname -s -r  Permiss\u00e3o  chmod 777 arquivo.txt  Chow cleiton: cleiton arquivo.txt  Dono    chow -R 777 * .  Abrir com terminal e em background  firefox &  Listar processo  top  Matar processo  kill -9 98989  Reiniciar  sudo shutdown -r now\nreboot  Desligar  sudo shutdown -h now\nshutdown -h 1 (vai desligar em 1 minuto)\nhalt\nSair do terminal\nexit",
            "title": "LINUX"
        },
        {
            "location": "/#shell-script",
            "text": "variavel= \u201cola\u201d\necho \"$variavel\"  read teste\necho \"foi $teste\"  $USER\n$SHELL\n$PATH  -lt <\n-gt >\n-le <=\n-ge >=\n-eq ==\n-ne !=  read nota\nif (\"$nota\" -ge \"6\")\nthen\necho \"passou\"\nelse\necho \"rodou\"\nfi  for i in ${seq 1 10}\ndo\necho \"$1\"\ndone",
            "title": "SHELL SCRIPT"
        },
        {
            "location": "/#vimvi",
            "text": "COMANDOS  Abrir o arquivo  vim arquivo.txt  Abrir o arquivo e colocar o cursor no fim  vim arquivo.txt +   Abrir o arquivo e colocar o cursor na linha 8  vim arquivo.txt +8  Abre na linha que tiver bsd  vim arquivo.txt +/bsd  Abre v\u00e1rios arquivos  vim -o arquivo.txt arquivo2.txt  Salvar arquivo  esc : w   Sair  esc : q  Salvar e sair  esc : w q\n:x\nzz  Sair sem salvar  esc : q!  Salvar  esc : set autowrite\n:set aw  Desfaz  esc v  Salva tudo aberto  esc : w a   Salva e sai de todos  esc : wqa  Fim da linha  esc $   Inicio da linha  esc ^  Fim do arquivo  esc :$ (dois pontos cifrao)\nesc G  Inicio do arquivo  esc gg  Linha 8  esc :8\nesc 8G  Pula para pr\u00f3xima palavra  esc w  Pula para palavra anterior  esc b  Pula para frase anterior  esc [  Pula para frase posterior \nesc ]  Pula para paragrafo anterior  esc {  Pula para paragrafo posterior  esc }  Pesquisar palavra linux  esc /linux  Insere na onde est\u00e1  esc i  Insere ap\u00f3s a posi\u00e7\u00e3o  esc a  Insere nova linha ap\u00f3s  esc o  Insere reescrevendo  esc r  Para cima  esc K  Para direita  esc l  Para esquerda  esc h  Para baixo  esc j  Seleciona o paragrafo  esc shift v  REDES  cd /etc/network/interfaces\nvi interfaces\n12 #\n13 auto enp0s3\n14 iface enp0s3 inet static\n15 address 192.168.25.242\n16 netmask 255.255.255.0\n17 network 192.168.25.0\n18 broadcast 192.168.25.255\n19 gateway 192.168.25.1\n\nvi /etc/resolv.conf\nnameserver 192.168.25.1  Calcular IP  apt-get install ipcalc\nipcalc 192.168.0.10  Restartar o Apache  systemctl restart apache2  VPN  VIRTUAL PRIVATE NETWORK  SEGURAN\u00c7A  Pilares: Confidencialidade; Integridade; Disponibilidade  BACKUP  Tipos\nfull, incremental  Gerenciadores de Backup  BackupPC, Amanda, Bacula  Ataques  * SPOOFING\n* SMURF ATTACK\n* SNIFFING\n* CAVALO DE TR\u00d3IA\n* FOR\u00c7A BRUTA\n* DESFIGURA\u00c7\u00c3O DE SITE\n* DOS\n* DDOS  EMULA REDE  GNS3 \nPACKETTRACE  MODELO OSI \nOpen System Interconnection   7 Camadas    * Aplica\u00e7\u00e3o\n* Apresenta\u00e7\u00e3o\n* Ses\u00e3o\n* Transporte\n* Rede\n* Enlace\n* F\u00edsica  An\u00e1lise Top Down do Modelo OSI  * Aplica\u00e7\u00e3o\n* Apresenta\u00e7\u00e3o\n* Ses\u00e3o\n* Transporte\n* Rede\n* Enlace\n* F\u00edsica  Exemplos  * FISICA = REPETIDOR/HUB\n* ENLACE = PONTE/BRIDGE\n* ENLACE = SWITCH  Tipos de Redes  * PAN = Rede pessoal\n* LAN = Rede Local\n* MAN = Rede Metropolitanea\n* WAN = Rede de Longa Dist\u00e2ncia\n* DAN = Rede Departamental\n* GAN = Rede Global  WIRELESS WIFI    WIRE CABO\nLESS SEM  INTERFERIR NA REDE SEM FIO  MICROONDA / TELEFONE SEM FIO PODEM   Software para rede  WIFI DEADSPOT\nWIFI ANALYZE",
            "title": "VIM/VI"
        },
        {
            "location": "/#pentest",
            "text": "Teste de penetracao = teste de intrusao  Ferramentas  * ferramentas de engenharia social\n* ferramentas de trojan\n* ferramentas de for\u00e7a bruta\n* The Harveste\n* Net craft ferramenta para analisar um dom\u00ednio\n* fierce ferramenta de for\u00e7a bruta\n* fierce -dns site  Comando site  site: acunetix login\nsite: acutenix filetype:txt\nlink: acutenix login\nsite: acunetix intitle: password\nsite: XXX intitle: \u201cindex.of\u201d \u201cattachments\u201d  Nikito  nikto -H\nnikto -h site -Tuning 9\nnikto -h site",
            "title": "PENTEST"
        },
        {
            "location": "/#android",
            "text": "DEFINI\u00c7\u00c3O  SO baseado em linux usado em smartphone, tv, rel\u00f3gios.  Apps do SO  Apps do Usu\u00e1rio  VERS\u00d5ES  * Honeycomb\n* Ice Cream Sandwich\n* Jelly Bean\n* KitKat\n* Lolipop\n* Marshmallow\n* Nougat\n* Oreo\n* Pig",
            "title": "ANDROID"
        },
        {
            "location": "/#git",
            "text": "Instala\u00e7\u00e3o Linux  sudo apt-get update\nsudo apt-get install git  Vers\u00e3o  git --version  Configura\u00e7\u00e3o  git config --global user.name \"Your Name\"\ngit config --global user.email \"youremail@domain.com\"\n\ngit config --list  Clonando/Copiando  git clone https://github.com/cleibp/baseLinks.git  Verificando os status  git status  Adicionando os arquivos  git add .  Commit  git commit -m \"aasa\"  Enviando/Empurrando  git push",
            "title": "GIT"
        },
        {
            "location": "/#javascript",
            "text": "DEFINI\u00c7\u00c3O  Javascript !== Java\nLivescript Javascript Ecmascript\nEcma = comite\nPOO baseada em prototipos\nsincrono = if, while, for\nassincrono = setTimout\nNavegadores (MOSAIC, Netscape, IE, Opera, Safari, Firefox, Chrome, Edge)\nVari\u00e1vel \u00e9 espa\u00e7o de mem\u00f3ria para armazenar um valor e identificador \u00e9 nome da vari\u00e1vel;\nCase sensitive;\nPalavras reservadas;\nComent\u00e1rio de uma linha //\nComent\u00e1rio para v\u00e1rias linhas /* */\nfracamente tipado\nTipos de dados primitivos (String, number, boolean, undefined, null)\nTipos de dados refer\u00eancia (object, array, function, date, RegExp, Error)\nobjeto window escopo global\nOperadores(aritm\u00e9ticos, atribui\u00e7\u00e3o, compara\u00e7\u00e3o, l\u00f3gicos, tern\u00e1rio, un\u00e1rio)\nHoisting = eleva\u00e7ao ( move a declaracao para o topo do m\u00e9todo)\nnotacao literal de objetos != javascript object anotation\nEstrutura de Controle  (If else; switch)\nEstrutura de Repeti\u00e7\u00e3o (for while do while)  Vari\u00e1vies e tipos  var nome;\nnome = \u201cCleiton\u201d\nvar idade = 34;\nvar salario = 3277.22;\nvar vr = true;  Concantenado  var dado1 = \u201cBom\u201d\nvar dado2 = \u201cDia\u201d\nvar dado3 = \u201cBrasil \\\n. \\\nAcorda\u201d\nvar dados = dado1 + \u201c\u201d + dado2  + dado3  Verificando o tipo  var whoAmI = \u201cteste\u201d\ntypeof whoAmI  Valores Falso  !! \u201c\u201d\n!!0\n!!-0\n!!null\n!! undefined\n!!NaN  Valores True  !!Array\n!!Object\n!!Function  Undefined != Null  tpeof undefined\ntypeof null  OPERADORES  ARITM\u00c9TICOS (+ - * / % ++ \u2013 **)\nvar soma = 20 + 20\n\nUN\u00c1RIO\ntypeof soma\n\n\nATRIBUI\u00c7\u00c3O ( =  += -= *= /= %= **= )\nvar  numero   = 10\nnumero += 2\n\nCOMP\u00c1RA\u00c7\u00c3O ( > < <= >= != )\nvar n1 = 10\nvar n2 = 10\nvar r =  n1 == n2\n\nL\u00d3GICOS (&& || ! )\nvar res = (n1 > n2) && (n1> n3)\nvar res = (n1 > n2) || (n2 > n3)\n var res = n1 != n2\n\nTERN\u00c1RIO\nvar idade = 18\nidade >= 18 ? \u201cmaior\u201d : \u201cmenor\u201d \n\nOUTROS TIPOS DE OPERADORES\n( typeof  instanceof  in . [] new)\n\nvariavel instanceof String\n\nvar objeto = {nome: \u201cCleiton\u201d}\nnome in objeto\n\nvar array = new Array(\u201ca\u201d, \u201cb\u201d, \u201cc\u201d)\n0 in array\n\nvar objeto = {nome: \u201cCleiton\u201d, teste: true}\ndelete  objeto.teste\n\nvar array = [\u201ca\u201d, \u201cb\u201d, \u201cc\u201d]\ndelete array[0]  ARRAY  var array = []\narray[0] = \u2018teste\u2019\narray.push(\u201cteste 2\u201d)\nconsole.log(array)\n\nvar nomes = [\u2018Paulo\u2019, \u2018Joao\u2019, \u2018Maria\u2019]\nconsole.log(nomes)\nconsole.log(nomes[0])\nconsole.log(nomes.length)\n\nvar numeros = new Array();\nvar numbers = new Array(25, 30, 50);\n\nvar tipagem = [\n\u201cstring\u201d,\n25.88,\ntrue,\n{livro: \u2018JS\u2019, autor: \u2018Cleiton\u2019},\n[0, 1, 2, 3],\nfunction(a,b){\n    return a + b\n}\n]\n\nvar a = [5, 7, 9, 11]\nvar teste = 5 in a\nconsole.log(teste)\n\nvar espaco = [\u2018teste\u2019, \u2018c\u2019, ,,, true]\nespaco[20] = 20\n\nvar ultimo = [13, 14, 18, 22]\nultimo.push(24) // insere no final\nconsole.log(array)\n\nvar primeiro = [4, 5, 6, 7]\nprimeiro.unshift(1) // insere no comeco\nconsole.log(primeiro)\n\nvar excluir = [44, 55, 66, 77]\ndelete excluir[3]\nconsole.log(excluir)\n\nexcluir.pop() // deleta a ultima posicao\nconsole.log(excluir)\n\nexcluir.shift() // deleta a primeira posicao\nconsole.log(excluir)\n\nexcluir.splice(2,1) // indice e quantidade\nconsole.log(excluir)\n\nvar x = [1, 2, 3, 4, 5]\nx.length = 15\n\nObject.defineProperty(x, \u2018length\u2019, {writable: false})\nObject.getOwnPropertyDescriptores(x)\n\nvar numeros = [0, 1, 2, 3, 5]\nnumeros.join(\u201c.\u201d)\nconsole.log(numeros)\n\nvar arrayAll = [\u2018a\u2019, true, new Date()]\narrayAll.toString()\nconsole.log(arrayAll)\n\narrayAll.toLocaleString()\nconsole.log(arrayAll)\n\nvar arrayReverse = [1, 2, 3, 4, 5]\narrayReverse.reverse()\nconsole.log(arrayReverse)\n\nvar arraySort = [90, 20, 55, 95, 102]\narraySort.sort(function(x,y){\n    return x - y\n})\nconsole.log(arraySort)\n\nvar arrayConcat = [1, 2, 3, 4, 5]\narrayConcat.concat(6, 7, 8, 9, 10)\nconsole.log(arrayConcat)\n\nvar arraySice = [\u2018arroz\u2019, \u2018feijao\u2019, \u2018a\u00e7ucar\u2019, \u2018sal\u2019, \u2018oleo\u2019]\narraySice.slice(0, 3)\nconsole.log(arraySice)\n\nvar arraySplice = [1, 2, 3, 4, 5]\narraySplice.splice()\nconsole.log(arraySplice)\n\nvar arrayMap = [2, 6, 8, 10, 12]\nvar dobro = arrayMap.map(function(valorElementoArray, indiceDoArray, array) {\n    return  valorElementoArray * 2;\n})\nconsole.log(dobro)\n\nvar arrayFilter =  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\nvar menoresQueCinco =  arrayFilter.filter(function(valor, indice, array){\n    return valor < 5\n})\nconsole.log(menoresQueCinco)\n\nvar arrayEvery = [2, 9, 5, 6, 7, 15]\nvar menoresQueVinte =  arrayEvery.every(function(item, indice, array){\n    return < 20\n})\nconsole.log(menoresQueVinte)\n\nvar arraySome = [2, 9 , 5, 6, 7, 15]\nvar  menoresQueDez =  arraySome.some(function(item, indice, arrayAll){\n    return item > 10\n})\nconsole.log(menoresQueDez)\nvar arrayReduce = [1, 2, 3, 4, 5]\nvar soma = arrayReduce.reduce(function(acumulador, valorEleArray, indice, array){\n    return   acumulador + valorEleArray\n}, 0)\nconsole.log(soma)\n\nvar arrayIndexOf = [\u2018maria\u2019,  \u2018jose\u2019, \u2018paulo\u2019]\nvar resposta =  arrayIndexOf.indexOf(\u2018paulo\u2019)\nconsole.log(resposta)\n\nvar arrayLastIndexOf = [\u2018maria\u2019,  \u2018jose\u2019, \u2018paulo\u2019]\nvar resposta =  arrayLastIndexOf.lastIndiceOf(\u2018paulo\u2019)\nconsole.log(resposta)  OBJETO  var obj =\n{\n    nome: \"Cleiton\",\n    idade: 50\n}\nvar json = JSON.stringify(obj)  JSON  json (nao aceita funcao no valor)\n{\n    \"nome\": \"Cleiton\",\n    \"idade\": 20,\n    \"filiacao\": {\n        \"pai\": \"nome do pai\",\n        \"mae\": \"nome da mae\"\n    },\n    \"cursos\": ['tecnico', 'pos'] \n}\nvar obj = JSON.parse(json)\n\nvar objPessoa = Object.create(Object.prototype)\nobjPessoa.nome = \u2018Joao\u2019\n\nvar meuObjeto = {\n    nome: \u2018Cleiton\u2019,\n    saudacao: function() {\n        return \u201cOl\u00e1\u201d + this.nome\n    }\n}\n\n\nvar pedido = new Object()\npedido.total = 400.00\nconsole.log(\u201ccliente\u201d in pedido) // verifica  se  existte\npedido.hasOwnProperty(\u201ctotal\u201d)\ndelete pedido.total\n\nvar folhaPagamento = {\n    _total: 0,\n    set total(valor) {\n        this._total = valor\n    },\n    get total() {\n        return this._total\n    }\n}\n\nfolhaPagamento.total = 77.000\nconsole.log(folhaPagamento.total)\nconsole.log(Object.getOwnPropertyDescription(folhaPagamento))\n\nvar objeto = {a:2, b: 3, c: 5}\nObject.defineProperty(objeto, \u201ca\u201d, {\n    enumerable: false,\n    configurable: false,\n})\n\nObject.seal(variavel)\nObject.isSealed(variavel)\nObject.isExtensible(variavel)\nObject.freeze(variavel)\nObject.isFrozen(variavel)  Objeto window\ntypeof window\ntypeof Window\nwindow.console.log(\u201cteste\u201d)  WRAPPER  var vstring = \u201cCurso JS\u201d\nvstring.substr(0,5)\n\nString(variavel)\nNumber(variavel)\nBoolean(variavel)\nObject(variavel)  FUNC\u00d5ES  function mensagem() {\n    console.log(\u201cOl\u00e1\u201d)\n}\nmensagem()\n\n\nfunction boasVinda(nome){\n    console.log(\u201cOl\u00e1\u201d, nome)\n}\nboasVindas(\u201cPaulo\u201d)\n\nfunction soma(valor1, valor2){\n    return valor1 + valor2\n}\nconsole.log(soma(10, 20))\n\nvar elevarQuadrado = function(numero){ return numero * numero }\nconsole.log(elevarQuadrado(8))\nvar mult = function() {return 2 * 2}()\nconsole.log(mult)\n\nvar objeto = { \n    qtde: 8, \n    valor: 10,\n    somar: function(){\n        return this.qtde * this.valor\n    }\n}\n\nconsole.log(objeto.somar())  IIFE  (function () {\n\n})()  CLOSURE  function makeFunc() {\n  var name = \"Mozilla\";\n  function displayName() {\n    alert(name);\n  }\n  return displayName;\n}\n\nvar myFunc = makeFunc();\nmyFunc();  AN\u00d4NIMA  var minhaFuncao = function() {\n    console.log(\u201cfuncao\u201d)\n}\nminhaFuncao()  CALLBACK  function mostrarCliente(nome){\n    console.log(nome)\n}\n\nfunction realizarVenda(calback){\n    callback(\u2018Pedro\u2019)\n}\nrealizarVenda(mostrarCliente)  SETTIMOUT E SETINTERVAL  setTimout(function(){\n\n}, 1000)\n\n\nsetInterval(function(){\n\n}, 2000)  Literal  var nome = \u201cCleiton\u201d\n\nvar numero = 30\n\nvar bool = true\n\nvar item = {}\n\nvar item = {nome: \u201crefrigerante\u201d, preco: 5.1, descricao: \u201cpet 2L\u201d}\n\nvar produtos = []\n\nvar produtos = [\u2018sorvete\u2019, \u2018biscoito\u2019, \u2018banana\u2019 ]\n\nvar regexpLiteral = /js/\nvar string = \u201cMinha expressao com js\u201d\nregexpLiteral.test(string)\nregexpLiteral.exec(string)\n\nfunction soma(v1, v2) {\n    return v1 + v2\n}\nconsole.log(soma(5,3))\n\ntry {\n\n}\ncatch () {\n\n} finally () {\n\n}\nfunction soma (a, b) {\n    return a + b\n}  Construtor  var nome = new String(\u2018Cleiton Bezerra\u2019)\nnome.length\nnome.charAt(2)\nnome.charCodeAt(2)\nnome.indexOf(\u201cC\u201d)\nnome.lastOf(\u201co\u201d)\nnome.concat(\u201cPaiva\u201d)\nnome.substr(\u201cCleiton\u201d)\nnome.replace(\u201ci\u201d,\u201dy\u201d)\nnome.split(\u201c/\u201d, -)\nnome.toLowerCase()\nnome.toUpperCase()\nnome.match(/d/g)\nnome.trim(()\nnome.repeat(3)\n\nvar numero = new Number(30)\nnumero.toString()\nnumero.toFixed(2)\nNumber.parseInt()\nNumber.isInteger\nNumber.isNaN\nnumero.toPrecision(6)\nnumero.isFinite(2/2)\nNumber.MAX_VALUE\nNumber.MIN_VALUE\n\nvar bool = new Boolean(true)\n\n\nvar item = new Object()\nitem.nome = \u201crefrigerante\u201d\nitem.preco = 5.1\ndescricao = \u201cpet 2L\u201d\n\nvar produtos = new Array(\u2018sorvete\u2019, \u2018biscoito\u2019,  \u2018banana\u2019)\nprodutos[0]\nprodutos[2] = \u201cmaca\u201d\n\nvar data = new Date()\nvar data = new Date(\u201c2020-10-23\u201d)\ndata.getFullYear()\ndata.getMonth()\ndata.getDay()\ndata.getDate()\ndata.getHours()\ndata.getMinutes()\n\nvar regex = new RegExp(\u2018js\u2019)\n\nthrow new Error(\u201cocorreu erro\u201d)  ESCOPO GLOBAL  fora de metodo e objeto \u00e9 global\nvar a = 2 ou a = 2  ESCOPO LOCAL  variaveis dentro de objeto ou funcao  const = constante;\nvar = escopo global;\nlet = escopo local;\n\nlet nao sofre hosting\n\nvar pessoa = {nome: 'Ana', idade: 20};\nvar {nome, idade} = pessoa;\nconsole.log(nome, idade);\n\nvar {nome: n, idade: i} = pessoa;\nconsole.log(n, i);\n\nvar genero, situacao = 'Ativa'} = pessoa;\nconsole.log(genero, situacao);\n\nvar pessoa = {\n    nome: 'Ana',\n    endereco: { rua: 'A', numero: 100 }\n}\n\nvar { endereco: { rua, numero, cep } } = pessoa;\nconsole.log( rua, numero, cep);\n\nvar [a] = [10];\nconsole.log(a);\n\nvar [n1, ,n3, ,n5, n6 = 0] = [10, 7, 9, 8];\nconsole.log(n1,n3,n5,n6);\n\nvar [,[,nota]] = [[7,8,8],[9,6,8]];\nconsole.log(nota)  MAP  let nomeString = {nome: \"Cleiton\", idade: 34}\nconst map = new Map()\nmap.set(nomeString, sexo)\nmap.get(nomeString)\nmap.delete(nomeString)\nmap.has('cleiton')  WEAKMAP  WeakMap.prototype.set()\nWeakMap.prototype.get()\nWeakMap.prototype.has()\nWeakMap.prototype.delete()\n\nconst weakMap = new WeakMap()\nweakMap.set(objeto, objeto)\nweakMap.get(objeto)\nweakMap.has(objeto)\nweakMap.delete(objeto)  SET  const set = new Set([1, 2, 3])\nset.add(23)\nset.add({teste: 'teste'})\nset.size\nset.delete(1)  WEAKSET  const weakSet = new weakSet()\nweakSet.add(objeto)\nweakSet.has(objeto)\nweakSet.add(objeto)\nweakSet.delete(objeto)  SPREAD  function mostrarNumeros(a, b, c, d){\n    console.log(a, b, c, d)\n}\nconst arrayNumeros = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nmostrarNumeros(...arrayNumeros)\n\nlet arrayLetras = [a, b, c, d]\nlet arrayNumeros = [1, 2, 3]\nlet arrayNumeros2 = [6, 8, 9]\n\nlet arraySpreed = [...arrayLetras, ...arrayNumeros, ...arrayNumeros2]\n\n\nexemplo = spread + reduce  TEMPLATE STRING  let nome = \"Cleiton\"\nlet texto = `Template string ${5 + 5} ${nome}`  ARROW  const somar = (a, b) => {\n    return a + b;\n}\nsomar(10, 20)  MELHORIAS LET  let nome = \"Maria\", idade = 27, sexo = \"F\"\nlet objES5 = {nome: nome, idade: idade, sexo: sexo}\nlet objES6 = {nome, idade, sexo}  MELHORIAS OBJETO  objCalcES5 = {\n    msg: function msg() {\n        console.log('Ol\u00e1')  \n    },\n    somar: function somar(a, b) {\n        console.log(a + b)\n    }\n}\nobjCalcES5.msg()\nobjCalcES5.somar(10, 20)\n\n\nobjCalcES6 = {\n    msg() {\n        console.log('Ol\u00e1')  \n    },\n    soma(a, b) {\n        console.log(a + b)\n    }\n}\nobjCalcES6.msg()\nobjCalcES6.somar(10, 20)\n\n\nobjPropES5 = {\n    nome: \"Cleiton\"\n}\nobjPropES5[\"seq + 23\"] = 23\n\n\nobjPropES6 = {\n    nome: \"Cleiton\",\n    [\"seq + 23\"]: 23\n}  MELHORIAS DESTRUTURAC\u00c2O  let objDest = {\n    nome: \"Cleiton\",\n    sexo: \"M\"\n    idade: 34\n} \nlet es5 = objDest.nome\nlet {nome, idade} = objDest\n\n\nlet array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet [um, dois, tres,,,,,nove, dez] = array;\n\n\nlet pessoas = [\n    {nome: 'Cleiton', telefone: '988378457'},\n    {nome: 'Lilian', telefone: '993837481'}\n]\nlet [, {nome, telefone}] = pessoas  MELHORIAS CLASSE  function PessoaES5(nome, cpf){\n    this.nome = nome;\n    this.cpf = cpf;\n}\nPessoaES5.prototype.nomeUpper = function() {\n    return this.nome.toUpperCase();\n}\n\nfunction FuncionarioES5(nome, cpf, matricula){\n    PessoaES5.call(this, nome, cpf);\n    this.matricula = matricula\n}\n\nvar objPessoaES5 = new PessoaES5('Cleiton', '33744628809')\nobjPessoaES5.nomeUpper()\n\nFuncionarioES5.prototype = Object.create(PessoaES5.prototype)\nFuncionarioES5.prototype.constructor = FuncionarioES5;\n\nvar objFuncionario = new FuncionarioES5(\"Cleiton\", \"3374460\",\"12346\")\n\n\n\nclass PessoaES6{\n    constructor(nome, cpf){\n        this.nome = nome;\n        this.cpf = cpf;\n    }\n    nomeUpper(){\n        return this.nome.toUpperCase(); \n    }\n}\n\nclass FuncionarioES6 extends PessoaES6{\n    constructor(nome, cpf, matricula){\n        super(nome, cpf);\n        this.matricula = matricula\n    }\n}\n\n\nvar objPessoaES6 = new PessoaES6('Cleiton', '33744628809')\nobjPessoaES6.nomeUpper()\nvar objFuncES6 = new FuncionarioES6('Antonio', '122.444.566-89', '555')  DOM \u2013 MODELO DE OBJETO DIN\u00c2MICO  API de acesso a elementos da p\u00e1gina\n\ngetElementById\ngetElementByTagName\ngetElementByName\ngetElementByClassName\nquerySelector\nquerySelectorAll  input[type=text]\n\ncreateElement creatTextNode\nappendChild insertBefore innerHTML\nremoveChild replaceChild  IF  var numero = 1\nif (numero == 1) {\n    console.log(\u201c1\u201d)\n} else if (numero == 2) {\n    console.log(\u201c2\u201d)\n} else{\n    console.log(\u201coutro\u201d)\n}  SWITCH  var numero = 1\nswitch (numero) {\n    case 1:\n        console.log(\u201c1\u201d)\n        break\n    case 2:\n        console.log(\u201c2\u201d)\n        break\n    default:\n        console.log(\u201coutro\u201d)\n        break\n}  FOR  for (var i=0; i < 10; i++) {\n\n}\n\nFOR IN\nvar obj = {nome: \u201cCleiton\u201d, idade: 34}\nfor (var chave in obj)  {\n    console.log(chave)\n}\n\nFOR OF\nvar array = [\u201ca\u201d, \u201cb\u201d, \u201cc\u201d]\nfor (var valor of array) {\n    console.log(valor)\n}  WHILE  var i = 0\nwhile (i < 10) {\n    console.log(\u201ci\u201d)\n    i++\n}  DO WHILE  var i = 0\ndo {\n    console.log(\u201ci\u201d)\n} while (i < 10)  HORA PARA HOSTS  ntp.br  SESSIONSTORAGE  let key = \"Key1\";\nsessionStorage.getItem(key);\nsessionStorage.setItem(key, data: \"Cleiton\");\nsessionStorage.removeItem(key)\nsessionStorage.clear();  LOCALSTORAGE  let key2 = \"localStorage\";\nlocalStorage.getItem(key);\nlocalStorage.setItem(key, data: \"Cleiton\");\nlocalStorage.removeItem(key)\nlocalStorage.clear();",
            "title": "JAVASCRIPT"
        },
        {
            "location": "/#ferramentas-node",
            "text": "WEBPACK  DEFINI\u00c7\u00c3O  empacotador de modulos\nnpm install -y\nnpm install --save-dev webpack webpack-cli\nwebpack.config.js\nconst path = require('path');  M\u00d3DULOS  module.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'bundle.js'\n  }\n};\n\npackage.json\ndev: \"webpack --node development --watch\",\nbuild: \"webpack --node production\",\n\nCrio as classes em seus arquivos\nCrio as instancias das classes\nimport no index.js as instancias\n\nbabel-polyfill\nlet p = new Promise(function(resolve, reject){\n    let teste = true;\n    if (teste){\n        resolve(\"ok\")\n    }else{\n        reject(\"erro\")\n    }\n})\np.then(retorno => {\n    console.log(retorno)\n}).catch(retorno => {\n    console.log(retorno)\n})\n\nnpm install --save-dev webpack-dev-server  package.json  start: \"webpack-dev-server --node development --open\"\n\nnpm install --save-dev style-loader\nnpm install --save-dev css-loader  BABEL  DEFINI\u00c7\u00c3O  Babel \u00e9 um compilador javascript\ntransformar seu codigo moderno em uma vers\u00e3o antiga mais estavel.  COMANDOS  npm init -y\nnpm install --save-dev babel-cli babel-preset-env\n.babel.rc\n{\n    \"presets\": [\n        [\n          \"@babel/env\"\n        ]\n    ]\n}  package.json  build: \"babel src -d dist\"  GRUNT  DEFINI\u00c7\u00c3O  Automatizador de tarefas  INSTALA\u00c7\u00c3O  npm install load-grunt-task  grunt-contrib-connect grunt-newer grunt-contrib-copy  grunt-contrib-compress  grunt-contrib-simlink grunt-contrib-concat --save-dev  ARQUIVO  Gruntfile.js\nmodule.export = function(grunt) {\n    require('load-grunt-task')(grunt)\n    grunt.initConfig({\n        jshint: {\n            sample: {\n                files: 'src/*.js'           \n            }       \n        },\n        watch: {\n            sample: {\n                files: 'src/*.js',\n                tasks: 'jshint'         \n            }\n        },\n        connect: {\n            server: {\n                options: {\n                    base:'www',\n                    keepalive: true,\n                    open: {\n                        target: 'http://localhost:8000/index.html',\n                        appName: 'fff',\n                        callback: function() {\n                            console.log(\"OK\")                       \n                        }\n                    }               \n                }           \n            }       \n        }\n    })\n    grunt.loadNpmTask('grunt-contrib-jshint');\n    grunt.registerTask('default', []);\n};  COMANDO  grunt\ngrunt connect watch\ngrunt copy\ngrunt compress\ngrunt simlink\ngrunt concat  GULP  DEFINI\u00c7\u00c3O  Plataforma de automatiza\u00e7\u00e3o de tarefas  INSTALA\u00c7\u00c3O  npm install gulp gulp-sass gulp-htmlmin gulp-notify del --save-dev \nnpm install browser-sync --save-dev  TAREFAS  task, src, dest, watch, pipe  DIRET\u00d3RIOS  src\ndist  ARQUIVO  gulpfile.js\nvar gulp = require('gulp');\nvar html = require('gulp-htmlmin');\nvar sass = require('gulp-sass');\nvar notify = require('gulp-notify');\nvar browserSync = require('browser-sync').create();\n\ngulp.task('sass', function(){\n    return gulp.src('./src/scss/style.scss')\n        .pipe(sass({outputStyle:\"compressed\"}))\n        .on(\"error\", notify.onError(\"Error: <%= error.message %>\"));\n        .pipe(gulp.dest('./dist/'));\n        .pipe(browserSync.stream());\n});\n\ngulp.task('html', function(){\n    return gulp.src('./src/index.html')\n        .pipe(html({collapseWhitespace:true}))\n        .on(\"error\", notify.onError(\"Error: <%= error.message %>\"))\n        .pipe(gulp.dest('./dist/'));\n});\n\ngulp.task('BS', ['html', 'sass'], function(){\n    browserSync.init({\n        server: {\n            baseDir: './dist/css'       \n        }   \n    })\n    gulp.watch('./src/index.html', ['html']);\n    gulp.watch('./src/scss/style.scss', ['sass']);\n});\n\ngulp.task('default', ['BS']);  COMANDO  gulp",
            "title": "FERRAMENTAS NODE"
        },
        {
            "location": "/#preprocessadores",
            "text": "TYPESCRIPT  DEFINI\u00c7\u00c3O  Super set do javascript criado pela Microsoft.  INSTALA\u00c7\u00c3O  npm install -g typescript  ARQUIVO  arquivo.ts\n\nclass Pessoa {\n    nome: string\n    constructor(pessoa: string){\n        this.nome = pessoa;\n    }\n    exibirNome(){\n        return `Ola ${this.nome}`\n    }\n}\nlet pessoa = new Pessoa(\"Cleiton\");\nconsole.log(pessoa.exibirNome())  VARIAVEIS  var p1: string = \"Ola\";\nlet p2: string = 'Bom Dia';\nconst pi: number = 3.14;\nreadonly bonus: number;  TIPO DE DADOS  let nome: string = \"Cleiton\";\nlet numero1: number = 45;\nlet numero2: number = 12.5;\nlet ativo: boolean = true;\nlet teste: any \nlet array1: number[1, 2, 3];\nlet array2: Array<string> = ['a', 'b', 'c'];\nlet array3: any[] = ['a', 2, true]\nlet tuple: [string, number] = [\"cleiton\", 22]\nlet exemplo1: undefined;\nlet exemplo2; null;\n\n(<string> var1)\n(va1 as string)\n\n\nenum Day{SEGUNDA, Ter\u00e7a}\nlet day: Day = Day.SEGUNDA  FUNCOES  function func(): void {\n    console.log(\"Teste\")\n}\n\nfunction add(v1:number, v2:number, v3?:number): number{\n    if (v3 !== undefined)\n        return v1 + v2 + v3\n\n    return v1 + v2\n}\n\n\nlet sum = (n1: number, n2: number) => n1 + n2\nlet sum = (n1: number, n2: number) => { return n1 + n2 }  OPERADORES  ===, !==  FOR  let array = [\"Cleiton\", \"LLLL\"];\nfor(let i = 0; i < array.length; i++){\n}\n\nfor(let prop in array){\n}\n\nfor(let prop of array){\n}  MAP  let nam = new Map<string, number>();\nnam.set(\"Adao\", 14);  SET  let nameset = new Set<string>();\nnameset.add(\"Cleiton\");\nnameset.has(value: \"Cleiton\");\nnameset.delete(value: \"Cleiton\");  PROMISE  let promise = new Promise((resolve, reject)=> {\n    let isOpen: boolean = true;\n    if (isOpen) {\n        resolve(\"open\");\n    }else {\n        reject(\"erro\");\n    }\n})\npromise.then(onfull: (res) => {\n    console.log(res);\n}).catch(onreject: (rej) => {\n    console.log(rej);\n})  DECORATOR  @course\nclass Person{\n    name: string;\n}\n\nfunction course(target: any){\n    Object.defineProperty(target.prototype, propertyKey: \"course\", attribute: {value: () => \"Typescript\"})\n}\nlet p24 = new Person();\np24.course()\n@course({\n    course: \"Dev\"\n})  INTERFACES  interface Person {\n    name: string;\n}\n\ninterface Employee extends Person {\n    salary: number;\n}\n\nlet pe: Person = {name: \"Cleiton\"};\nlet emp: Employee = {name: \"Cleiton\", salary: 2000};  CLASSES  class Person{\n    private _name: string;\n    constructor(name: string){\n        this._name = name;\n    }\n    print(): void{\n        console.log(`${this._name}`)\n    }\n\n    get name() {\n        return this._name\n    }\n\n    set name(value: string){\n        this._name = value;\n    }\n\n}\n\nclass Employee extends Person{\n    private _salary: number;\n    constructor(name: string, salary: number){\n        super(name);\n        this._salary = salary;\n    }\n    print(): void{\n        super.print();\n        console.log(`${this._salary}`)\n    }\n\n    get salary(): number{\n        return this._salary;\n    }\n\n    set salary(value: number){\n        this._salary = value;\n    }\n}\nlet p1 = new Person(\"Cleiton\");\nlet emp = new Employee(\"Cleiton\", 5000)  NAMESPACE  namespace validacao {\n    let emailRegex:RegExp = ;\n    export class EmailValidacao{\n        return(): boolean{\n            return emailRegex.test(str);        \n        }\n    }\n}\n\nimport EmailValidacao = Validation.EmailValidacao\nlet emailExample = [\"lll@bol.com.br\"]\nemailExample.forEach((email) => {\n    console.log(`${new EmailValidacao().isValid(email)}`)\n})\n\n\narquivo.ts\nexport class EmailValidacao{\n    return(): boolean{\n        return emailRegex.test(str);        \n    }\n}\n\narquivo2.ts\nimport {EmailValidacao} from \"./arquivo.ts\"  ERRO  try{\n\n} catch (err) {\n    throw err;\n    console.log(\"Erro\");\n} finally {\n    console.log(\"sempre\");\n}  COMANDO  tsc helloword.ts",
            "title": "PREPROCESSADORES"
        },
        {
            "location": "/#frameworks-js",
            "text": "ANGULARJS  BIND  <div ng-app=\"\">\n  <p>Name: <input type=\"text\" ng-model=\"name\"></p>\n  <p ng-bind=\"name\"></p>\n</div>  EXPRESS\u00d5ES  <div ng-app=\"\">\n  <p>My first expression: {{ 5 + 5 }}</p>\n</div>  M\u00d3DULOS  <div ng-app=\"myApp\">...</div>\n\n<script>\n\nvar app = angular.module(\"myApp\", []);\n\n</script>  DIRETIVAS \nNG-APP NG-MODEL NG-INIT NG-SHOW NG-DISABLE NG-HIDE NG-REPEAT  <div ng-app=\"\" ng-init=\"firstName='John'\">\n\n<p>Name: <input type=\"text\" ng-model=\"firstName\"></p>\n<p>You wrote: {{ firstName }}</p>\n\n</div> \n\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n  Name: <input ng-model=\"name\">\n</div>\n\n<div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n  Name: <input ng-model=\"name\">\n  <h1>You entered: {{name}}</h1>\n</div>\n\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n  $scope.name = \"John Doe\";\n});\n</script> \n\n<form ng-app=\"\" name=\"myForm\">\n  Email:\n  <input type=\"email\" name=\"myAddress\" ng-model=\"text\">\n  <span ng-show=\"myForm.myAddress.$error.email\">Not a valid e-mail address</span>\n</form>\n\n<form ng-app=\"\" name=\"myForm\" ng-init=\"myText = 'post@myweb.com'\">\n  Email:\n  <input type=\"email\" name=\"myAddress\" ng-model=\"myText\" required>\n  <h1>Status</h1>\n  {{myForm.myAddress.$valid}}\n  {{myForm.myAddress.$dirty}}\n  {{myForm.myAddress.$touched}}\n</form>\n\n\n<div ng-app=\"\" ng-init=\"mySwitch=true\">\n\n    <p>\n        <button ng-disabled=\"mySwitch\">Click Me!</button>\n    </p>\n\n    <p>\n        <input type=\"checkbox\" ng-model=\"mySwitch\">Button\n    </p>\n\n    <p>\n        {{ mySwitch }}\n    </p>\n\n</div>\n\n\n<div ng-app=\"\">\n\n    <p ng-hide=\"true\">I am not visible.</p>\n\n    <p ng-hide=\"false\">I am visible.</p>\n\n</div> \n\n<div ng-app=\"\" ng-init=\"names=['Jani','Hege','Kai']\">\n  <ul>\n    <li ng-repeat=\"x in names\">\n      {{ x }}\n    </li>\n  </ul>\n</div>  COMPLETO  <div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n  <h1 ng-click=\"changeName()\">{{firstname}}</h1>\n</div>\n\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n  $scope.firstname = \"John\";\n  $scope.changeName = function() {\n    $scope.firstname = \"Nelly\";\n  }\n});\n</script>  ESCOPO  $scope.minhaVariavelTexto = \"texto\"\n\n$scope.minhaVariavelNumerica = 2\n\n$scope.ativo = true  <div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n\n<h1>{{carname}}</h1>\n\n</div>  <script>\nvar app = angular.module('myApp', []);\n\napp.controller('myCtrl', function($scope) {\n  $scope.carname = \"Volvo\";\n});\n</script>   FILTRO  { firstName | uppercase }\n{ firstName | lowercase }  <div ng-app=\"myApp\" ng-controller=\"namesCtrl\">\n\n<ul>\n  <li ng-repeat=\"x in names | orderBy:'country'\">\n    {{ x.name + ', ' + x.country }}\n  </li>\n</ul>\n\n</div>  <div ng-app=\"myApp\" ng-controller=\"costCtrl\">\n    <h1>Price: {{ price | currency }}</h1>\n</div>   <div ng-app=\"myApp\" ng-controller=\"namesCtrl\">\n\n<table border=\"1\" width=\"100%\">\n  <tr>\n    <th ng-click=\"orderByMe('name')\">Name</th>\n    <th ng-click=\"orderByMe('country')\">Country</th>\n  </tr>\n  <tr ng-repeat=\"x in names | orderBy:myOrderBy\">\n    <td>{{x.name}}</td>\n    <td>{{x.country}}</td>\n  </tr>\n</table>\n\n</div>  <script>\nangular.module('myApp', []).controller('namesCtrl', function($scope) {\n  $scope.names = [\n    {name:'Jani',country:'Norway'},\n    {name:'Carl',country:'Sweden'},\n    {name:'Margareth',country:'England'},\n    {name:'Hege',country:'Norway'},\n    {name:'Joe',country:'Denmark'},\n    {name:'Gustav',country:'Sweden'},\n    {name:'Birgit',country:'Denmark'},\n    {name:'Mary',country:'England'},\n    {name:'Kai',country:'Norway'}\n  ];\n  $scope.orderByMe = function(x) {\n    $scope.myOrderBy = x;\n  }\n});\n</script>   SERVI\u00c7OS  var app = angular.module('myApp', []);\napp.controller('customersCtrl', function($scope, $location) {\n    $scope.myUrl = $location.absUrl();\n}); \n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $http) {\n  $http.get(\"welcome.htm\").then(function (response) {\n    $scope.myWelcome = response.data;\n  });\n});\n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $timeout) {\n  $scope.myHeader = \"Hello World!\";\n  $timeout(function () {\n    $scope.myHeader = \"How are you today?\";\n  }, 2000);\n});\n\n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $interval) {\n  $scope.theTime = new Date().toLocaleTimeString();\n  $interval(function () {\n    $scope.theTime = new Date().toLocaleTimeString();\n  }, 1000);\n});  HTTP  var app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $http) {\n  $http.get(\"welcome.htm\")\n  .then(function(response) {\n    $scope.content = response.data;\n    $scope.statuscode = response.status;\n    $scope.statustext = response.statusText;\n  });\n});\n\n\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope, $http) {\n  $http.get(\"wrongfilename.htm\")\n  .then(function(response) {\n    // First function handles success\n    $scope.content = response.data;\n  }, function(response) {\n    // Second function handles error\n    $scope.content = \"Something went wrong\";\n  });\n});   SELECT  <select ng-model=\"selectedCar\" ng-options=\"y.brand for (x, y) in cars\">\n</select>  EVENTOS      ng-blur\n    ng-change\n    ng-click\n    ng-copy\n    ng-cut\n    ng-dblclick\n    ng-focus\n    ng-keydown\n    ng-keypress\n    ng-keyup\n    ng-mousedown\n    ng-mouseenter\n    ng-mouseleave\n    ng-mousemove\n    ng-mouseover\n    ng-mouseup\n    ng-paste  <div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n\n<button ng-click=\"count = count + 1\">Click me!</button>\n\n<p>{{ count }}</p>\n\n</div>\n<script>\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n  $scope.count = 0;\n});\n</script>   INCLUDE  <body ng-app=\"\">\n\n    <div ng-include=\"'myFile.htm'\"></div>\n\n</body>   ROTAS  <body ng-app=\"myApp\">\n\n<p><a href=\"#/!\">Main</a></p>\n\n<a href=\"#!red\">Red</a>\n<a href=\"#!green\">Green</a>\n<a href=\"#!blue\">Blue</a>\n\n<div ng-view></div>\n\n<script>\nvar app = angular.module(\"myApp\", [\"ngRoute\"]);\napp.config(function($routeProvider) {\n  $routeProvider\n  .when(\"/\", {\n    templateUrl : \"main.htm\"\n  })\n  .when(\"/red\", {\n    templateUrl : \"red.htm\"\n  })\n  .when(\"/green\", {\n    templateUrl : \"green.htm\"\n  })\n  .when(\"/blue\", {\n    templateUrl : \"blue.htm\"\n  });\n});\n</script>\n</body>  ANGULAR  DEFINI\u00c7\u00c3O  > 2 rescrito com typescript, spa, web, mobile, desktop  INSTALA\u00c7\u00c3O  npm install -g @angular/cli\n\nnpm install bootstrap jquery popper\nangular.json adicionar os styles e scripts  COMANDO  ng new myapp\ncd myapp\nng serve ou ng serve --open \nporta 4200\nng build\nng build --prod\n\nng --version  COMPONENTES  ng g c /componentes/home/home-carousel\n\nimport {HomeComponente} from 'componentes/home/home-carousel.component'\n\n\n<a [router-link]=['home/home-carousel'] routerLinkActive=\"router-link-active\"> Home </a>\n\n<router-outlet><router-outlet>  DECORATORS  @NgModule, @Component  CLASSES  ng generate class classes/ConfigClass  SERVI\u00c7OS  ng generate service servicos/galeria/galeria  BIBLIOTECAS  ngBootstrap  EVENTOS  ngOnInit()\n(change) = \"\"\n(click) = \"\"  DIRETIVAS  *ngIf, \n*ngSwitch \n*ngFor = \"\"\n[hidden] = \"\"\n[formGroup] = \"\"\nformControlName = \"\"\n(ngSubmit) = \"onSubmit()\"\n[(ngModel)] = \"pessoa.id\"  FILTROS  {{ filtro.nome |uppercase }}\n{{ filtro.nome |lowercase }}\n{{ filtro.salario |currency }}  PACKAGE.JSON  \"scripts\": {\n    \"ng\": \"ng\"\n    \"start\": \"ng serve\"\n    \"build\": \"ng build\"\n    \"test\": \"ng test\"\n    \"lint\": \"ng lint\"\n    \"e2e\": \"ng e2e\"\n}  COMANDOS IMPORTANTES  npm install -g @angular/cli\n\nng --version\n\nng new myapp\n\ncd myapp\n\nng serve ou ng serve --open  \n(porta 4200)\n\nng build\n\nng build --prod  VUEJS  new Vue({\n    el: '#app'.\n    data: {\n        msg: 'Teste',\n        idade: 34,\n        frutas: ['ma\u00e7\u00e3', 'banana', 'uva'],\n        aluno: {nome: 'Cleiton', ra: '23232'},\n        url: 'http://vuejs.org',\n        texto: '<b> teste </b>',\n        input: '',\n        show: true\n    },\n    methods: {\n        minhaFuncao(){\n            return this.frutas\n        },\n        alert(event){\n            event.target.style = \"background: red\";\n        }\n    }\n})  BIND  <img v-bind:src=\"img\" v-bind:title></img>\n\n\n<a v-bind:href=\"url\"> Vue</a>\n\nv-bind:src = :src \nv-bind:title = :title\nv-bind:href = :href\n\nv-bind:class=\"{red: colors.vermelho}\"  TEXTO  <p v-text=\"texto\"> Paragrafo</p>  HTML  <div v-html=\"texto\"> Div </div>  MODEL  <input type=\"text\" v-model=\"input\">  IF/ELSE  <p v-if=\"show == true\"> 1</p>\n<p v-else=\"show == false\"> 2</p>  FOR  <ul>\n    <li v-for=\"(fruta, index) in frutas\"> {{fruta}}</li>\n</ul>  CLICK  <button v-on:click=\"minhaFuncao()\"> \n    Bot\u00e3o \n</button>\n\nv-on:click = @click\n:click = nao pode pq come\u00e7a a chamar direto\n\n<form v-on:submit.prevent=\"minhaFuncao\">\n</form>\n\nv-on:keyup.enter=\"minhaFuncao()\"\nv-on:keyup.space=\"minhaFuncao()\"  COMANDOS IMPORTANTES  npm install -g @vue/cli\n\nvue --version\n\nvue create myapp\n\ncd myapp\n\nnpm run serve\nporta 8080  REACT  usa jsx que \u00e9 dom virtual  CLI  npm install -g create-react-app\n\ncreate-react-app --version\n\nnpx create-react-app myapp\n\ncd myapp\n\nnpm start (rodando na porta 3000)  Exemplos  Exemplo 1  src/app.js  import React from 'react';\nimport ReactDom from 'react-dom';\n\nReactDom.render(\n    <h1>Ol\u00e1 mundo</h1>,\n    document.getElementById(\"app\")\n);  index.html  <html>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"/js/app.min.js\"></script>\n</body>\n<html>  Exemplo 2  src/components/App.js  import React from 'react';\n\nexport default class App extends React.Component {\n    render() {\n        return <h1> Ol\u00e1 Mundo </h1>\n    }\n}  src/app.js  import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/App';\n\nReactDom.render(\n    <App />,\n    document.getElementById(\"app\")\n);  index.html  <html>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"/js/app.min.js\"></script>\n</body>\n<html>  COMANDOS IMPORTANTES  npm install -g create-react-app\n\ncreate-react-app --version\n\nnpx create-react-app myapp\n\ncd myapp\n\nnpm start\nporta 3000",
            "title": "FRAMEWORKS JS"
        },
        {
            "location": "/#frameworks-mobile",
            "text": "IONIC  DEFINI\u00c7\u00c3O  plataforma mobile  INSTALA\u00c7\u00c3O  npm install ionic cordova -g\nionic start exemplo blank\ncd exemplo\n\nionic cordova platform add ios\nionic cordova run ios\n\nSubstitute ios for android if not on a Mac.\n\n\nnpm install -g ionic@latest  COMANDOS  ionic -v\nionic start myapp tabs\nionic start exemplo sideMenu --type=angular\nionic serve\n\n\nionic g page sobre\n\n\nAplicativo do celular para rodar\nionic dev  ESTRUTURA  config.xml (configura\u00e7\u00f5es para ios e android)\nresources (para android e ios)\nsrc (codifica\u00e7\u00e3o)  DIRETIVAS  Baseado no angular  BIBLIOTECAS  npm i firebase angularfire2  NATIVESCRIPT  COMANDOS  tns create exemplo --template angular\ncd exemplo\ntns run android\n\ntns resources generate splashes   DIRETIVAS E ARQUITETURA  Baseado no angular",
            "title": "FRAMEWORKS MOBILE"
        },
        {
            "location": "/#java",
            "text": "DEFINI\u00c7\u00c3O  baseada em C, OO\ncriada pela SUN Microsystem por meio do projeto Green chefiado por James Gosling\nmaskote duke\nmultiplataforma  COMANDOS  java -version\njavac exemplo.java\njava exemplo  CONCEITOS  JVM -> Maquina Virtual JAVA\nJRE -> Ambinte de Execu\u00e7\u00e3o Java\nJDK -> Kit de Desenvolvimento Java  Escrever na tela  System.out.println(\"Teste\")  COMENT\u00c1RIOS  // Uma linha\n\n/*\nVarias \nLinhas\n*/  VARI\u00c1VEIS  String nome = \"Cleiton\";  CONSTANTES  final PI = 3.14;  TIPOS DE DADOS  String nome = \"Meu Nome\";\nInteger idade = 43;\nDouble d = 10.2;\nFloat f = 100.45;\nboolean ativo = true;\n(Long Short Byte)  OPERADORES  ARITM\u00c9TICOS + - * / %\nL\u00d3GICOS && || !\nCOMPARA\u00c7\u00c3O = != > < >= <=  ENTRADAS DE DADOS  Integer valor;\nScanner scanner = new Scanner(System.in);\nSystem.out.println(\"Informe um numero\");\n\nvalor = scanner.nextLine();\nSystem.out.println(valor + 1);\n\nString nome = \"Cleiton\";\nString sobrenome = \"Paiva\";\nString nomeCompleto = nome + \"\" + sobrenome;\n\n\n\nint a1 = 10; // tipo primitivo\nInteger a2 = 10; // tipo oo a objeto tem m\u00e9todos  FUN\u00c7\u00d5ES  private helloWorld(String str) {\n    return \"Tamanho\" + str.length() + \"palavra\"\n}\n\npublic static void main(String[], args){\n    Funcoes funcoes = new Funcoes();\n    System.out.println(helloWorld(\"Ola\"));\n}\n\n\nString nome = \"Cleiton\";\nnome.charAt(0)\nnome.startsWith(\"C\");\nnome.endsWith(\"on\");\nnome.substring(0,2);\nnome.toUpperCase();\nnome.toLowerCase();\nnome.trim();\nnome.length();  EXCE\u00c7\u00d5ES  try{\n    String str = \"Bla Bla\";\n    str.charAt(200);\n}catch(e){\n    System.out.println(e);\n}finally {\n    System.out.println(\"Exce\u00e7\u00e3o\");\n}",
            "title": "JAVA"
        },
        {
            "location": "/#kotlin",
            "text": "DEFINI\u00c7\u00c3O  criada pela JetBrains\nbaseada JAVA, C#, Scala e Grovy\nfocada para plataforma Android  COMENTARIOS  // uma linha\n\n/*\nDuas\nlinha\n*/  ESCREVER NA TELA  println(\"Hello World\")\nprint(\"OI\")  VARIAVEL  var idade = 19  CONSTANTE  val PI = 3.14  INTERPOLA\u00c7\u00c3O  println(\"idade $idade\")  TIPO DE DADOS  var nome: String\nvar idade: Int\nvar salario: Double\nvar x: Float\nvar ativo: Boolean\nvar paises = arrayOf(\"Brasil, Colombia\", \"Chile\")\npaises[0] = \"Bolivia\"\npaises.count()\npaises.reverse()\npaises.sortBy()\n\nvar cores = arrayListOf<String>(\"Vermelho\", \"Branca\")\ncores.add(\"Azul\")\ncores.remove(\"Branca\")\ncores.size\ncores.last()\nvar ultimo = cores[cores.size - 1]  CONVERS\u00c3O  x.toString()\nx.toInt()\nx.toFloat()\nx.toDouble()  ENTRADA E SAIDA  var x = readLine()?toInt()!!\n\nimport javax.swing.JOptionPane\nfun main(args: Array<String>){\n    var nome = JOptionPane.showInputDialog(\"Digit o nome\")\n    var saida = String.format(\"%s %s\", \"Bem Vindo\", nome)\n    JOptionPane.showMessageDialog( parentComponent: null, saida)\n}  OPERADORES  ARITMETICOS +, -, *, /, %\n\nCOMPARA\u00c7\u00c3O ==, !=, >, <, >=, <=, \nx is Int \n\nL\u00d3GICOS && || !\n\nATRIBUI\u00c7\u00c3O =, +=, -=, *=, /=  IF  if(a>b){\n    print(\"A\")\n}else if(b>a){\n    print(\"B\")\n}else{\n    print(\"A = B\")\n}\n\n\nidade in 1..17  WHEN  when(idade){\n    in 1..11 -> println(\"Crian\u00e7a\")\n    in 12..17 -> println(\"Adolescente\")\n    in 18..59 -> println(\"Adulto\")\n    else -> println(\"Idoso\")\n}  WHILE  var i = 0\nwhile (i < 10) {\n    println(i)\n    i++\n}  DO WHILE  var i = 0\ndo {\n    println(i)\n    i++\n} while(i < 10)  FOR  for(var i = 0; i < 10; i++) {\n    println(i)\n}  FOR IN  for(fruta in frutas){\n    println(fruta)\n}  FOREACH  frutas.foreach({ fruta ->\n    println(fruta.toUpperCase())\n\n})  FUN\u00c7\u00d5ES  fun main(args: Array<String>){\n    var rs = somar(x: 10, y: 10)\n    print($rs)\n\n}\n\nfun somar(x: Int, y: Int){\n    var r = x + y\n    return r\n}",
            "title": "KOTLIN"
        },
        {
            "location": "/#ruby",
            "text": "DEFINI\u00c7\u00c3O  OO, Tipagem Din\u00e2mica, Reflex\u00e3o, metaprograma\u00e7\u00e3o, interpretada\nMRI interpretador de ruby\nRVM Maquina virtual ruby\nTudo \u00e9 objeto  COMANDOS  irb  //shell\nexit\nruby arquivo.rb\n\ngem install pry\npry  SINTAXES  arquivo.rb  VARIAVEIS  texto = \"meu texto\"  CONSTANTE  MAX_USUARIOS = 10  ENTRADA E SAIDA  puts \"Digite seu nome\"\nnome = gets.chomp \nputs nome\n\nputs \"Digite a idade\"\nidade = gets.chomp.to_i\nputs idade  COMENTARIOS  # uma linha  TIPOS DE DADOS  nome = \"Cleiton\"\ntexto = \"b o m\"\ntexto.strip // tira o espa\u00e7os\ntexto.downcase! // deixa tudo minusculo\ntexto.upcase! // deixa tudo maiusculo\nmarca = \"Volkswagem\"\nmodelo = \"Voyage\"\nfrase = \"#{marca} #{modelo}\"\ntexto2 = <<EOS\na\nlinha\nEOS\n\n\nnumero = 10\nsalario = 2000.50\n\nativo = true\n\nnome_completo = nill\n\narray = []\narray = [1, 2, 3, 4]\narray.size\narray.empty?\narray[0]\narray[1..2] // da posicao 1 ao 2\narray[0] = 44\narray.push(10)\narray.insert(0, 10) //0 => posicao\narray.last()\narray.first()\narray.join ','\narray.sort\narray.each { |i| puts i}\narray.reduce(0) { |resultado, proximo_valor| resultado + proximo_valor }\narray.map { |numero * numero }  SYMBOL  :nome_completo  HASH  capitais = HASH.new ou capitais = {}\ncapitais = {acre: 'Rio Branco', saopaulo: 'Sao Paulo'}\ncapitais.delete(:acre)\n\nhash = {nome: 'cleiton', idade: 20}\nhash[:idade]  RANGE  1..10  ESCOPO DE VARIAVEIS  Do lado de fora escopo global\nDentro de fun\u00e7\u00e3o escopo local\n$global  OPERADORES  ARITM\u00c9TICOS +, -, *, /, %, **\nCOMPARA\u00c7\u00c3O >, >=, <, <=, ==, !=\nl\u00d3GICOS !, &&, ||, not, and, on  IF  if a > b then\n    puts \"a > b\"\nelseif\n    puts \"b > a\"\nelse\n    puts \"iguais\"\nend\n\nputs \"A > B\" if a > b\n\nputs \"B > A\" unless a > b  CASE  marca = \"tesla\"\nwhen \"tesla\"\n    puts \"Tesla\"\nwhen \"ford\"\n    puts \"Ford\"\nwhen \"fiat\"\n    puts \"FIAT\"\nelse\n    puts \"SEM MARCA\"\nend  WHILE  i = 0\nwhile i <= 10\n    puts i\n    i++\nend\n\n\ni = 0\nbegin\n    puts i\n    i++\nend while i <= 10  FOR  for i in [10, 20, 30]\n    puts i\nend\n\n\nfor i in 1..10\n    puts i\nend  LOOP DO  loop do\n    puts \"loop infinito\"\n    break\nend  COLLECTIONS  EACH  [\"laranja\", \"ma\u00e7a\", \"uva\"].each do |fruta|\n    puts fruta\nend\n\n[\"laranja\", \"ma\u00e7a\", \"uva\"].each { |fruta puts fruta}  UPTO  10.upto(100) { |i| puts i }  MAP  array = [1, 2, 3, 4]\nnewarray = array.map do |a|\n    a * 2\nend\n\narray.map! do |a|\n    a * 2\nend  SELECT  array = [1, 2, 3, 4, 5]\nselection = array.select do |a|\n    a >= 2\nend\nputs selection  FUN\u00c7\u00d5ES  def talk\n    puts 'Como vc est\u00e1?'\nend\ntalk\n\n\ndef talk(firstname, lastname)\n    puts \"#{firstname} #{lastname}\"\nend\n\nfirstname = \"Cleiton\"\nlastname = \"Paiva\"\ntalk(firstname, lastname)\n\ndef sinal(color = 'vermelho')\n    puts \"#{color}\"\nend\n\nsinal\ncolor = 'verde'\nsinal(color)\n\n\n\ndef soma(a, b)\n    a+b\nend\nsoma(1, 2)\n\n\nlamb = -> () { puts \"lambda\" }  GEM  rubygens  gem install os\ngem unistal os\nrequire 'net/http'\n\nrequire 'os'\ndef my_od\n    if OS.windows?\n        \"Windows\"\n    elseif OS.linux?\n        \"Linux\"\n    elseif OS.mac?\n        \"MAC\"\n    else\n        \"Nao consegui identificar\"\n    end\nend\nputs \"#{OS.cpu_count} #{OS.bits} #{OS.my_od}\"  CLASSES  class Carro\n    def velocidade_maxima\n        250\n    end\n\n    def adiciona_marca(marca)\n        @marca  = marca\n    end\n\n    def marca\n        @marca\n    end\n\nend\n\nnovo_carro = Carro.new\nputs \"Variavel carro #{novo_carro}\"\n\ncarro.adicion_marca(\"Ford\")\nputs carro.marca\n\n\nclass Moto\n    attr_accessor :marca, :modelo\n    # attr_reader :marca, :modelo // get\n    # attr_write :marca, :modelo // set\n\n    def velocidade_maxima\n        250\n    end\n\n    def descricao\n        \"Marca #{marca} e modelo #{modelo}\"\n    end\n\nend\n\nmoto = Moto.new\nmoto.marca = \"Honda\"\nmoto.modelo = \"CB300\"\nputs \"Marca\" + moto.marca\nputs \"Modelo\" + moto.modelo\nputs \"Descricao\" + moto.descricao\n\n\nclass Caminhao\n    attr_accessor :marca, :modelo\n\n    def initialize(modelo, marca)\n        @modelo = modelo\n        @marca = marca\n    end\nend\n\ncaminhao = Caminhao.new\nputs caminho  HERAN\u00c7A  class Automovel\n    verifica_combustivel()\n    def self.tipo_cambio\n        puts \"Manual\"\n    end\n\n    def acelera\n        puts \"Acelerando Automovel\"\n    end\n\n\n    private\n        def verifica_combustivel\n            puts \"verifica combustivel\"\n        end\nend\n\n\nclass Carro < Automovel\n    def acelera\n        puts \"Verificando equipamentos\"\n        super\n    end\n\nend\n\n\nAutomovel.acelera\nAutomovel.tipo_cambio\nCarro.tipo_cambio  MODULO  module Compartilhado\n    def imprime_texto\n        puts \"Texto\"\n    end\nend\n\nclass Carro\n    include Compartilhado\n    def metodo_carro\n        puts \"Carro\"\n    end\nend\nc = Carro.new\nc.imprime_texto  BLOCKS  5.times {puts \"teste}\n\n\nnumbers = [5, 10, 15]\nnumbers.each {!number| sum += number}  REGEX  /abc/.class  TIME  time = Time.now\nputs time.year\nputs time.day\nputs time.month  DEFINI\u00c7\u00c3O  OO, Tipagem Din\u00e2mica, Reflex\u00e3o, metaprograma\u00e7\u00e3o, interpretada\nMRI interpretador de ruby\nRVM Maquina virtual ruby\nTudo \u00e9 objeto  COMANDOS  irb  //shell\nexit\nruby arquivo.rb\n\ngem install pry\npry  SINTAXES  arquivo.rb  VARIAVEIS  texto = \"meu texto\"  CONSTANTE  MAX_USUARIOS = 10  ENTRADA E SAIDA  puts \"Digite seu nome\"\nnome = gets.chomp \nputs nome\n\nputs \"Digite a idade\"\nidade = gets.chomp.to_i\nputs idade  COMENTARIOS  # uma linha  TIPOS DE DADOS  nome = \"Cleiton\"\ntexto = \"b o m\"\ntexto.strip // tira o espa\u00e7os\ntexto.downcase! // deixa tudo minusculo\ntexto.upcase! // deixa tudo maiusculo\nmarca = \"Volkswagem\"\nmodelo = \"Voyage\"\nfrase = \"#{marca} #{modelo}\"\ntexto2 = <<EOS\na\nlinha\nEOS\n\n\nnumero = 10\nsalario = 2000.50\n\nativo = true\n\nnome_completo = nill\n\narray = []\narray = [1, 2, 3, 4]\narray.size\narray.empty?\narray[0]\narray[1..2] // da posicao 1 ao 2\narray[0] = 44\narray.push(10)\narray.insert(0, 10) //0 => posicao\narray.last()\narray.first()\narray.join ','\narray.sort\narray.each { |i| puts i}\narray.reduce(0) { |resultado, proximo_valor| resultado + proximo_valor }\narray.map { |numero * numero }  SYMBOL  :nome_completo  HASH  capitais = HASH.new ou capitais = {}\ncapitais = {acre: 'Rio Branco', saopaulo: 'Sao Paulo'}\ncapitais.delete(:acre)\n\nhash = {nome: 'cleiton', idade: 20}\nhash[:idade]  RANGE  1..10  ESCOPO DE VARIAVEIS  Do lado de fora escopo global\nDentro de fun\u00e7\u00e3o escopo local\n$global  OPERADORES  ARITM\u00c9TICOS +, -, *, /, %, **\nCOMPARA\u00c7\u00c3O >, >=, <, <=, ==, !=\nl\u00d3GICOS !, &&, ||, not, and, on  IF  if a > b then\n    puts \"a > b\"\nelseif\n    puts \"b > a\"\nelse\n    puts \"iguais\"\nend\n\nputs \"A > B\" if a > b\n\nputs \"B > A\" unless a > b  CASE  marca = \"tesla\"\nwhen \"tesla\"\n    puts \"Tesla\"\nwhen \"ford\"\n    puts \"Ford\"\nwhen \"fiat\"\n    puts \"FIAT\"\nelse\n    puts \"SEM MARCA\"\nend  WHILE  i = 0\nwhile i <= 10\n    puts i\n    i++\nend\n\n\ni = 0\nbegin\n    puts i\n    i++\nend while i <= 10  FOR  for i in [10, 20, 30]\n    puts i\nend\n\n\nfor i in 1..10\n    puts i\nend  LOOP DO  loop do\n    puts \"loop infinito\"\n    break\nend  COLLECTIONS  EACH  [\"laranja\", \"ma\u00e7a\", \"uva\"].each do |fruta|\n    puts fruta\nend\n\n[\"laranja\", \"ma\u00e7a\", \"uva\"].each { |fruta puts fruta}  UPTO  10.upto(100) { |i| puts i }  MAP  array = [1, 2, 3, 4]\nnewarray = array.map do |a|\n    a * 2\nend\n\narray.map! do |a|\n    a * 2\nend  SELECT  array = [1, 2, 3, 4, 5]\nselection = array.select do |a|\n    a >= 2\nend\nputs selection  FUN\u00c7\u00d5ES  def talk\n    puts 'Como vc est\u00e1?'\nend\ntalk\n\n\ndef talk(firstname, lastname)\n    puts \"#{firstname} #{lastname}\"\nend\n\nfirstname = \"Cleiton\"\nlastname = \"Paiva\"\ntalk(firstname, lastname)\n\ndef sinal(color = 'vermelho')\n    puts \"#{color}\"\nend\n\nsinal\ncolor = 'verde'\nsinal(color)\n\n\n\ndef soma(a, b)\n    a+b\nend\nsoma(1, 2)\n\n\nlamb = -> () { puts \"lambda\" }  GEM  rubygens  gem install os\ngem unistal os\nrequire 'net/http'\n\nrequire 'os'\ndef my_od\n    if OS.windows?\n        \"Windows\"\n    elseif OS.linux?\n        \"Linux\"\n    elseif OS.mac?\n        \"MAC\"\n    else\n        \"Nao consegui identificar\"\n    end\nend\nputs \"#{OS.cpu_count} #{OS.bits} #{OS.my_od}\"  CLASSES  class Carro\n    def velocidade_maxima\n        250\n    end\n\n    def adiciona_marca(marca)\n        @marca  = marca\n    end\n\n    def marca\n        @marca\n    end\n\nend\n\nnovo_carro = Carro.new\nputs \"Variavel carro #{novo_carro}\"\n\ncarro.adicion_marca(\"Ford\")\nputs carro.marca\n\n\nclass Moto\n    attr_accessor :marca, :modelo\n    # attr_reader :marca, :modelo // get\n    # attr_write :marca, :modelo // set\n\n    def velocidade_maxima\n        250\n    end\n\n    def descricao\n        \"Marca #{marca} e modelo #{modelo}\"\n    end\n\nend\n\nmoto = Moto.new\nmoto.marca = \"Honda\"\nmoto.modelo = \"CB300\"\nputs \"Marca\" + moto.marca\nputs \"Modelo\" + moto.modelo\nputs \"Descricao\" + moto.descricao\n\n\nclass Caminhao\n    attr_accessor :marca, :modelo\n\n    def initialize(modelo, marca)\n        @modelo = modelo\n        @marca = marca\n    end\nend\n\ncaminhao = Caminhao.new\nputs caminho  HERAN\u00c7A  class Automovel\n    verifica_combustivel()\n    def self.tipo_cambio\n        puts \"Manual\"\n    end\n\n    def acelera\n        puts \"Acelerando Automovel\"\n    end\n\n\n    private\n        def verifica_combustivel\n            puts \"verifica combustivel\"\n        end\nend\n\n\nclass Carro < Automovel\n    def acelera\n        puts \"Verificando equipamentos\"\n        super\n    end\n\nend\n\n\nAutomovel.acelera\nAutomovel.tipo_cambio\nCarro.tipo_cambio  MODULO  module Compartilhado\n    def imprime_texto\n        puts \"Texto\"\n    end\nend\n\nclass Carro\n    include Compartilhado\n    def metodo_carro\n        puts \"Carro\"\n    end\nend\nc = Carro.new\nc.imprime_texto  BLOCKS  5.times {puts \"teste}\n\n\nnumbers = [5, 10, 15]\nnumbers.each {!number| sum += number}  REGEX  /abc/.class  TIME  time = Time.now\nputs time.year\nputs time.day\nputs time.month",
            "title": "RUBY"
        },
        {
            "location": "/#dart",
            "text": "Defini\u00e7\u00e3o  Linguagem de Programa\u00e7\u00e3o do google. Tamb\u00e9m \u00e9 fundamental para o flutter no quesito mobile e angular para web.  dart --version  Escrever na tela  arquivo.dart\nvoid main () {\n    String nome = 'Cleiton';\n    print(\"Hello World\" + nome);\n}  COMENT\u00c1RIO  // Uma Linha\n\n/* \n    Varias\n    linhas  \n*/  VARI\u00c1VEIS  var letra = \"A\";\ndynamic idade = 34;  TIPOS DE DADOS  String nome = \"Cleiton\";\n\nint numero = 5;\ndouble number = 10.3\n\nbool ativo = true;\n\nList listaProdutos = [\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \narroz, 1.50, true\n]\nprint(listaProdutos)\nprint(listaProdutos[10])\n\nMap usuario = {\n    'nome': 'Cleiton',\n    'idade': 24,\n    'altura': 1.72,\n    'ativo': true\n}\nprint(usuario.length)\nprint(usuario['nome'])  CONSTANTES  const name = \"Cleiton\";\nfinal String name2 = \"Cleiton\";  CONVERS\u00d5ES  var number = int.parse('25');\nvar number2 = double.parse('5.10');\nprint(number.toString())\nprint(number.toStringAFixed())  CONCATENAR  String name = 'Bom' + 'Dia';\nvar frase = 'Muito bom $name';\nvar frase = 'Muito bom ${name.toUpperCase()}';  LISTAS  var list = [1, 2, 3];\nlist.add(4);\nlist.removeAt(0)\n\nprint(list.length);\nprint(list.first);\nprint(list.last);\n\nvar maps = {\n    \"nome\": \"Cleiton\",\n    \"idade\": 34,\n    \"sexo\": \"m\"\n}\nprint(maps[\"nome\"]);\nmaps[\"nome\"] = \"Pedro\";\n\nMap<String, dynamic> maps = {\n    \"nome\": \"Cleiton\",\n    \"idade\": 34,\n    \"sexo\": \"m\"\n}\n\nList<Map<String, dynamic>> cadastro = [];  OPERADORES  ARITIM\u00c9TICOS (+, -, *, /, %)\nCOMPARA\u00c7\u00c3O (==, !=, >, <, <=, >=)\nRELACIONAIS (&&, ||, !)  IF  import 'dart:io';\nvoid main() {\n    print(\"Digite uma idade\");\n    var input = stdin.readLineSync();\n    var idade = int.parse(input);   \n\n    if (idade >= 18) {\n        print(\"Adulto\");\n    } else if (idade >= 12 && idade < 18) {\n        print(\"Adolescente\");\n    else {\n        print(\"Crian\u00e7a\");\n    }\n}  SWITCH  String status = 'andamento';\n\nswitch (){\n    case 'aberto':\n    print(\"Aberto\");\n    break;\n\n    case 'fechado':\n    print(\"Fechado\");\n    break;\n\n    case 'pendente':\n    print(\"Pendente\");\n    break;\n\n    case 'encerrado':\n    print(\"Encerrado\");\n    break;\n\n    default:\n    print(\"Aberto\");\n    break;\n}  FOR  for(int i = 0; i < 10; i++) {\n    print(i);\n}\n\n\nList products = ['arroz', 'cafe', 'a\u00e7ucar']\nfor (var item in products) {\n    print(i);\n}\n\nList<String> nomes = [\"Cleiton\", \"Guilherme\", \"Ingrid\", \"Lilian\", \"Raiane\"];  WHILE  int i = 0;\nwhile (i < 10) {\n    print(i);\n    i++;\n}  FUN\u00c7\u00d5ES  void main(){\n    print(soma(20, 30));\n}\ndouble soma(double a, double b) {\n    double res = a + b;\n    return res;\n}  ARQUIVOS  calcular.dart\nint calculate() {\n    return 6 * 7;\n}\n\nimport 'pakage:calcular/calcular.dart' as calcular\nmain(List<String> arguments) {\n    print('Teste ${calcular.calculate()}')\n}  ESCOPO GLOBAL  criar variavel fora do main",
            "title": "DART"
        },
        {
            "location": "/#flutter",
            "text": "Quem usa?  nubank, globo,   Layout  material\ncupertino  Anima\u00e7\u00e3o    Flare  Lotties  https://lottiefiles.com/  Flutter Web\nDart na Web\nDDC Dart2Js  Requisi\u00e7\u00e3o  grpc\ngraphql\nrest  teste de widget\n\nengine c++ skia  FERRAMENTA  Flutter\nAndroid Studio\nVisual Studio Code\nextensoes dart e flutter\n\nflutter new project\n\nflutter devices\nflutter run -d emulator-5554",
            "title": "FLUTTER"
        },
        {
            "location": "/#python",
            "text": "DEFINI\u00c7\u00c3O  linguagem alternativa ao C, dinamica  COMENTARIO  # uma linha\n\n\"\"\" \nvarias\nlinhas\n\"\"\"  ENTRADA E SAIDA  print(\"ola bom dia\")\n\nentrada = input(\"Digite seu nome\")\n\ninteiro = int(input(\"Digite inteiro\"))\ndecimal = float(input(\"Digite decimal\"))  VARIAVEIS  texto = \"Ol\u00e1 mundo\"  TIPOS DE DADOS  texto = \"Ol\u00e1 mundo\"  texto1 = \"Bom\"\ntexto2 = \"Dia\"\ntexto3 = texto1 + \"\" + texto2\n\nnome = \"cleiton\"\nlen(nome)\nnome[0:2]\nnome.lower()\nnome.upper()\nnome.strip() //remove os espacos\nsaudacao = \"Bom dia\"\nsaudacao.split(\" \")\nsaudacao.replace(\"Bom\", \"Otimo\")\n\nnumero = 47\ndecimal = 24.7\n\nativo = true\n\nlista1 = [1, 2, 3]\nlista2 = [\"a\", \"b\", \"c\"]\nlista3 = [1, \"a\", 2, true]\n\nlista1[0]\n\ntamanho = len(lista1)\nprint(tamanho)\n\nlista1.append(4)\nlista1.del[:] //tudo\nlista1.del[:1, 3]\n\nlista1.sort()\nlista1.sort(reverse=True)\n\nlista.reverse()\n\nnovalista = sorted(lista1)  DICIONARIO  dic = {\"a\": \"ameixa\", \"b\": \"bola\", \"c\": \"cachorro\"}\ndic\ndic[\"c\"]\n\nfor i in dic.items():\n    print(i)\n\n\nfor i in dic.values():\n    print(i)\n\nfor i in dic.keys():\n    print(i)  OPERADORES  ARITMETICOS (+, -, *, /, %, ^)\nCOMPARACAO (==, !=, >, >=, <, <=)\nLOGICOS (and, or, !)  COMANDOS  arquivo.py\n\npython\npython arquivo.py  IF  if a > b:\n    print(\"A maior\")\nelife a < b:\n    print(\"B maior\")\nelse:\n    print(\"Sao iguais\")  WHILE  x = 0\nwhile x < 10:\n    print(x)\n    x = x + 1  FOR  lista1 = [1, 2, 3]\nfor i in lista1:\n    print(i)\n\nfor i in range(0, 10, 1)\n    print(i)  ESCOPO GLOBAL E LOCAL  Fora \u00e9 global\nDentro da funcao \u00e9 local  FUNCOES  def soma(a, b):\n    print(a + b)\n\nsoma(2, 3)\n\n\nimport random\nnumero random.randint(0, 10)\nprint(numero)  ARQUIVOS  arquivo = open(\"arquivo.txt\")\nabrindo = arquivo.readlines()\nfor linha in linhas:\n    print(linha)\n\n\narquivo = open(\"arquivo.txt\")\nabrindo = arquivo.read()  TRATAMENTO DE EXCE\u00c7\u00d5ES  try:\n    print(a/b)\nexcept:\n    print(\"N\u00e3o divide por 0\")\nprint(a/a)  LISTA COMPREHENION  x = [1, 2, 3, 4]\ny = [i**2 for i in x]\nz = [i for i in x if i%2==1]  LISTA ENUMERATE  lista = [\"abacate\", \"bola\", \"cachorro\"]\nfor i, nome in enumerate(lista):\n    print(1,nome)  LISTA FILTER  def pares(i):\n    if i % 2 == 0:\n        return i\n\nlista = [1, 2, 3, 4, 5, 6, 7]\n\nlista_pares = filter(pares, lista)\nprint(List(lista_pares))  LISTA MAP  def dobro(x):\n    return x+2\n\nvalor = [1, 2, 3, 4, 5]\n\nvalor_dobrado = map(dobro, valor)\n\nvalor_dobrado = list(valor_dobrado)\nprint(valor_dobrado)  LISTA ZIP  nomes = [\"Cleiton\", \"Aparecido\", \"Guilherme\"]\nidades = [34, 59, 10]\nalturas = [1.72, 1.70, 1.10]\n\nfor nome, idade, altura in zip(nomes, idades, alturas):\n    print(nome, idade, valor)",
            "title": "PYTHON"
        },
        {
            "location": "/#lua",
            "text": "INSTALA\u00c7\u00c3O  apt-get install lua  ENGINES  (LOVE2D para jogos)  ARQUIVO E EXTENS\u00d5ES  arquivo.lua  COMENT\u00c1RIOS  Coment\u00e1rios de uma linha ou v\u00e1rias\nOperadores Aritm\u00e9ticos (+; -; *; /; %;)\nOperadores de Compara\u00e7\u00e3o (>; <; >=; <=; ~=; ==)\nOperadores L\u00f3gicos (and; or; not)\nV\u00e1riaveis (letras, numero, undescore, sem espa\u00e7o, case sensitivo, sem palavras reservados)\nTipos (String, Numero, Boolean, null ou nil)\nFun\u00e7\u00f5es\nIF\nWHILE  COMENT\u00c1RIOS  -- Exemplo de comentario\n--[[ Exemplo\nde \nvarias\nlinhas\n]]--  ESCREVER NA TELA  print(\"Ola Mundo\")\nprint(123456)\nprint(1+1)   V\u00c1RIAVEIS  variavel = \"ola mundo\"\n\ntexto1 = \"Bom\"\ntexto2 = \"Dia\"\nnome = \"Caixa d\\' agua\"\noutra = \"Voce \u00e9 \\\"rico\\\"\"\nprint(texto1 .. texto2 .. \"(o^o)\")\n\nvariavel2 = 45\nnovoNumero = -2\noutroNumero = 3.14\noperacao = 2 + 2\n\nativo = false\nprint(ativo == false)\n\numaVariavel = nil  INTERAGINDO  print(\"Qual \u00e9 o seu nome\")\nnome = io.read()\nprint(\"Nome\" .. nome)  CHUNKS  do\n\nend  FUN\u00c7\u00d5ES  function somar()\n    print(1+1)\nend\nsomar()\n\nfunction somarDois(n1,n2)\n    print n1 + n2\nend\nsomarDois(2,2)\n\nfunction somarDois2(n1,n2)\n    return n1 + n2\nend\nprint(somarDois2(2,2))\n\n\nfunction genSoma(parcela)\n    function s (b)\n        return parcela + b\n    end\n    return s\nend\nsoma2 = genSoma(2)\nprint(soma2(10))\n\nfunction join(sep, words)\n    return table.concat(words, sep)\nend\nprint(\"Cachorro \"..\"quente\")  ESCOPO GLOBAL  -- (global)\nnome = \"Jesus\"   ESCOPO LOCAL  function qualONOme(nome)\n    -- (local)\n    print(nome)\nend\nqualONome(\"Alfred\")\n\nlocal variavel --posso colocar dentro de um bloco  WRAPPER  tostring(string)\ntonumber(number)\nvalor\nisNaN(valor)  TABELA  a = {10, 20, 30}\ntable.insert(a, 41)  IF  if (valor1 > valor2) then\n    print(\"Valor1 maior\")\nelseif(valo1 == valor2)\n    print(\"Valores iguais\")\nelse\n    print(\"Valor2 maior\")\nend\n\n\nif (n1 > n2) and (n1 > n3)\n    print(\"N1 maior\")  WHILE  indice = 0\nwhile indice <= 10 do\n    print(indice)\n    indice = indice + 1\nend  FOR  for i = 1, 10, 1 do\n    print(i)\nend  REPEAT  indice = 0\nrepeat\n    print(indice)\n    indice = indice + 1\nuntil indice <= 10  VETOR = TABELA  inimigos = { 10, 13, 50, 80 }\nprint(#inimigos)\nprint(inimigos[3])\ninimigos[3] = 99\n\nqtde = #inimigos\ninimigos[qtde + 1] = 33\nprint(inimigos[11])\ninimigos[#inimigos + 1] = 260\n\nfor idx = 1, #inimigos, 1 do\n    print(idx)\nend\n\nitens = {\n    machado = 1000,\n    [\"espada\"] = 450,\n    escudo = 500,\n    Elmo = 150,\n    chave = 45\n}\n\nprint(itens[\"machado\"])\nprint(itens.machado)\nitens.armadura = 1000\nprint(itens.armadura)\n\ncontagem\nfor chave, valor in pairs(items) do\n    print(chave .. \":\" .. valor)\n    contagem = contagem + 1\nend\n\ncores = {\n    moeda = \"amarela\"\n    armadura = \"prateada\"\n}\nprint(cores.moeda)\nposicoes = {\n    arqueiro = {10, 20},\n    canhao = {120, 40}\n}\nposicoes.arqueiro[\"arqueiro\"][1]\n\npessoa = {}\npessoa = {\n    nome = \"Cleiton\",\n    idade = \"34\",\n    endereco = \"Av. XV de Novembro, 123\",\n}  BIBLIOTECAS  math.floor(0.5)\nmath.max(3, 6, 2, 7)\nmath.sqrt(81)\nstring.gsub(\"LUA\", \"Lua\")\nio.lines(\"mapa.txt\")\n\nfor line in to.lines(\"mapa.txt\") do\n    print(line)\nend\n\nrequire(\"nomedopacote\")\nlocal calculadora = {\n    somar = function(x, y)\n        return x + y\n    end\n}\nreturn\n\nlocal calculadora = require(\"calculadora\")\nprint(calculadora.somar(1, 1))\n\n\npartes = split(\"abcde\", \",\")\nfor i, v in ipairs(partes) do\n    print(i, v)\nend\n\nconteudo = \"bla bla\"\nsplit(conteudo, \" \")\n\ntrim(\" agua\") => \"agua\"\n\nio.write(\"Digite algo\")\na = io.read()\nprint(\"!\" .. a .. \"!\")\n\narquivo = io.open(\"teste.txt\")\narquivo:write(\"\" .. conteudo ..)\narquivo:close()\n\n\nconteudo = io.open(\"teste.txt\")\nif conteudo == nill then\n    error(\"Erro ao abrir\")\nend\n\npcall(io.open, \"arquivoProblematico\", \"r\")  MODULARIZA\u00c7\u00c3O  dofile(\"arquivo.lua\")\n\nmeumodulo = require(\"arquivo\")\nmeumodulo = require \"arquivo\"\nreturn meumodulo\n\npackage.path\n\npackage.cpath  POO  arquivo conta.lua\nlocal conta = {}\nfunction conta.novo(deposito_inicial)\n    return {\n        saldo = deposito_inicial,\n        depositar= function(self, valor)\n            self.saldo = self.saldo + valor\n        end\n    }\nend\nreturn conta\n\narquivo banco.lua\nlocal conta = require(\"conta\")\nlocal banco_brasil = conta.novo(500)\nassert(banco_brasil.saldo == 500)\nbanco_brasil:depositar(500)\nassert(banco_brasil.saldo == 1000)",
            "title": "LUA"
        },
        {
            "location": "/#julia",
            "text": "DEFINI\u00c7\u00c3O  Julia \u00e9 projetado para resolver problemas matem\u00e1ticos numericamente, que consiste na manipula\u00e7\u00e3o num\u00e9rica dos dados. A maioria dos problemas matem\u00e1ticos reais (particularmente em engenharia) n\u00e3o t\u00eam solu\u00e7\u00f5es simb\u00f3licas puras.\nAparentemente o nome surgiu a partir de uma conversa aleat\u00f3ria entre os criadores quando algu\u00e9m sugeriu arbitrariamente que \"Julia\" seria um bom nome para uma linguagem de programa\u00e7\u00e3o  JULIABOX  A maneira mais f\u00e1cil de testar a linguagem de programa\u00e7\u00e3o Julia \u00e9 atrav\u00e9s do JuliaBox. O JuliaBox \u00e9 um ambiente de programa\u00e7\u00e3o hospedado na nuvem da Microsoft Azure para codifica\u00e7\u00e3o em Julia sem a necessidade de inslar qualquer software no computador local. Al\u00e9m da interface do Jupyter para escrever c\u00f3digos, o JuliaBox permite realizar o download do c\u00f3digo em outros formatos (.pdf, .md, .rst, .html e .tex), gerar slides, editar textos cient\u00edficos em latex e markdown, importa\u00e7\u00e3o/exporta\u00e7\u00e3o de projetos para o GitHub e muitas outras funcionalidades.  JUPITER  O Jupyter \u00e9 uma aplica\u00e7\u00e3o web derivado do IPython que significa JUlia, PYthon, and R . Resumidamente, \u00e9 um ambiente computacional interativo que permite aos usu\u00e1rios criar \"notebooks\" que incluem: c\u00f3digo, widgets interativos, gr\u00e1ficos, texto, equa\u00e7\u00f5es, imagens, v\u00eddeo e outros. O Jupyter combina tr\u00eas componentes:\n\n* O Jupyter Notebook: um aplicativo web interativo para escrever e executar c\u00f3digos de v\u00e1rias linguagens de programa\u00e7\u00e3o.\n\n* Kernels: \"Os kernels s\u00e3o processos espec\u00edficos de linguagem de programa\u00e7\u00e3o que funcionam independentemente e interagem com os aplicativos Jupyter e suas interfaces de usu\u00e1rio\" (JUPYTER, 2017). Jupyter possui suporte para mais de 50 linguagens de programa\u00e7\u00e3o (github.com/jupyter/jupyter/wiki/Jupyter-kernels), incluindo as mais populares em computa\u00e7\u00e3o cient\u00edfica como Python, R, Julia e Scala. O IJulia.jl \u00e9 kernel da linguagem Julia.\n\n* Notebooks: s\u00e3o arquivos com extens\u00e3o ipynb que cont\u00eam a estrutura do c\u00f3digo no formato JSON. Cada notebook possui seu pr\u00f3prio kernel.  COMANDOS  versioninfo()\n? versioninfo\nSys.cpu_info()\nSys.KERNEL\nSys.cpu_summary()  OPERADORES ARITM\u00c9TICOS  +x  Operador un\u00e1rio de adi\u00e7\u00e3o\n-x  Operador un\u00e1rio de subtra\u00e7\u00e3o\nx + y   Operador bin\u00e1rio de adi\u00e7\u00e3o\nx - y   Operador bin\u00e1rio de subtra\u00e7\u00e3o\nx * y   Operador bin\u00e1rio de multiplica\u00e7\u00e3o\nx / y   Operador bin\u00e1rio de divis\u00e3o\nx \u00f7 y   Operador bin\u00e1rio de divis\u00e3o inteira\nx \\ y   Operador bin\u00e1rio de divis\u00e3o esquerda\nx ^ y   Operador bin\u00e1rio de pot\u00eancia\nx % y   Operador bin\u00e1rio de resto da divis\u00e3o  OPERADORES DE COMPARA\u00c7\u00c3O  ==  Igual a\n=!  Diferente\n>   maior que\n<   menor que\n>=  maior igual\n<=  menor igual\n\n    isequal(x, y) , verdadeiro se x e y s\u00e3o id\u00eantico\n    isfinite(x) , verdadeiro se x \u00e9 um n\u00famero infinito\n    isinf(x) , verdadeiro se x \u00e9 infinito (inf)\n    isnan(x) , x n\u00e3o \u00e9 um n\u00famero  OPERADORES L\u00d3GICOS  ~x  Nega\u00e7\u00e3o\nx & y   E\n`x  y`  OU\nx \u22bb y   Ou exclusivo\nx >>> y     deslocamento para a direita\nx >> y  arithmetic shift right\nx << y  logical/arithmetic shift left  IMPRESS\u00c3O  print(sind(45))\nprintln(sind(45))\ndisplay(sind(45))\n@show sind(45)  FUN\u00c7\u00d5ES  rand(0:10)\ngcd(7, 14)  //MDC\nlcm(60, 50) // MMC\nfactorial(5)\n\n\n\nfunction raizQ(x)\n    if x >= 0\n        sqrt(x)\n    else\n        throw(DomainError(x, \"A solu\u00e7\u00e3o \u00e9 de dom\u00ednio complexo\"))\n    end\nend\n\n\nfunction raizQ_Er(x)\n\n    if x >=0        \n        sqrt(x)\n    else\n        error(\"N\u00famero negativo: $x. N\u00e3o \u00e9 possivel calcular raiz Real\")\n    end\nend\n\n\nfunction raizQ_TC(x)\n    try\n         sqrt(x)\n    catch\n         sqrt(complex(x))\n    end\nend  F\u00d3RMULAS  s0 = 2\nv = 4\nt = 10\ns0, v, t\ns = s0 + v*t\nprint(\"O valor do espa\u00e7o final S \u00e9: \",s ,\"m\")  TIPOS DE DADOS  # real e imagin\u00e1rio\ncomplex(8, 4)  Real e Imagin\u00e1rio  1 + 2im\n\nconj(2 + 3im)\n\n\nd1 = Dict([(\"a\", 1), (\"b\", 2),(\"c\", 10)])  IF  if x < y\n    println(\"x \u00e9 menor que y\")\nend\n\n\n\n\nif x < y\n    println(\"x \u00e9 menor que y .\",\"Valor de x: \", x ,\" Valor de y: \",y)\nelse\n    println(\"x \u00e9 maior que y .\",\"Valor de x: \", x ,\" Valor de y: \",y)\nend\n\n\nif x < y\n    println(\"x \u00e9 menor que y . Valor de x: $x , Valor de y: $y\")\n\nelseif x > y\n    println(\"x \u00e9 maior que y . Valor de x: $x , Valor de y: $y\")\n\nelse\n    println(\"x \u00e9 igual que y . Valor de x: $x , Valor de y: $y\")\nend  N\u00c3O TEM O SWITCH  FOR  # La\u00e7o FOR aplicado a um vetor\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2)+x: \\n\\n\")\nx = [1.0, 4.0, 6.0, 7.0, 9.0] \n\nfor i = 1:length(x)     \n    println(\"f($(x[i])) = \", sin(x[i])*cos(x[i]/2))\nend\n\n\n# La\u00e7o FOR aplicado a um vetor\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\nx = [1.0, 2.0, 3.0, 4.0, 5.0] \n\nfor i = x  # pode ser tamb\u00e9m x in     \n    println(\"f($i) = \", sin(i)*cos(i/2)) \nend\n\n\n# La\u00e7o FOR aplicado a um vetor\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\n\nfor x = [1.0, 2.0, 3.0, 4.0, 5.0] # pode ser tamb\u00e9m x in vetor    \n    println(\"f($x) = \", sin(x)*cos(x/2) )   \nend\n\n\n\n\n# La\u00e7o FOR aplicado a um vetor com controle de tempo\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\n\nfor x = [1.0 2.0 3.0 4.0 5.0] # pode ser tamb\u00e9m x in vetor    \n    println(\"f($x) = \",sin(x)*cos(x/2) )  \n    sleep(1)                  # atraso de 1s\nend\n\n\n# La\u00e7o FOR aplicado a um vetor reverso\nprint(\"Valor da fun\u00e7\u00e3o f(x) = sin(x)*cos(x/2) + x: \\n\\n\")\n\nfor x = 5:-1:1 # pode ser tamb\u00e9m x in vetor    \n    println(\"f($x) = \",sin(x)*cos(x/2) + x)   \nend  WHILE  # conta enquanto \"a\" menor ou igual a 5.\na = 0\n\nwhile a <= 5    \n    println(a)\n    a += 1 \nend\n\n\n# conta enquanto \"a\" menor que o tamanho de b\na = 0\nb = 1:5\n\nwhile  a < length(b) \n    println(a)\n    a += 1   \nend\n\n\nDO\n\n\n\n# findall retorna o indice do vetor quando encontrar o valor igual a 5\nx = 1:0.1:20\n\nfindall(x) do x\n    x == 5     \nend  PACOTES  using Pkg\nPkg.devdir()\nPkg.installed()\nPkg.status()\nPkg.test(\"Nome_pacote\")\nPkg.update()\n\n\nusing Pkg\nPkg.add(\"Nome_Pacote\")\nPkg.add(\"SymPy\")\n\nPkg.clone(\"https://github.com/usuario/pacote.jl.git\")\n\n\nPkg.rm(\"nome_pacote\")\nPkg.rm(\"SymPy\")\n\n\n\nusing SymPy\n\nx , y = Sym(\"x , y\")\n\n(x, y)  ESCOPO GLOBAL E LOCAL  x = 3; # global\nfunction foo(x)\n    x = 2*x; # local 1\n    function bar()\n        println(x) # x local 1 \u00e9 vis\u00edvel dentro do escopo local 2 (dentro de bar)\n    end\n    bar()\n    println(x)\nend\nfoo(x)\nprintln(x)  VETORIAIS  v = [1, 2, 3]\nu = [4, 5, 6]\n\ndisplay(u + v)\ndisplay(u - v)\n\n\n\nusing Plots\ngr()\n\nplot(collect(-5:0.1:5), x -> x^2 - 3*x - 2, label = \"equa\u00e7\u00e3o\", size = (400, 300),\n    xaxis = (\"x\", -5:1:10),\n    yaxis = (\"y\", -5:5:40))\nplot!(collect(-5:0.1:5), zero, label = \"reta zero\")  Dados  matriz = rand(Float64,6,6)\nvetor = rand(5)\nnome = \"Arquivos\"  Salvar arquivo em disco  save(\"arquivo_basico.jld\", \"matriz\", matriz, \"vetor\", vetor , \"nome\", nome)  Ler os dados do arquivo gravado em disco  arquivo_basico = load(\"arquivo_basico.jld\")  Deletar uma key e seus valores  delete!(arquivo_basico, \"vetor\")",
            "title": "JULIA"
        },
        {
            "location": "/#vala",
            "text": "DEFINI\u00c7\u00c3O  Vala \u00e9 uma linguagem de programa\u00e7\u00e3o que habilita t\u00e9cnicas modernas \u00e0 serem usadas para escrever aplica\u00e7\u00f5es que rodam na plataforma Gnome, particulamente Glib e GObject.\n\nO c\u00f3digo ser\u00e1 em texto monoespa\u00e7ado, e os comandos ser\u00e3o todos prefaciados com o caractere $ do prompt.  COMENTARIOS  // O coment\u00e1rio continua at\u00e9 o final da linha\n\n/* O coment\u00e1rio dura entre os delimitadores */\n\n/**\n * Coment\u00e1rio de documenta\u00e7\u00e3o\n */  VARIAVEIS  const double MU_BOHR = 927.400915E-26;  TIPOS DE DADOS  string texto = \"Um conjunto de caracteres\";\nstring s = @\"$a * $b = $(a * b)\";\n\nint a = 6, b = 7;\nbool b = bool.parse(\"false\");\nfloat percentile = 0.75f  OPERADORES  ARITMETICOS\n+, -, /, *, %\n+=, -=, /=, *=, %=\n\nCOMPARA\u00c7\u00c3O\n<, >, >=, <=, !=\n\nRELACIONAIS\n!, &&, ||  CASTING  int i = 10;\nfloat j = (float) i;  ARRAY  int[] a = new int[10];\nint[] b = { 2, 4, 6, 8 };\n\nint[] c = b[1:3];     // => { 4, 6 }  CONDICIONAL  IF\nif (a > 0) { stdout.printf(\"a is greater than 0\\n\"); }\nelse if (a < 0) { stdout.printf(\"a is less than 0\\n\"); }\nelse { stdout.printf(\"a is equal to 0\\n\"); }\n\n\nif (1 < a && a < 5) {}\n\nif (0 < a && a < b && b < c && c < d && d < 255) {\n    // do something\n}\n\nDe uma forma mais natural:\n\nif (1 < a < 5) {}\n\nif (0 < a < b < c < d < 255) {\n    // do something\n}  SWITCH\nswitch (a) {\ncase 1:\n    stdout.printf(\"one\\n\");\n    break;\ncase 2:\ncase 3:\n    stdout.printf(\"two or three\\n\");\n    break;\ndefault:\n    stdout.printf(\"unknown\\n\");\n    break;\n}  LA\u00c7O  WHILE\nwhile (a > b) { a--; }\n\nDO WHILE\ndo { a--; } while (a > b);\n\nFOR\nfor (int a = 0; a < 10; a++) { stdout.printf(\"%d\\n\", a); }\n\nFOREACH\nforeach (int a in int_array) { stdout.printf(\"%d\\n\", a); }  EXPRESSAO REGULAR  string email = \"tux@kernel.org\";\nif (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.match(email)) {\n    stdout.printf(\"Valid email address\\n\");\n}\n\nRegex regex = /foo/;\n\nvar r = /(foo|bar|cow)/;\nvar o = r.replace (\"this foo is great\", -1, 0, \"thing\");\nprint (\"%s\\n\", o);  CLASSE  class ClassName : SuperClassName, InterfaceName {\n}\n\n\n\n\nclass Demo.OlaMundo : GLib.Object {\n\n    public static int main(string[] args) {\n\n        stdout.printf(\"Ol\u00e1, Mundo\\n\");\n\n        return 0;\n    }\n}\n\n\npublic class Person : Object {\n\n    /* Construction properties */\n    public string name { get; construct; }\n    public int age { get; construct set; }\n\n    public Person(string name) {\n        Object(name: name);\n    }\n\n    public Person.with_age(string name, int years) {\n        Object(name: name, age: years);\n    }\n\n    construct {\n        // do anything else\n        stdout.printf(\"Welcome %s\\n\", this.name);\n    }\n}\n\n\npublic class TestClass : GLib.Object {\n\n    /* Fields */\n    public int first_data = 0;\n    private int second_data;\n\n    /* Constructor */\n    public TestClass() {\n        this.second_data = 5;\n    }\n\n    /* Method */\n    public int method_1() {\n        stdout.printf(\"private data: %d\", this.second_data);\n        return this.second_data;\n    }\n}  M\u00c9TODOS  int m\u00e9todo_nome(int arg1, Object arg2) {\n    return 1;\n}\n\nstring? nome_do_metodo(string? texto, Foo? foo, Bar bar) {\n    // ...\n}  CONSTRUTOR  public class Point : Object {\n    public double x;\n    public double y;\n\n    public Point(double x, double y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public Point.rectangular(double x, double y) {\n        this(x, y);\n    }\n\n    public Point.polar(double radius, double angle) {\n        this.rectangular(radius * Math.cos(angle), radius * Math.sin(angle));\n    }\n}\n\nvoid main() {\n    var p1 = new Point.rectangular(5.7, 1.2);\n    var p2 = new Point.polar(5.7, 1.2);\n}  DESTRUTOR  class Demo : Object {\n    ~Demo() {\n        stdout.printf(\"no destrutor\");\n    }\n}  POLIMORFISMO  class SuperClass : GLib.Object {\n    public void method_1() {\n        stdout.printf(\"SuperClass.method_1()\\n\");\n    }\n}\n\nclass SubClass : SuperClass {\n    public void method_1() {\n        stdout.printf(\"SubClass.method_1()\\n\");\n    }\n}\n\n\n\nclass SuperClass : GLib.Object {\n    public virtual void method_1() {\n        stdout.printf(\"SuperClass.method_1()\\n\");\n    }\n}\n\nclass SubClass : SuperClass {\n    public override void method_1() {\n        stdout.printf(\"SubClass.method_1()\\n\");\n    }\n}\n\n\nclass SuperClass : GLib.Object {\n    public virtual string prop_1 {\n        get {\n            return \"SuperClass.prop_1\";\n        }\n    }\n}\n\nclass SubClass : SuperClass {\n    public override string prop_1 {\n        get {\n            return \"SubClass.prop_1\";\n        }\n    }  CONVERS\u00c3O  /* definindo um apelido para um tipo b\u00e1sico (equivalente ao typedef int Integer em C)*/\n[[SimpleType](/SimpleType)] public struct Integer : uint { }\n\n/* Define um novo tipo de um container como GLib.List com elementos do tipo GLib.Value */\npublic class ValueList : GLib.List<GLib.Value> {\n\n        [CCode (has_construct_function = false)]\n        protected ValueList ();\n        public static GLib.Type get_type ();\n}\n\n\nButton b = widget as Button;\nButton b = (widget is Button) ? (Button) widget : null;  REFER\u00caNCIA  /* definindo uma classe */\nclass Track : GLib.Object {             /* herdando de 'GLib.Object' */\n    public double mass;                 /* um campo p\u00fablico */\n    public double name { get; set; }    /* uma propriedade p\u00fablica */\n    private bool terminated = false;    /* um campo privado */\n    public void terminate() {           /* um m\u00e9todo p\u00fablico */\n        terminated = true;\n    }\n}  DELEGA\u00c7\u00d5ES  delegate void DelegateType(int a);\n\ndelegate void DelegateType(int a);\n\nvoid f1(int a) {\n    stdout.printf(\"%d\\n\", a);\n}\n\nvoid f2(DelegateType d, int a) {\n    d(a);       // Chamando uma delega\u00e7ao\n}\n\nvoid main() {\n    f2(f1, 5);  // Passando um m\u00e9todo como argumento de delega\u00e7\u00e3o \u00e0 outro m\u00e9todo\n}\n\nclass Foo {\n\n    public void f1(int a) {\n        stdout.printf(\"a = %d\\n\", a);\n    }\n\n    delegate void DelegateType(int a);\n\n    public static int main(string[] args) {\n        Foo foo = new Foo();\n        DelegateType d1 = foo.f1;\n        d1(10);\n        return 0;\n    }\n}  INTERFACE  interface InterfaceName : SuperInterfaceName {\n}  NAMESPACE  namespace NameSpaceName {\n    // ...\n}\n\nusing NameSpaceName;  STRUCTS  struct NomeStruct {\n    public int a;\n}\n\n\nstruct Cor {\n    public double vermelho;\n    public double verde;\n    public double azul;\n}\n\nCor c2 = { 0.5, 0.5, 1.0 };\nCor c3 = Cor() {\n    red = 0.5,\n    green = 0.5,\n    blue = 1.0\n};\n\n// com infer\u00eancia de tipo var c4 = Cor();\nvar c5 = Color() {\n    red = 0.5,\n    green = 0.5,\n    blue = 1.0\n};  BIBLIOTECAS  public class MyLib : Object {\n\n    public void hello() {\n        stdout.printf(\"Hello World, MyLib\\n\");\n    }\n\n    public int sum(int x, int y) {\n        return x + y;\n    }\n}\n\n$ valac -C -H test.h --library test test.vala --basedir ./\n\n$ gcc --shared -fPIC -o libtest.so $(pkg-config --cflags --libs gobject-2.0) test.c\n\n\nvoid main() {\n    var test = new MyLib();\n    test.hello();\n    int x = 4, y = 5;\n    stdout.printf(\"The sum of %d and %d is %d\\n\", x, y, test.sum(x, y));\n}  COMANDOS  $ valac OlaMundo.vala\n$ ./OlaMundo  FERRAMENTAS  valac\n\nvalac \u00e9 o compilador Vala. Sua fun\u00e7\u00e3o principal \u00e9 transformar o c\u00f3digo Vala em c\u00f3digo C compil\u00e1vel, embora tamb\u00e9m possa automatizar todo o projeto de constru\u00e7\u00e3o e link em casos simples.\n\nUm exemplo simples:\n\n$ valac -o appname --pkg gee-1.0 file_name_1.vala file_name_2.vala\n\nO par\u00e2metro -o solicita que um arquivo de objeto seja criado, em vez de apenas produzir arquivos de origem C. A op\u00e7\u00e3o --pkg diz que essa compila\u00e7\u00e3o precisa de informa\u00e7\u00f5es do pacote gee-1.0. N\u00e3o \u00e9 necess\u00e1rio especificar detalhes sobre quais bibliotecas ser\u00e1 necess\u00e1rio vincular, o pacote tem essas informa\u00e7\u00f5es internamente. Finalmente, \u00e9 fornecida uma lista de arquivos de origem. Se voc\u00ea precisar de um processo de compila\u00e7\u00e3o mais complicado, use a op\u00e7\u00e3o -C para gerar arquivos C em vez de um bin\u00e1rio e continuar o processo manualmente ou atrav\u00e9s de um script.\nvapigen\n\nvapigen \u00e9 uma ferramenta para fazer Bindings. Ele cria arquivos VAPI a partir de metadados de uma biblioteca e qualquer informa\u00e7\u00e3o extra necess\u00e1ria.",
            "title": "VALA"
        },
        {
            "location": "/about/",
            "text": "About \n\n\n\n\nEste ambiente foi idealizado por algu\u00e9m que buscavam uma forma de compartilhar experi\u00eancias com a comunidade amante de tecnologia. Tenho a miss\u00e3o de prov\u00ear conhecimentos conforme meu ponto de vista para os profissionais de Tecnologia da Informa\u00e7\u00e3o. \n\n\nPrezo o respeito ao pr\u00f3ximo, n\u00e3o fa\u00e7o nenhum tipo de discrimina\u00e7\u00e3o. Tenho um compromisso s\u00e9rio com a \u00e9tica, a verdade e a justi\u00e7a. N\u00e3o discuto pol\u00edtica, religi\u00e3o ou posicionamentos ideol\u00f3gicos. \n\n\nAcima de tudo assumo compromisso de apresentar materiais altamente qualificados, mas deixo claro que n\u00e3o sou dono da verdade. Caso haja diverg\u00eancia em rela\u00e7\u00e3o ao material apresentado sinta-se a vontade para enviar sugest\u00f5es ou cr\u00edticas atrav\u00e9s de nossa rede de contato. Fico feliz em receber sugest\u00f5es e criticas, pois sei que s\u00f3 assim podemos evoluir como pessoa e profissional.\n\n\n \nE-mail:\n cleibp@gmail.com",
            "title": "About"
        },
        {
            "location": "/about/#about",
            "text": "Este ambiente foi idealizado por algu\u00e9m que buscavam uma forma de compartilhar experi\u00eancias com a comunidade amante de tecnologia. Tenho a miss\u00e3o de prov\u00ear conhecimentos conforme meu ponto de vista para os profissionais de Tecnologia da Informa\u00e7\u00e3o.   Prezo o respeito ao pr\u00f3ximo, n\u00e3o fa\u00e7o nenhum tipo de discrimina\u00e7\u00e3o. Tenho um compromisso s\u00e9rio com a \u00e9tica, a verdade e a justi\u00e7a. N\u00e3o discuto pol\u00edtica, religi\u00e3o ou posicionamentos ideol\u00f3gicos.   Acima de tudo assumo compromisso de apresentar materiais altamente qualificados, mas deixo claro que n\u00e3o sou dono da verdade. Caso haja diverg\u00eancia em rela\u00e7\u00e3o ao material apresentado sinta-se a vontade para enviar sugest\u00f5es ou cr\u00edticas atrav\u00e9s de nossa rede de contato. Fico feliz em receber sugest\u00f5es e criticas, pois sei que s\u00f3 assim podemos evoluir como pessoa e profissional.    E-mail:  cleibp@gmail.com",
            "title": " About "
        }
    ]
}